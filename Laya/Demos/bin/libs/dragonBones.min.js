"use strict";var dragonBones;(function(t){})(dragonBones||(dragonBones={}));var dragonBones;(function(i){class e{constructor(t){this._clock=new i.WorldClock;this._events=[];this._objects=[];this._eventManager=null;this._eventManager=t;console.info(`DragonBones: ${e.VERSION}\nWebsite: http://dragonbones.com/\nSource and Demo: https://github.com/DragonBones/`)}advanceTime(t){if(this._objects.length>0){for(const e of this._objects){e.returnToPool()}this._objects.length=0}this._clock.advanceTime(t);if(this._events.length>0){for(let t=0;t<this._events.length;++t){const s=this._events[t];const a=s.armature;if(a._armatureData!==null){a.eventDispatcher.dispatchDBEvent(s.type,s);if(s.type===i.EventObject.SOUND_EVENT){this._eventManager.dispatchDBEvent(s.type,s)}}this.bufferObject(s)}this._events.length=0}}bufferEvent(t){if(this._events.indexOf(t)<0){this._events.push(t)}}bufferObject(t){if(this._objects.indexOf(t)<0){this._objects.push(t)}}get clock(){return this._clock}get eventManager(){return this._eventManager}}e.VERSION="5.6.300";e.yDown=true;e.debug=false;e.debugDraw=false;e.webAssembly=false;i.DragonBones=e})(dragonBones||(dragonBones={}));if(typeof global==="undefined"){var global=window}if(!console.warn){console.warn=function(){}}if(!console.assert){console.assert=function(){}}if(!Date.now){Date.now=function t(){return(new Date).getTime()}}var __extends=function(t,e){function s(){this.constructor=t}for(var a in e){if(e.hasOwnProperty(a)){t[a]=e[a]}}s.prototype=e.prototype,t.prototype=new s};var dragonBones;(function(t){class i{constructor(){this.hashCode=i._hashCode++;this._isInPool=false}static _returnObject(t){const e=String(t.constructor);const s=e in i._maxCountMap?i._maxCountMap[e]:i._defaultMaxCount;const a=i._poolsMap[e]=i._poolsMap[e]||[];if(a.length<s){if(!t._isInPool){t._isInPool=true;a.push(t)}else{console.warn("The object is already in the pool.")}}else{}}static toString(){throw new Error}static setMaxCount(t,e){if(e<0||e!==e){e=0}if(t!==null){const s=String(t);const a=s in i._poolsMap?i._poolsMap[s]:null;if(a!==null&&a.length>e){a.length=e}i._maxCountMap[s]=e}else{i._defaultMaxCount=e;for(let t in i._poolsMap){const a=i._poolsMap[t];if(a.length>e){a.length=e}if(t in i._maxCountMap){i._maxCountMap[t]=e}}}}static clearPool(t=null){if(t!==null){const e=String(t);const s=e in i._poolsMap?i._poolsMap[e]:null;if(s!==null&&s.length>0){s.length=0}}else{for(let t in i._poolsMap){const s=i._poolsMap[t];s.length=0}}}static borrowObject(t){const e=String(t);const s=e in i._poolsMap?i._poolsMap[e]:null;if(s!==null&&s.length>0){const a=s.pop();a._isInPool=false;return a}const a=new t;a._onClear();return a}returnToPool(){this._onClear();i._returnObject(this)}}i._hashCode=0;i._defaultMaxCount=3e3;i._maxCountMap={};i._poolsMap={};t.BaseObject=i})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e{constructor(t=1,e=0,s=0,a=1,i=0,r=0){this.a=t;this.b=e;this.c=s;this.d=a;this.tx=i;this.ty=r}toString(){return"[object dragonBones.Matrix] a:"+this.a+" b:"+this.b+" c:"+this.c+" d:"+this.d+" tx:"+this.tx+" ty:"+this.ty}copyFrom(t){this.a=t.a;this.b=t.b;this.c=t.c;this.d=t.d;this.tx=t.tx;this.ty=t.ty;return this}copyFromArray(t,e=0){this.a=t[e];this.b=t[e+1];this.c=t[e+2];this.d=t[e+3];this.tx=t[e+4];this.ty=t[e+5];return this}identity(){this.a=this.d=1;this.b=this.c=0;this.tx=this.ty=0;return this}concat(t){let e=this.a*t.a;let s=0;let a=0;let i=this.d*t.d;let r=this.tx*t.a+t.tx;let n=this.ty*t.d+t.ty;if(this.b!==0||this.c!==0){e+=this.b*t.c;s+=this.b*t.d;a+=this.c*t.a;i+=this.c*t.b}if(t.b!==0||t.c!==0){s+=this.a*t.b;a+=this.d*t.c;r+=this.ty*t.c;n+=this.tx*t.b}this.a=e;this.b=s;this.c=a;this.d=i;this.tx=r;this.ty=n;return this}invert(){let t=this.a;let e=this.b;let s=this.c;let a=this.d;const i=this.tx;const r=this.ty;if(e===0&&s===0){this.b=this.c=0;if(t===0||a===0){this.a=this.b=this.tx=this.ty=0}else{t=this.a=1/t;a=this.d=1/a;this.tx=-t*i;this.ty=-a*r}return this}let n=t*a-e*s;if(n===0){this.a=this.d=1;this.b=this.c=0;this.tx=this.ty=0;return this}n=1/n;let o=this.a=a*n;e=this.b=-e*n;s=this.c=-s*n;a=this.d=t*n;this.tx=-(o*i+s*r);this.ty=-(e*i+a*r);return this}transformPoint(t,e,s,a=false){s.x=this.a*t+this.c*e;s.y=this.b*t+this.d*e;if(!a){s.x+=this.tx;s.y+=this.ty}}transformRectangle(t,e=false){const s=this.a;const a=this.b;const i=this.c;const r=this.d;const n=e?0:this.tx;const o=e?0:this.ty;const l=t.x;const h=t.y;const _=l+t.width;const f=h+t.height;let c=s*l+i*h+n;let u=a*l+r*h+o;let m=s*_+i*h+n;let d=a*_+r*h+o;let p=s*_+i*f+n;let g=a*_+r*f+o;let y=s*l+i*f+n;let D=a*l+r*f+o;let T=0;if(c>m){T=c;c=m;m=T}if(p>y){T=p;p=y;y=T}t.x=Math.floor(c<p?c:p);t.width=Math.ceil((m>y?m:y)-t.x);if(u>d){T=u;u=d;d=T}if(g>D){T=g;g=D;D=T}t.y=Math.floor(u<g?u:g);t.height=Math.ceil((d>D?d:D)-t.y)}}t.Matrix=e})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class r{constructor(t=0,e=0,s=0,a=0,i=1,r=1){this.x=t;this.y=e;this.skew=s;this.rotation=a;this.scaleX=i;this.scaleY=r}static normalizeRadian(t){t=(t+Math.PI)%(Math.PI*2);t+=t>0?-Math.PI:Math.PI;return t}toString(){return"[object dragonBones.Transform] x:"+this.x+" y:"+this.y+" skewX:"+this.skew*180/Math.PI+" skewY:"+this.rotation*180/Math.PI+" scaleX:"+this.scaleX+" scaleY:"+this.scaleY}copyFrom(t){this.x=t.x;this.y=t.y;this.skew=t.skew;this.rotation=t.rotation;this.scaleX=t.scaleX;this.scaleY=t.scaleY;return this}identity(){this.x=this.y=0;this.skew=this.rotation=0;this.scaleX=this.scaleY=1;return this}add(t){this.x+=t.x;this.y+=t.y;this.skew+=t.skew;this.rotation+=t.rotation;this.scaleX*=t.scaleX;this.scaleY*=t.scaleY;return this}minus(t){this.x-=t.x;this.y-=t.y;this.skew-=t.skew;this.rotation-=t.rotation;this.scaleX/=t.scaleX;this.scaleY/=t.scaleY;return this}fromMatrix(t){const e=this.scaleX,s=this.scaleY;const a=r.PI_Q;this.x=t.tx;this.y=t.ty;this.rotation=Math.atan(t.b/t.a);let i=Math.atan(-t.c/t.d);this.scaleX=this.rotation>-a&&this.rotation<a?t.a/Math.cos(this.rotation):t.b/Math.sin(this.rotation);this.scaleY=i>-a&&i<a?t.d/Math.cos(i):-t.c/Math.sin(i);if(e>=0&&this.scaleX<0){this.scaleX=-this.scaleX;this.rotation=this.rotation-Math.PI}if(s>=0&&this.scaleY<0){this.scaleY=-this.scaleY;i=i-Math.PI}this.skew=i-this.rotation;return this}toMatrix(t){if(this.rotation===0){t.a=1;t.b=0}else{t.a=Math.cos(this.rotation);t.b=Math.sin(this.rotation)}if(this.skew===0){t.c=-t.b;t.d=t.a}else{t.c=-Math.sin(this.skew+this.rotation);t.d=Math.cos(this.skew+this.rotation)}if(this.scaleX!==1){t.a*=this.scaleX;t.b*=this.scaleX}if(this.scaleY!==1){t.c*=this.scaleY;t.d*=this.scaleY}t.tx=this.x;t.ty=this.y;return this}}r.PI=Math.PI;r.PI_D=Math.PI*2;r.PI_H=Math.PI/2;r.PI_Q=Math.PI/4;r.RAD_DEG=180/Math.PI;r.DEG_RAD=Math.PI/180;t.Transform=r})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e{constructor(t=1,e=1,s=1,a=1,i=0,r=0,n=0,o=0){this.alphaMultiplier=t;this.redMultiplier=e;this.greenMultiplier=s;this.blueMultiplier=a;this.alphaOffset=i;this.redOffset=r;this.greenOffset=n;this.blueOffset=o}copyFrom(t){this.alphaMultiplier=t.alphaMultiplier;this.redMultiplier=t.redMultiplier;this.greenMultiplier=t.greenMultiplier;this.blueMultiplier=t.blueMultiplier;this.alphaOffset=t.alphaOffset;this.redOffset=t.redOffset;this.greenOffset=t.greenOffset;this.blueOffset=t.blueOffset}identity(){this.alphaMultiplier=this.redMultiplier=this.greenMultiplier=this.blueMultiplier=1;this.alphaOffset=this.redOffset=this.greenOffset=this.blueOffset=0}}t.ColorTransform=e})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e{constructor(t=0,e=0){this.x=t;this.y=e}copyFrom(t){this.x=t.x;this.y=t.y}clear(){this.x=this.y=0}}t.Point=e})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e{constructor(t=0,e=0,s=0,a=0){this.x=t;this.y=e;this.width=s;this.height=a}copyFrom(t){this.x=t.x;this.y=t.y;this.width=t.width;this.height=t.height}clear(){this.x=this.y=0;this.width=this.height=0}}t.Rectangle=e})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e extends t.BaseObject{constructor(){super(...arguments);this.ints=[];this.floats=[];this.strings=[]}static toString(){return"[class dragonBones.UserData]"}_onClear(){this.ints.length=0;this.floats.length=0;this.strings.length=0}addInt(t){this.ints.push(t)}addFloat(t){this.floats.push(t)}addString(t){this.strings.push(t)}getInt(t=0){return t>=0&&t<this.ints.length?this.ints[t]:0}getFloat(t=0){return t>=0&&t<this.floats.length?this.floats[t]:0}getString(t=0){return t>=0&&t<this.strings.length?this.strings[t]:""}}t.UserData=e;class s extends t.BaseObject{constructor(){super(...arguments);this.data=null}static toString(){return"[class dragonBones.ActionData]"}_onClear(){if(this.data!==null){this.data.returnToPool()}this.type=0;this.name="";this.bone=null;this.slot=null;this.data=null}}t.ActionData=s})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e extends t.BaseObject{constructor(){super(...arguments);this.frameIndices=[];this.cachedFrames=[];this.armatureNames=[];this.armatures={};this.userData=null}static toString(){return"[class dragonBones.DragonBonesData]"}_onClear(){for(let t in this.armatures){this.armatures[t].returnToPool();delete this.armatures[t]}if(this.userData!==null){this.userData.returnToPool()}this.autoSearch=false;this.frameRate=0;this.version="";this.name="";this.stage=null;this.frameIndices.length=0;this.cachedFrames.length=0;this.armatureNames.length=0;this.binary=null;this.intArray=null;this.floatArray=null;this.frameIntArray=null;this.frameFloatArray=null;this.frameArray=null;this.timelineArray=null;this.userData=null}addArmature(t){if(t.name in this.armatures){console.warn("Same armature: "+t.name);return}t.parent=this;this.armatures[t.name]=t;this.armatureNames.push(t.name)}getArmature(t){return t in this.armatures?this.armatures[t]:null}dispose(){console.warn("已废弃");this.returnToPool()}}t.DragonBonesData=e})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e extends t.BaseObject{constructor(){super(...arguments);this.aabb=new t.Rectangle;this.animationNames=[];this.sortedBones=[];this.sortedSlots=[];this.defaultActions=[];this.actions=[];this.bones={};this.slots={};this.constraints={};this.skins={};this.animations={};this.canvas=null;this.userData=null}static toString(){return"[class dragonBones.ArmatureData]"}_onClear(){for(const t of this.defaultActions){t.returnToPool()}for(const t of this.actions){t.returnToPool()}for(let t in this.bones){this.bones[t].returnToPool();delete this.bones[t]}for(let t in this.slots){this.slots[t].returnToPool();delete this.slots[t]}for(let t in this.constraints){this.constraints[t].returnToPool();delete this.constraints[t]}for(let t in this.skins){this.skins[t].returnToPool();delete this.skins[t]}for(let t in this.animations){this.animations[t].returnToPool();delete this.animations[t]}if(this.canvas!==null){this.canvas.returnToPool()}if(this.userData!==null){this.userData.returnToPool()}this.type=0;this.frameRate=0;this.cacheFrameRate=0;this.scale=1;this.name="";this.aabb.clear();this.animationNames.length=0;this.sortedBones.length=0;this.sortedSlots.length=0;this.defaultActions.length=0;this.actions.length=0;this.defaultSkin=null;this.defaultAnimation=null;this.canvas=null;this.userData=null;this.parent=null}sortBones(){const t=this.sortedBones.length;if(t<=0){return}const s=this.sortedBones.concat();let a=0;let i=0;this.sortedBones.length=0;while(i<t){const r=s[a++];if(a>=t){a=0}if(this.sortedBones.indexOf(r)>=0){continue}let e=false;for(let t in this.constraints){const n=this.constraints[t];if(n.root===r&&this.sortedBones.indexOf(n.target)<0){e=true;break}}if(e){continue}if(r.parent!==null&&this.sortedBones.indexOf(r.parent)<0){continue}this.sortedBones.push(r);i++}}cacheFrames(t){if(this.cacheFrameRate>0){return}this.cacheFrameRate=t;for(let t in this.animations){this.animations[t].cacheFrames(this.cacheFrameRate)}}setCacheFrame(t,e){const s=this.parent.cachedFrames;let a=s.length;s.length+=10;s[a]=t.a;s[a+1]=t.b;s[a+2]=t.c;s[a+3]=t.d;s[a+4]=t.tx;s[a+5]=t.ty;s[a+6]=e.rotation;s[a+7]=e.skew;s[a+8]=e.scaleX;s[a+9]=e.scaleY;return a}getCacheFrame(t,e,s){const a=this.parent.cachedFrames;t.a=a[s];t.b=a[s+1];t.c=a[s+2];t.d=a[s+3];t.tx=a[s+4];t.ty=a[s+5];e.rotation=a[s+6];e.skew=a[s+7];e.scaleX=a[s+8];e.scaleY=a[s+9];e.x=t.tx;e.y=t.ty}addBone(t){if(t.name in this.bones){console.warn("Same bone: "+t.name);return}this.bones[t.name]=t;this.sortedBones.push(t)}addSlot(t){if(t.name in this.slots){console.warn("Same slot: "+t.name);return}this.slots[t.name]=t;this.sortedSlots.push(t)}addConstraint(t){if(t.name in this.constraints){console.warn("Same constraint: "+t.name);return}this.constraints[t.name]=t}addSkin(t){if(t.name in this.skins){console.warn("Same skin: "+t.name);return}t.parent=this;this.skins[t.name]=t;if(this.defaultSkin===null){this.defaultSkin=t}if(t.name==="default"){this.defaultSkin=t}}addAnimation(t){if(t.name in this.animations){console.warn("Same animation: "+t.name);return}t.parent=this;this.animations[t.name]=t;this.animationNames.push(t.name);if(this.defaultAnimation===null){this.defaultAnimation=t}}addAction(t,e){if(e){this.defaultActions.push(t)}else{this.actions.push(t)}}getBone(t){return t in this.bones?this.bones[t]:null}getSlot(t){return t in this.slots?this.slots[t]:null}getConstraint(t){return t in this.constraints?this.constraints[t]:null}getSkin(t){return t in this.skins?this.skins[t]:null}getMesh(t,e,s){const a=this.getSkin(t);if(a===null){return null}return a.getDisplay(e,s)}getAnimation(t){return t in this.animations?this.animations[t]:null}}t.ArmatureData=e;class s extends t.BaseObject{constructor(){super(...arguments);this.transform=new t.Transform;this.userData=null}static toString(){return"[class dragonBones.BoneData]"}_onClear(){if(this.userData!==null){this.userData.returnToPool()}this.inheritTranslation=false;this.inheritRotation=false;this.inheritScale=false;this.inheritReflection=false;this.type=0;this.length=0;this.name="";this.transform.identity();this.userData=null;this.parent=null}}t.BoneData=s;class a extends s{constructor(){super(...arguments);this.vertices=[]}static toString(){return"[class dragonBones.SurfaceData]"}_onClear(){super._onClear();this.type=1;this.segmentX=0;this.segmentY=0;this.vertices.length=0}}t.SurfaceData=a;class i extends t.BaseObject{constructor(){super(...arguments);this.color=null;this.userData=null}static createColor(){return new t.ColorTransform}static toString(){return"[class dragonBones.SlotData]"}_onClear(){if(this.userData!==null){this.userData.returnToPool()}this.blendMode=0;this.displayIndex=0;this.zOrder=0;this.name="";this.color=null;this.userData=null;this.parent=null}}i.DEFAULT_COLOR=new t.ColorTransform;t.SlotData=i})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e extends t.BaseObject{static toString(){return"[class dragonBones.CanvasData]"}_onClear(){this.hasBackground=false;this.color=0;this.x=0;this.y=0;this.width=0;this.height=0}}t.CanvasData=e})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e extends t.BaseObject{constructor(){super(...arguments);this.displays={}}static toString(){return"[class dragonBones.SkinData]"}_onClear(){for(let t in this.displays){const e=this.displays[t];for(const s of e){if(s!==null){s.returnToPool()}}delete this.displays[t]}this.name="";this.parent=null}addDisplay(t,e){if(!(t in this.displays)){this.displays[t]=[]}if(e!==null){e.parent=this}const s=this.displays[t];s.push(e)}getDisplay(t,e){const s=this.getDisplays(t);if(s!==null){for(const a of s){if(a!==null&&a.name===e){return a}}}return null}getDisplays(t){if(!(t in this.displays)){return null}return this.displays[t]}}t.SkinData=e})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e extends t.BaseObject{_onClear(){this.order=0;this.name="";this.type=0;this.target=null;this.root=null;this.bone=null}}t.ConstraintData=e;class s extends e{static toString(){return"[class dragonBones.IKConstraintData]"}_onClear(){super._onClear();this.scaleEnabled=false;this.bendPositive=false;this.weight=1}}t.IKConstraintData=s;class a extends e{constructor(){super(...arguments);this.bones=[]}static toString(){return"[class dragonBones.PathConstraintData]"}_onClear(){super._onClear();this.pathSlot=null;this.pathDisplayData=null;this.bones.length=0;this.positionMode=0;this.spacingMode=1;this.rotateMode=1;this.position=0;this.spacing=0;this.rotateOffset=0;this.rotateMix=0;this.translateMix=0}AddBone(t){this.bones.push(t)}}t.PathConstraintData=a})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e{constructor(){this.weight=null}clear(){if(!this.isShared&&this.weight!==null){this.weight.returnToPool()}this.isShared=false;this.inheritDeform=false;this.offset=0;this.data=null;this.weight=null}shareFrom(t){this.isShared=true;this.offset=t.offset;this.weight=t.weight}}t.VerticesData=e;class s extends t.BaseObject{constructor(){super(...arguments);this.transform=new t.Transform}_onClear(){this.name="";this.path="";this.transform.identity();this.parent=null}}t.DisplayData=s;class a extends s{constructor(){super(...arguments);this.pivot=new t.Point}static toString(){return"[class dragonBones.ImageDisplayData]"}_onClear(){super._onClear();this.type=0;this.pivot.clear();this.texture=null}}t.ImageDisplayData=a;class i extends s{constructor(){super(...arguments);this.actions=[]}static toString(){return"[class dragonBones.ArmatureDisplayData]"}_onClear(){super._onClear();for(const t of this.actions){t.returnToPool()}this.type=1;this.inheritAnimation=false;this.actions.length=0;this.armature=null}addAction(t){this.actions.push(t)}}t.ArmatureDisplayData=i;class r extends s{constructor(){super(...arguments);this.vertices=new e}static toString(){return"[class dragonBones.MeshDisplayData]"}_onClear(){super._onClear();this.type=2;this.vertices.clear();this.texture=null}}t.MeshDisplayData=r;class n extends s{constructor(){super(...arguments);this.boundingBox=null}static toString(){return"[class dragonBones.BoundingBoxDisplayData]"}_onClear(){super._onClear();if(this.boundingBox!==null){this.boundingBox.returnToPool()}this.type=3;this.boundingBox=null}}t.BoundingBoxDisplayData=n;class o extends s{constructor(){super(...arguments);this.vertices=new e;this.curveLengths=[]}static toString(){return"[class dragonBones.PathDisplayData]"}_onClear(){super._onClear();this.type=4;this.closed=false;this.constantSpeed=false;this.vertices.clear();this.curveLengths.length=0}}t.PathDisplayData=o;class l extends t.BaseObject{constructor(){super(...arguments);this.bones=[]}static toString(){return"[class dragonBones.WeightData]"}_onClear(){this.count=0;this.offset=0;this.bones.length=0}addBone(t){this.bones.push(t)}}t.WeightData=l})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e extends t.BaseObject{_onClear(){this.color=0;this.width=0;this.height=0}}t.BoundingBoxData=e;class g extends e{static toString(){return"[class dragonBones.RectangleBoundingBoxData]"}static _computeOutCode(t,e,s,a,i,r){let n=0;if(t<s){n|=1}else if(t>i){n|=2}if(e<a){n|=4}else if(e>r){n|=8}return n}static rectangleIntersectsSegment(a,i,r,n,o,l,h,_,t=null,e=null,f=null){const s=a>o&&a<h&&i>l&&i<_;const c=r>o&&r<h&&n>l&&n<_;if(s&&c){return-1}let u=0;let m=g._computeOutCode(a,i,o,l,h,_);let d=g._computeOutCode(r,n,o,l,h,_);while(true){if((m|d)===0){u=2;break}else if((m&d)!==0){break}let t=0;let e=0;let s=0;const p=m!==0?m:d;if((p&4)!==0){t=a+(r-a)*(l-i)/(n-i);e=l;if(f!==null){s=-Math.PI*.5}}else if((p&8)!==0){t=a+(r-a)*(_-i)/(n-i);e=_;if(f!==null){s=Math.PI*.5}}else if((p&2)!==0){e=i+(n-i)*(h-a)/(r-a);t=h;if(f!==null){s=0}}else if((p&1)!==0){e=i+(n-i)*(o-a)/(r-a);t=o;if(f!==null){s=Math.PI}}if(p===m){a=t;i=e;m=g._computeOutCode(a,i,o,l,h,_);if(f!==null){f.x=s}}else{r=t;n=e;d=g._computeOutCode(r,n,o,l,h,_);if(f!==null){f.y=s}}}if(u){if(s){u=2;if(t!==null){t.x=r;t.y=n}if(e!==null){e.x=r;e.y=r}if(f!==null){f.x=f.y+Math.PI}}else if(c){u=1;if(t!==null){t.x=a;t.y=i}if(e!==null){e.x=a;e.y=i}if(f!==null){f.y=f.x+Math.PI}}else{u=3;if(t!==null){t.x=a;t.y=i}if(e!==null){e.x=r;e.y=n}}}return u}_onClear(){super._onClear();this.type=0}containsPoint(t,e){const s=this.width*.5;if(t>=-s&&t<=s){const a=this.height*.5;if(e>=-a&&e<=a){return true}}return false}intersectsSegment(t,e,s,a,i=null,r=null,n=null){const o=this.width*.5;const l=this.height*.5;const h=g.rectangleIntersectsSegment(t,e,s,a,-o,-l,o,l,i,r,n);return h}}t.RectangleBoundingBoxData=g;class l extends e{static toString(){return"[class dragonBones.EllipseData]"}static ellipseIntersectsSegment(t,e,s,a,i,r,n,o,l=null,h=null,_=null){const f=n/o;const c=f*f;e*=f;a*=f;const u=s-t;const m=a-e;const d=Math.sqrt(u*u+m*m);const p=u/d;const g=m/d;const y=(i-t)*p+(r-e)*g;const D=y*y;const T=t*t+e*e;const b=n*n;const A=b-T+D;let S=0;if(A>=0){const P=Math.sqrt(A);const x=y-P;const O=y+P;const B=x<0?-1:x<=d?0:1;const M=O<0?-1:O<=d?0:1;const E=B*M;if(E<0){return-1}else if(E===0){if(B===-1){S=2;s=t+O*p;a=(e+O*g)/f;if(l!==null){l.x=s;l.y=a}if(h!==null){h.x=s;h.y=a}if(_!==null){_.x=Math.atan2(a/b*c,s/b);_.y=_.x+Math.PI}}else if(M===1){S=1;t=t+x*p;e=(e+x*g)/f;if(l!==null){l.x=t;l.y=e}if(h!==null){h.x=t;h.y=e}if(_!==null){_.x=Math.atan2(e/b*c,t/b);_.y=_.x+Math.PI}}else{S=3;if(l!==null){l.x=t+x*p;l.y=(e+x*g)/f;if(_!==null){_.x=Math.atan2(l.y/b*c,l.x/b)}}if(h!==null){h.x=t+O*p;h.y=(e+O*g)/f;if(_!==null){_.y=Math.atan2(h.y/b*c,h.x/b)}}}}}return S}_onClear(){super._onClear();this.type=1}containsPoint(t,e){const s=this.width*.5;if(t>=-s&&t<=s){const a=this.height*.5;if(e>=-a&&e<=a){e*=s/a;return Math.sqrt(t*t+e*e)<=s}}return false}intersectsSegment(t,e,s,a,i=null,r=null,n=null){const o=l.ellipseIntersectsSegment(t,e,s,a,0,0,this.width*.5,this.height*.5,i,r,n);return o}}t.EllipseBoundingBoxData=l;class h extends e{constructor(){super(...arguments);this.vertices=[]}static toString(){return"[class dragonBones.PolygonBoundingBoxData]"}static polygonIntersectsSegment(e,s,a,i,r,t=null,n=null,o=null){if(e===a){e=a+1e-6}if(s===i){s=i+1e-6}const l=r.length;const h=e-a;const _=s-i;const f=e*i-s*a;let c=0;let u=r[l-2];let m=r[l-1];let d=0;let p=0;let g=0;let y=0;let D=0;let T=0;for(let t=0;t<l;t+=2){const b=r[t];const A=r[t+1];if(u===b){u=b+1e-4}if(m===A){m=A+1e-4}const S=u-b;const P=m-A;const x=u*A-m*b;const O=h*P-_*S;const B=(f*S-h*x)/O;if((B>=u&&B<=b||B>=b&&B<=u)&&(h===0||B>=e&&B<=a||B>=a&&B<=e)){const M=(f*P-_*x)/O;if((M>=m&&M<=A||M>=A&&M<=m)&&(_===0||M>=s&&M<=i||M>=i&&M<=s)){if(n!==null){let t=B-e;if(t<0){t=-t}if(c===0){d=t;p=t;g=B;y=M;D=B;T=M;if(o!==null){o.x=Math.atan2(A-m,b-u)-Math.PI*.5;o.y=o.x}}else{if(t<d){d=t;g=B;y=M;if(o!==null){o.x=Math.atan2(A-m,b-u)-Math.PI*.5}}if(t>p){p=t;D=B;T=M;if(o!==null){o.y=Math.atan2(A-m,b-u)-Math.PI*.5}}}c++}else{g=B;y=M;D=B;T=M;c++;if(o!==null){o.x=Math.atan2(A-m,b-u)-Math.PI*.5;o.y=o.x}break}}}u=b;m=A}if(c===1){if(t!==null){t.x=g;t.y=y}if(n!==null){n.x=g;n.y=y}if(o!==null){o.y=o.x+Math.PI}}else if(c>1){c++;if(t!==null){t.x=g;t.y=y}if(n!==null){n.x=D;n.y=T}}return c}_onClear(){super._onClear();this.type=2;this.x=0;this.y=0;this.vertices.length=0}containsPoint(a,i){let r=false;if(a>=this.x&&a<=this.width&&i>=this.y&&i<=this.height){for(let t=0,e=this.vertices.length,s=e-2;t<e;t+=2){const n=this.vertices[s+1];const o=this.vertices[t+1];if(o<i&&n>=i||n<i&&o>=i){const l=this.vertices[s];const h=this.vertices[t];if((i-o)*(l-h)/(n-o)+h<a){r=!r}}s=t}}return r}intersectsSegment(t,e,s,a,i=null,r=null,n=null){let o=0;if(g.rectangleIntersectsSegment(t,e,s,a,this.x,this.y,this.x+this.width,this.y+this.height,null,null,null)!==0){o=h.polygonIntersectsSegment(t,e,s,a,this.vertices,i,r,n)}return o}}t.PolygonBoundingBoxData=h})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e extends t.BaseObject{constructor(){super(...arguments);this.cachedFrames=[];this.boneTimelines={};this.surfaceTimelines={};this.slotTimelines={};this.constraintTimelines={};this.animationTimelines={};this.boneCachedFrameIndices={};this.slotCachedFrameIndices={};this.actionTimeline=null;this.zOrderTimeline=null}static toString(){return"[class dragonBones.AnimationData]"}_onClear(){for(let t in this.boneTimelines){for(const e of this.boneTimelines[t]){e.returnToPool()}delete this.boneTimelines[t]}for(let t in this.surfaceTimelines){for(const e of this.surfaceTimelines[t]){e.returnToPool()}delete this.surfaceTimelines[t]}for(let t in this.slotTimelines){for(const e of this.slotTimelines[t]){e.returnToPool()}delete this.slotTimelines[t]}for(let t in this.constraintTimelines){for(const e of this.constraintTimelines[t]){e.returnToPool()}delete this.constraintTimelines[t]}for(let t in this.animationTimelines){for(const e of this.animationTimelines[t]){e.returnToPool()}delete this.animationTimelines[t]}for(let t in this.boneCachedFrameIndices){delete this.boneCachedFrameIndices[t]}for(let t in this.slotCachedFrameIndices){delete this.slotCachedFrameIndices[t]}if(this.actionTimeline!==null){this.actionTimeline.returnToPool()}if(this.zOrderTimeline!==null){this.zOrderTimeline.returnToPool()}this.frameIntOffset=0;this.frameFloatOffset=0;this.frameOffset=0;this.frameCount=0;this.playTimes=0;this.duration=0;this.scale=1;this.fadeInTime=0;this.cacheFrameRate=0;this.name="";this.cachedFrames.length=0;this.actionTimeline=null;this.zOrderTimeline=null;this.parent=null}cacheFrames(t){if(this.cacheFrameRate>0){return}this.cacheFrameRate=Math.max(Math.ceil(t*this.scale),1);const e=Math.ceil(this.cacheFrameRate*this.duration)+1;this.cachedFrames.length=e;for(let t=0,e=this.cacheFrames.length;t<e;++t){this.cachedFrames[t]=false}for(const s of this.parent.sortedBones){const a=new Array(e);for(let t=0,e=a.length;t<e;++t){a[t]=-1}this.boneCachedFrameIndices[s.name]=a}for(const i of this.parent.sortedSlots){const a=new Array(e);for(let t=0,e=a.length;t<e;++t){a[t]=-1}this.slotCachedFrameIndices[i.name]=a}}addBoneTimeline(t,e){const s=t.name in this.boneTimelines?this.boneTimelines[t.name]:this.boneTimelines[t.name]=[];if(s.indexOf(e)<0){s.push(e)}}addSurfaceTimeline(t,e){const s=t.name in this.surfaceTimelines?this.surfaceTimelines[t.name]:this.surfaceTimelines[t.name]=[];if(s.indexOf(e)<0){s.push(e)}}addSlotTimeline(t,e){const s=t.name in this.slotTimelines?this.slotTimelines[t.name]:this.slotTimelines[t.name]=[];if(s.indexOf(e)<0){s.push(e)}}addConstraintTimeline(t,e){const s=t.name in this.constraintTimelines?this.constraintTimelines[t.name]:this.constraintTimelines[t.name]=[];if(s.indexOf(e)<0){s.push(e)}}addAnimationTimeline(t,e){const s=t in this.animationTimelines?this.animationTimelines[t]:this.animationTimelines[t]=[];if(s.indexOf(e)<0){s.push(e)}}getBoneTimelines(t){return t in this.boneTimelines?this.boneTimelines[t]:null}getSurfaceTimelines(t){return t in this.surfaceTimelines?this.surfaceTimelines[t]:null}getSlotTimelines(t){return t in this.slotTimelines?this.slotTimelines[t]:null}getConstraintTimelines(t){return t in this.constraintTimelines?this.constraintTimelines[t]:null}getAnimationTimelines(t){return t in this.animationTimelines?this.animationTimelines[t]:null}getBoneCachedFrameIndices(t){return t in this.boneCachedFrameIndices?this.boneCachedFrameIndices[t]:null}getSlotCachedFrameIndices(t){return t in this.slotCachedFrameIndices?this.slotCachedFrameIndices[t]:null}}t.AnimationData=e;class s extends t.BaseObject{static toString(){return"[class dragonBones.TimelineData]"}_onClear(){this.type=10;this.offset=0;this.frameIndicesOffset=-1}}t.TimelineData=s})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e extends t.BaseObject{constructor(){super(...arguments);this.boneMask=[]}static toString(){return"[class dragonBones.AnimationConfig]"}_onClear(){this.pauseFadeOut=true;this.fadeOutMode=4;this.fadeOutTweenType=1;this.fadeOutTime=-1;this.actionEnabled=true;this.additiveBlending=false;this.displayControl=true;this.pauseFadeIn=true;this.resetToPose=true;this.fadeInTweenType=1;this.playTimes=-1;this.layer=0;this.position=0;this.duration=-1;this.timeScale=-100;this.weight=1;this.fadeInTime=-1;this.autoFadeOutTime=-1;this.name="";this.animation="";this.group="";this.boneMask.length=0}clear(){this._onClear()}copyFrom(s){this.pauseFadeOut=s.pauseFadeOut;this.fadeOutMode=s.fadeOutMode;this.autoFadeOutTime=s.autoFadeOutTime;this.fadeOutTweenType=s.fadeOutTweenType;this.actionEnabled=s.actionEnabled;this.additiveBlending=s.additiveBlending;this.displayControl=s.displayControl;this.pauseFadeIn=s.pauseFadeIn;this.resetToPose=s.resetToPose;this.playTimes=s.playTimes;this.layer=s.layer;this.position=s.position;this.duration=s.duration;this.timeScale=s.timeScale;this.fadeInTime=s.fadeInTime;this.fadeOutTime=s.fadeOutTime;this.fadeInTweenType=s.fadeInTweenType;this.weight=s.weight;this.name=s.name;this.animation=s.animation;this.group=s.group;this.boneMask.length=s.boneMask.length;for(let t=0,e=this.boneMask.length;t<e;++t){this.boneMask[t]=s.boneMask[t]}}containsBoneMask(t){return this.boneMask.length===0||this.boneMask.indexOf(t)>=0}addBoneMask(t,e,s=true){const a=t.getBone(e);if(a===null){return}if(this.boneMask.indexOf(e)<0){this.boneMask.push(e)}if(s){for(const i of t.getBones()){if(this.boneMask.indexOf(i.name)<0&&a.contains(i)){this.boneMask.push(i.name)}}}}removeBoneMask(t,e,s=true){const a=this.boneMask.indexOf(e);if(a>=0){this.boneMask.splice(a,1)}if(s){const i=t.getBone(e);if(i!==null){if(this.boneMask.length>0){for(const r of t.getBones()){const a=this.boneMask.indexOf(r.name);if(a>=0&&i.contains(r)){this.boneMask.splice(a,1)}}}else{for(const r of t.getBones()){if(r===i){continue}if(!i.contains(r)){this.boneMask.push(r.name)}}}}}}}t.AnimationConfig=e})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e extends t.BaseObject{constructor(){super(...arguments);this.textures={}}_onClear(){for(let t in this.textures){this.textures[t].returnToPool();delete this.textures[t]}this.autoSearch=false;this.width=0;this.height=0;this.scale=1;this.name="";this.imagePath=""}copyFrom(e){this.autoSearch=e.autoSearch;this.scale=e.scale;this.width=e.width;this.height=e.height;this.name=e.name;this.imagePath=e.imagePath;for(let t in this.textures){this.textures[t].returnToPool();delete this.textures[t]}for(let t in e.textures){const s=this.createTexture();s.copyFrom(e.textures[t]);this.textures[t]=s}}addTexture(t){if(t.name in this.textures){console.warn("Same texture: "+t.name);return}t.parent=this;this.textures[t.name]=t}getTexture(t){return t in this.textures?this.textures[t]:null}}t.TextureAtlasData=e;class s extends t.BaseObject{constructor(){super(...arguments);this.region=new t.Rectangle;this.frame=null}static createRectangle(){return new t.Rectangle}_onClear(){this.rotated=false;this.name="";this.region.clear();this.parent=null;this.frame=null}copyFrom(t){this.rotated=t.rotated;this.name=t.name;this.region.copyFrom(t.region);this.parent=t.parent;if(this.frame===null&&t.frame!==null){this.frame=s.createRectangle()}else if(this.frame!==null&&t.frame===null){this.frame=null}if(this.frame!==null&&t.frame!==null){this.frame.copyFrom(t.frame)}}}t.TextureData=s})(dragonBones||(dragonBones={}));var dragonBones;(function(i){class n extends i.BaseObject{constructor(){super(...arguments);this._bones=[];this._slots=[];this._constraints=[];this._actions=[];this._animation=null;this._proxy=null;this._replaceTextureAtlasData=null;this._clock=null}static toString(){return"[class dragonBones.Armature]"}static _onSortSlots(t,e){return t._zOrder>e._zOrder?1:-1}_onClear(){if(this._clock!==null){this._clock.remove(this)}for(const t of this._bones){t.returnToPool()}for(const e of this._slots){e.returnToPool()}for(const s of this._constraints){s.returnToPool()}for(const a of this._actions){a.returnToPool()}if(this._animation!==null){this._animation.returnToPool()}if(this._proxy!==null){this._proxy.dbClear()}if(this._replaceTextureAtlasData!==null){this._replaceTextureAtlasData.returnToPool()}this.inheritAnimation=true;this.userData=null;this._lockUpdate=false;this._slotsDirty=true;this._zOrderDirty=false;this._flipX=false;this._flipY=false;this._cacheFrameIndex=-1;this._bones.length=0;this._slots.length=0;this._constraints.length=0;this._actions.length=0;this._armatureData=null;this._animation=null;this._proxy=null;this._display=null;this._replaceTextureAtlasData=null;this._replacedTexture=null;this._dragonBones=null;this._clock=null;this._parent=null}_sortZOrder(s,a){const i=this._armatureData.sortedSlots;const r=s===null;if(this._zOrderDirty||!r){for(let t=0,e=i.length;t<e;++t){const n=r?t:s[a+t];if(n<0||n>=e){continue}const o=i[n];const l=this.getSlot(o.name);if(l!==null){l._setZorder(t)}}this._slotsDirty=true;this._zOrderDirty=!r}}_addBone(t){if(this._bones.indexOf(t)<0){this._bones.push(t)}}_addSlot(t){if(this._slots.indexOf(t)<0){this._slots.push(t)}}_addConstraint(t){if(this._constraints.indexOf(t)<0){this._constraints.push(t)}}_bufferAction(t,e){if(this._actions.indexOf(t)<0){if(e){this._actions.push(t)}else{this._actions.unshift(t)}}}dispose(){if(this._armatureData!==null){this._lockUpdate=true;this._dragonBones.bufferObject(this)}}init(t,e,s,a){if(this._armatureData!==null){return}this._armatureData=t;this._animation=i.BaseObject.borrowObject(i.Animation);this._proxy=e;this._display=s;this._dragonBones=a;this._proxy.dbInit(this);this._animation.init(this);this._animation.animations=this._armatureData.animations}advanceTime(t){if(this._lockUpdate){return}if(this._armatureData===null){console.warn("The armature has been disposed.");return}else if(this._armatureData.parent===null){console.warn("The armature data has been disposed.\nPlease make sure dispose armature before call factory.clear().");return}const e=this._cacheFrameIndex;this._animation.advanceTime(t);if(this._slotsDirty){this._slotsDirty=false;this._slots.sort(n._onSortSlots)}if(this._cacheFrameIndex<0||this._cacheFrameIndex!==e){let t=0,e=0;for(t=0,e=this._bones.length;t<e;++t){this._bones[t].update(this._cacheFrameIndex)}for(t=0,e=this._slots.length;t<e;++t){this._slots[t].update(this._cacheFrameIndex)}}if(this._actions.length>0){this._lockUpdate=true;for(const s of this._actions){const a=s.actionData;if(a!==null){if(a.type===0){if(s.slot!==null){const i=s.slot.childArmature;if(i!==null){i.animation.fadeIn(a.name)}}else if(s.bone!==null){for(const r of this.getSlots()){if(r.parent===s.bone){const i=r.childArmature;if(i!==null){i.animation.fadeIn(a.name)}}}}else{this._animation.fadeIn(a.name)}}}s.returnToPool()}this._actions.length=0;this._lockUpdate=false}this._proxy.dbUpdate()}invalidUpdate(t=null,e=false){if(t!==null&&t.length>0){const s=this.getBone(t);if(s!==null){s.invalidUpdate();if(e){for(const a of this._slots){if(a.parent===s){a.invalidUpdate()}}}}}else{for(const s of this._bones){s.invalidUpdate()}if(e){for(const a of this._slots){a.invalidUpdate()}}}}containsPoint(t,e){for(const s of this._slots){if(s.containsPoint(t,e)){return s}}return null}intersectsSegment(e,s,t,a,i=null,r=null,n=null){const o=e===t;let l=0;let h=0;let _=0;let f=0;let c=0;let u=0;let m=0;let d=0;let p=null;let g=null;for(const y of this._slots){const D=y.intersectsSegment(e,s,t,a,i,r,n);if(D>0){if(i!==null||r!==null){if(i!==null){let t=o?i.y-s:i.x-e;if(t<0){t=-t}if(p===null||t<l){l=t;_=i.x;f=i.y;p=y;if(n){m=n.x}}}if(r!==null){let t=r.x-e;if(t<0){t=-t}if(g===null||t>h){h=t;c=r.x;u=r.y;g=y;if(n!==null){d=n.y}}}}else{p=y;break}}}if(p!==null&&i!==null){i.x=_;i.y=f;if(n!==null){n.x=m}}if(g!==null&&r!==null){r.x=c;r.y=u;if(n!==null){n.y=d}}return p}getBone(t){for(const e of this._bones){if(e.name===t){return e}}return null}getBoneByDisplay(t){const e=this.getSlotByDisplay(t);return e!==null?e.parent:null}getSlot(t){for(const e of this._slots){if(e.name===t){return e}}return null}getSlotByDisplay(t){if(t!==null){for(const e of this._slots){if(e.display===t){return e}}}return null}getBones(){return this._bones}getSlots(){return this._slots}get flipX(){return this._flipX}set flipX(t){if(this._flipX===t){return}this._flipX=t;this.invalidUpdate()}get flipY(){return this._flipY}set flipY(t){if(this._flipY===t){return}this._flipY=t;this.invalidUpdate()}get cacheFrameRate(){return this._armatureData.cacheFrameRate}set cacheFrameRate(t){if(this._armatureData.cacheFrameRate!==t){this._armatureData.cacheFrames(t);for(const e of this._slots){const s=e.childArmature;if(s!==null){s.cacheFrameRate=t}}}}get name(){return this._armatureData.name}get armatureData(){return this._armatureData}get animation(){return this._animation}get proxy(){return this._proxy}get eventDispatcher(){return this._proxy}get display(){return this._display}get replacedTexture(){return this._replacedTexture}set replacedTexture(t){if(this._replacedTexture===t){return}if(this._replaceTextureAtlasData!==null){this._replaceTextureAtlasData.returnToPool();this._replaceTextureAtlasData=null}this._replacedTexture=t;for(const e of this._slots){e.invalidUpdate();e.update(-1)}}get clock(){return this._clock}set clock(t){if(this._clock===t){return}if(this._clock!==null){this._clock.remove(this)}this._clock=t;if(this._clock){this._clock.add(this)}for(const e of this._slots){const s=e.childArmature;if(s!==null){s.clock=this._clock}}}get parent(){return this._parent}replaceTexture(t){this.replacedTexture=t}hasEventListener(t){console.warn("Deprecated.");return this._proxy.hasDBEventListener(t)}addEventListener(t,e,s){console.warn("Deprecated.");this._proxy.addDBEventListener(t,e,s)}removeEventListener(t,e,s){console.warn("Deprecated.");this._proxy.removeDBEventListener(t,e,s)}enableAnimationCache(t){console.warn("Deprecated.");this.cacheFrameRate=t}getDisplay(){return this._display}}i.Armature=n})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e extends t.BaseObject{constructor(){super(...arguments);this.globalTransformMatrix=new t.Matrix;this.global=new t.Transform;this.offset=new t.Transform}_onClear(){this.globalTransformMatrix.identity();this.global.identity();this.offset.identity();this.origin=null;this.userData=null;this._globalDirty=false;this._armature=null}updateGlobalTransform(){if(this._globalDirty){this._globalDirty=false;this.global.fromMatrix(this.globalTransformMatrix)}}get armature(){return this._armature}}e._helpMatrix=new t.Matrix;e._helpTransform=new t.Transform;e._helpPoint=new t.Point;t.TransformObject=e})(dragonBones||(dragonBones={}));var dragonBones;(function(d){class t extends d.TransformObject{constructor(){super(...arguments);this.animationPose=new d.Transform;this._blendState=new d.BlendState}static toString(){return"[class dragonBones.Bone]"}_onClear(){super._onClear();this.offsetMode=1;this.animationPose.identity();this._transformDirty=false;this._childrenTransformDirty=false;this._localDirty=true;this._hasConstraint=false;this._visible=true;this._cachedFrameIndex=-1;this._blendState.clear();this._boneData=null;this._parent=null;this._cachedFrameIndices=null}_updateGlobalTransformMatrix(t){const e=this._boneData;const s=this.global;const a=this.globalTransformMatrix;const i=this.origin;const r=this.offset;const n=this.animationPose;const o=this._parent;const l=this._armature.flipX;const h=this._armature.flipY===d.DragonBones.yDown;let _=o!==null;let f=0;if(this.offsetMode===1){if(i!==null){s.x=i.x+r.x+n.x;s.y=i.y+r.y+n.y;s.skew=i.skew+r.skew+n.skew;s.rotation=i.rotation+r.rotation+n.rotation;s.scaleX=i.scaleX*r.scaleX*n.scaleX;s.scaleY=i.scaleY*r.scaleY*n.scaleY}else{s.copyFrom(r).add(n)}}else if(this.offsetMode===0){if(i!==null){s.copyFrom(i).add(n)}else{s.copyFrom(n)}}else{_=false;s.copyFrom(r)}if(_){const c=o._boneData.type===0?o.globalTransformMatrix:o._getGlobalTransformMatrix(s.x,s.y);if(e.inheritScale){if(!e.inheritRotation){o.updateGlobalTransform();if(l&&h){f=s.rotation-(o.global.rotation+Math.PI)}else if(l){f=s.rotation+o.global.rotation+Math.PI}else if(h){f=s.rotation+o.global.rotation}else{f=s.rotation-o.global.rotation}s.rotation=f}s.toMatrix(a);a.concat(c);if(e.inheritTranslation){s.x=a.tx;s.y=a.ty}else{a.tx=s.x;a.ty=s.y}if(t){s.fromMatrix(a)}else{this._globalDirty=true}}else{if(e.inheritTranslation){const u=s.x;const m=s.y;s.x=c.a*u+c.c*m+c.tx;s.y=c.b*u+c.d*m+c.ty}else{if(l){s.x=-s.x}if(h){s.y=-s.y}}if(e.inheritRotation){o.updateGlobalTransform();if(o.global.scaleX<0){f=s.rotation+o.global.rotation+Math.PI}else{f=s.rotation+o.global.rotation}if(c.a*c.d-c.b*c.c<0){f-=s.rotation*2;if(l!==h||e.inheritReflection){s.skew+=Math.PI}}s.rotation=f}else if(l||h){if(l&&h){f=s.rotation+Math.PI}else{if(l){f=Math.PI-s.rotation}else{f=-s.rotation}s.skew+=Math.PI}s.rotation=f}s.toMatrix(a)}}else{if(l||h){if(l){s.x=-s.x}if(h){s.y=-s.y}if(l&&h){f=s.rotation+Math.PI}else{if(l){f=Math.PI-s.rotation}else{f=-s.rotation}s.skew+=Math.PI}s.rotation=f}s.toMatrix(a)}}init(t,e){if(this._boneData!==null){return}this._boneData=t;this._armature=e;if(this._boneData.parent!==null){this._parent=this._armature.getBone(this._boneData.parent.name)}this._armature._addBone(this);this.origin=this._boneData.transform}update(t){this._blendState.dirty=false;if(t>=0&&this._cachedFrameIndices!==null){const e=this._cachedFrameIndices[t];if(e>=0&&this._cachedFrameIndex===e){this._transformDirty=false}else if(e>=0){this._transformDirty=true;this._cachedFrameIndex=e}else{if(this._hasConstraint){for(const s of this._armature._constraints){if(s._root===this){s.update()}}}if(this._transformDirty||this._parent!==null&&this._parent._childrenTransformDirty){this._transformDirty=true;this._cachedFrameIndex=-1}else if(this._cachedFrameIndex>=0){this._transformDirty=false;this._cachedFrameIndices[t]=this._cachedFrameIndex}else{this._transformDirty=true;this._cachedFrameIndex=-1}}}else{if(this._hasConstraint){for(const s of this._armature._constraints){if(s._root===this){s.update()}}}if(this._transformDirty||this._parent!==null&&this._parent._childrenTransformDirty){t=-1;this._transformDirty=true;this._cachedFrameIndex=-1}}if(this._transformDirty){this._transformDirty=false;this._childrenTransformDirty=true;if(this._cachedFrameIndex<0){const a=t>=0;if(this._localDirty){this._updateGlobalTransformMatrix(a)}if(a&&this._cachedFrameIndices!==null){this._cachedFrameIndex=this._cachedFrameIndices[t]=this._armature._armatureData.setCacheFrame(this.globalTransformMatrix,this.global)}}else{this._armature._armatureData.getCacheFrame(this.globalTransformMatrix,this.global,this._cachedFrameIndex)}}else if(this._childrenTransformDirty){this._childrenTransformDirty=false}this._localDirty=true}updateByConstraint(){if(this._localDirty){this._localDirty=false;if(this._transformDirty||this._parent!==null&&this._parent._childrenTransformDirty){this._updateGlobalTransformMatrix(true)}this._transformDirty=true}}invalidUpdate(){this._transformDirty=true}contains(t){if(t===this){return false}let e=t;while(e!==this&&e!==null){e=e.parent}return e===this}get boneData(){return this._boneData}get visible(){return this._visible}set visible(t){if(this._visible===t){return}this._visible=t;for(const e of this._armature.getSlots()){if(e.parent===this){e._updateVisible()}}}get name(){return this._boneData.name}get parent(){return this._parent}getBones(){console.warn("Deprecated.");const t=new Array;for(const e of this._armature.getBones()){if(e.parent===this){t.push(e)}}return t}getSlots(){console.warn("Deprecated.");const t=new Array;for(const e of this._armature.getSlots()){if(e.parent===this){t.push(e)}}return t}get slot(){console.warn("Deprecated.");for(const t of this._armature.getSlots()){if(t.parent===this){return t}}return null}}d.Bone=t})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class P extends t.Bone{constructor(){super(...arguments);this._vertices=[];this._deformVertices=[];this._hullCache=[];this._matrixCahce=[]}static toString(){return"[class dragonBones.Surface]"}_onClear(){super._onClear();this._dX=0;this._dY=0;this._k=0;this._kX=0;this._kY=0;this._vertices.length=0;this._deformVertices.length=0;this._matrixCahce.length=0;this._hullCache.length=0}_getAffineTransform(t,e,s,a,i,r,n,o,l,h,_,f,c){const u=n-i;const m=o-r;const d=l-i;const p=h-r;_.rotation=Math.atan2(m,u);_.skew=Math.atan2(p,d)-Math.PI*.5-_.rotation;if(c){_.rotation+=Math.PI}_.scaleX=Math.sqrt(u*u+m*m)/s;_.scaleY=Math.sqrt(d*d+p*p)/a;_.toMatrix(f);_.x=f.tx=i-(f.a*t+f.c*e);_.y=f.ty=r-(f.b*t+f.d*e)}_updateVertices(){const s=this._boneData.vertices;const a=this._vertices;const i=this._deformVertices;if(this._parent!==null){if(this._parent._boneData.type===1){for(let t=0,e=s.length;t<e;t+=2){const r=s[t]+i[t];const n=s[t+1]+i[t];const o=this._parent._getGlobalTransformMatrix(r,n);a[t]=o.a*r+o.c*n+o.tx;a[t+1]=o.b*r+o.d*n+o.ty}}else{const l=this._parent.globalTransformMatrix;for(let t=0,e=s.length;t<e;t+=2){const r=s[t]+i[t];const n=s[t+1]+i[t+1];a[t]=l.a*r+l.c*n+l.tx;a[t+1]=l.b*r+l.d*n+l.ty}}}else{for(let t=0,e=s.length;t<e;t+=2){a[t]=s[t]+i[t];a[t+1]=s[t+1]+i[t+1]}}}_updateGlobalTransformMatrix(t){t;const e=this._boneData.segmentX*2;const s=this._vertices.length-2;const a=200;const i=this._vertices[0];const r=this._vertices[1];const n=this._vertices[e];const o=this._vertices[e+1];const l=this._vertices[s];const h=this._vertices[s+1];const _=this._vertices[s-e];const f=this._vertices[s-e+1];const c=i+(l-i)*.5;const u=r+(h-r)*.5;const m=n+(_-n)*.5;const d=o+(f-o)*.5;const p=c+(m-c)*.5;const g=u+(d-u)*.5;const y=n+(l-n)*.5;const D=o+(h-o)*.5;const T=_+(l-_)*.5;const b=f+(h-f)*.5;this._globalDirty=false;this._getAffineTransform(0,0,a,a,p,g,y,D,T,b,this.global,this.globalTransformMatrix,false)}_getGlobalTransformMatrix(t,e){const s=1e3;if(t<-s||s<t||e<-s||s<e){return this.globalTransformMatrix}let a=false;const i=200;const r=this._boneData;const n=r.segmentX;const o=r.segmentY;const l=r.segmentX*2;const h=this._dX;const _=this._dY;const f=Math.floor((t+i)/h);const c=Math.floor((e+i)/_);let u=0;let m=f*h-i;let d=c*_-i;const p=this._matrixCahce;const g=P._helpMatrix;if(t<-i){if(e<-i||e>=i){return this.globalTransformMatrix}a=e>this._kX*(t+i)+d;u=((n*(o+1)+n*2+o+c)*2+(a?1:0))*7;if(this._matrixCahce[u]>0){g.copyFromArray(p,u+1)}else{const y=c*(l+2);const D=this._hullCache[4];const T=this._hullCache[5];const b=this._hullCache[2]-(o-c)*D;const A=this._hullCache[3]-(o-c)*T;const S=this._vertices;if(a){this._getAffineTransform(-i,d+_,s-i,_,S[y+l+2],S[y+l+3],b+D,A+T,S[y],S[y+1],P._helpTransform,g,true)}else{this._getAffineTransform(-s,d,s-i,_,b,A,S[y],S[y+1],b+D,A+T,P._helpTransform,g,false)}p[u]=1;p[u+1]=g.a;p[u+2]=g.b;p[u+3]=g.c;p[u+4]=g.d;p[u+5]=g.tx;p[u+6]=g.ty}}else if(t>=i){if(e<-i||e>=i){return this.globalTransformMatrix}a=e>this._kX*(t-s)+d;u=((n*(o+1)+n+c)*2+(a?1:0))*7;if(this._matrixCahce[u]>0){g.copyFromArray(p,u+1)}else{const y=(c+1)*(l+2)-2;const D=this._hullCache[4];const T=this._hullCache[5];const b=this._hullCache[0]+c*D;const A=this._hullCache[1]+c*T;const S=this._vertices;if(a){this._getAffineTransform(s,d+_,s-i,_,b+D,A+T,S[y+l+2],S[y+l+3],b,A,P._helpTransform,g,true)}else{this._getAffineTransform(i,d,s-i,_,S[y],S[y+1],b,A,S[y+l+2],S[y+l+3],P._helpTransform,g,false)}p[u]=1;p[u+1]=g.a;p[u+2]=g.b;p[u+3]=g.c;p[u+4]=g.d;p[u+5]=g.tx;p[u+6]=g.ty}}else if(e<-i){if(t<-i||t>=i){return this.globalTransformMatrix}a=e>this._kY*(t-m-h)-s;u=(n*(o+1)+f*2+(a?1:0))*7;if(this._matrixCahce[u]>0){g.copyFromArray(p,u+1)}else{const y=f*2;const D=this._hullCache[10];const T=this._hullCache[11];const b=this._hullCache[8]+f*D;const A=this._hullCache[9]+f*T;const S=this._vertices;if(a){this._getAffineTransform(m+h,-i,h,s-i,S[y+2],S[y+3],S[y],S[y+1],b+D,A+T,P._helpTransform,g,true)}else{this._getAffineTransform(m,-s,h,s-i,b,A,b+D,A+T,S[y],S[y+1],P._helpTransform,g,false)}p[u]=1;p[u+1]=g.a;p[u+2]=g.b;p[u+3]=g.c;p[u+4]=g.d;p[u+5]=g.tx;p[u+6]=g.ty}}else if(e>=i){if(t<-i||t>=i){return this.globalTransformMatrix}a=e>this._kY*(t-m-h)+i;u=((n*(o+1)+n+o+c)*2+(a?1:0))*7;if(this._matrixCahce[u]>0){g.copyFromArray(p,u+1)}else{const y=o*(l+2)+f*2;const D=this._hullCache[10];const T=this._hullCache[11];const b=this._hullCache[6]-(n-f)*D;const A=this._hullCache[7]-(n-f)*T;const S=this._vertices;if(a){this._getAffineTransform(m+h,s,h,s-i,b+D,A+T,b,A,S[y+2],S[y+3],P._helpTransform,g,true)}else{this._getAffineTransform(m,i,h,s-i,S[y],S[y+1],S[y+2],S[y+3],b,A,P._helpTransform,g,false)}p[u]=1;p[u+1]=g.a;p[u+2]=g.b;p[u+3]=g.c;p[u+4]=g.d;p[u+5]=g.tx;p[u+6]=g.ty}}else{a=e>this._k*(t-m-h)+d;u=((n*c+f)*2+(a?1:0))*7;if(this._matrixCahce[u]>0){g.copyFromArray(p,u+1)}else{const y=f*2+c*(l+2);const S=this._vertices;if(a){this._getAffineTransform(m+h,d+_,h,_,S[y+l+4],S[y+l+5],S[y+l+2],S[y+l+3],S[y+2],S[y+3],P._helpTransform,g,true)}else{this._getAffineTransform(m,d,h,_,S[y],S[y+1],S[y+2],S[y+3],S[y+l+2],S[y+l+3],P._helpTransform,g,false)}p[u]=1;p[u+1]=g.a;p[u+2]=g.b;p[u+3]=g.c;p[u+4]=g.d;p[u+5]=g.tx;p[u+6]=g.ty}}return g}init(t,e){if(this._boneData!==null){return}super.init(t,e);const s=t.segmentX;const a=t.segmentY;const i=t.vertices.length;const r=1e3;const n=200;this._dX=n*2/s;this._dY=n*2/a;this._k=-this._dY/this._dX;this._kX=-this._dY/(r-n);this._kY=-(r-n)/this._dX;this._vertices.length=i;this._deformVertices.length=i;this._matrixCahce.length=(s*a+s*2+a*2)*2*7;this._hullCache.length=10;for(let t=0;t<i;++t){this._deformVertices[t]=0}}update(t){this._blendState.dirty=false;if(t>=0&&this._cachedFrameIndices!==null){const e=this._cachedFrameIndices[t];if(e>=0&&this._cachedFrameIndex===e){this._transformDirty=false}else if(e>=0){this._transformDirty=true;this._cachedFrameIndex=e}else{if(this._hasConstraint){for(const s of this._armature._constraints){if(s._root===this){s.update()}}}if(this._transformDirty||this._parent!==null&&this._parent._childrenTransformDirty){this._transformDirty=true;this._cachedFrameIndex=-1}else if(this._cachedFrameIndex>=0){this._transformDirty=false;this._cachedFrameIndices[t]=this._cachedFrameIndex}else{this._transformDirty=true;this._cachedFrameIndex=-1}}}else{if(this._hasConstraint){for(const s of this._armature._constraints){if(s._root===this){s.update()}}}if(this._transformDirty||this._parent!==null&&this._parent._childrenTransformDirty){t=-1;this._transformDirty=true;this._cachedFrameIndex=-1}}if(this._transformDirty){this._transformDirty=false;this._childrenTransformDirty=true;for(let t=0,e=this._matrixCahce.length;t<e;t+=7){this._matrixCahce[t]=-1}this._updateVertices();if(this._cachedFrameIndex<0){const l=t>=0;if(this._localDirty){this._updateGlobalTransformMatrix(l)}if(l&&this._cachedFrameIndices!==null){this._cachedFrameIndex=this._cachedFrameIndices[t]=this._armature._armatureData.setCacheFrame(this.globalTransformMatrix,this.global)}}else{this._armature._armatureData.getCacheFrame(this.globalTransformMatrix,this.global,this._cachedFrameIndex)}const a=1e3;const i=200;const r=2*this.global.x;const n=2*this.global.y;const o=P._helpPoint;this.globalTransformMatrix.transformPoint(a,-i,o);this._hullCache[0]=o.x;this._hullCache[1]=o.y;this._hullCache[2]=r-o.x;this._hullCache[3]=n-o.y;this.globalTransformMatrix.transformPoint(0,this._dY,o,true);this._hullCache[4]=o.x;this._hullCache[5]=o.y;this.globalTransformMatrix.transformPoint(i,a,o);this._hullCache[6]=o.x;this._hullCache[7]=o.y;this._hullCache[8]=r-o.x;this._hullCache[9]=n-o.y;this.globalTransformMatrix.transformPoint(this._dX,0,o,true);this._hullCache[10]=o.x;this._hullCache[11]=o.y}else if(this._childrenTransformDirty){this._childrenTransformDirty=false}this._localDirty=true}}t.Surface=P})(dragonBones||(dragonBones={}));var dragonBones;(function(h){class _ extends h.TransformObject{constructor(){super(...arguments);this._localMatrix=new h.Matrix;this._colorTransform=new h.ColorTransform;this._displayDatas=[];this._displayList=[];this._deformVertices=null;this._rawDisplay=null;this._meshDisplay=null}_onClear(){super._onClear();const t=[];for(const e of this._displayList){if(e!==null&&e!==this._rawDisplay&&e!==this._meshDisplay&&t.indexOf(e)<0){t.push(e)}}for(const e of t){if(e instanceof h.Armature){e.dispose()}else{this._disposeDisplay(e,true)}}if(this._deformVertices!==null){this._deformVertices.returnToPool()}if(this._meshDisplay!==null&&this._meshDisplay!==this._rawDisplay){this._disposeDisplay(this._meshDisplay,false)}if(this._rawDisplay!==null){this._disposeDisplay(this._rawDisplay,false)}this.displayController=null;this._displayDirty=false;this._zOrderDirty=false;this._blendModeDirty=false;this._colorDirty=false;this._transformDirty=false;this._visible=true;this._blendMode=0;this._displayIndex=-1;this._animationDisplayIndex=-1;this._zOrder=0;this._cachedFrameIndex=-1;this._pivotX=0;this._pivotY=0;this._localMatrix.identity();this._colorTransform.identity();this._displayList.length=0;this._displayDatas.length=0;this._slotData=null;this._rawDisplayDatas=null;this._displayData=null;this._boundingBoxData=null;this._textureData=null;this._deformVertices=null;this._rawDisplay=null;this._meshDisplay=null;this._display=null;this._childArmature=null;this._parent=null;this._cachedFrameIndices=null}_getDefaultRawDisplayData(t){const e=this._armature._armatureData.defaultSkin;if(e!==null){const s=e.getDisplays(this._slotData.name);if(s!==null){return t<s.length?s[t]:null}}return null}_updateDisplayData(){const t=this._displayData;const e=this._deformVertices!==null?this._deformVertices.verticesData:null;const s=this._textureData;let a=null;let i=null;this._displayData=null;this._boundingBoxData=null;this._textureData=null;if(this._displayIndex>=0){if(this._rawDisplayDatas!==null){a=this._displayIndex<this._rawDisplayDatas.length?this._rawDisplayDatas[this._displayIndex]:null}if(a===null){a=this._getDefaultRawDisplayData(this._displayIndex)}if(this._displayIndex<this._displayDatas.length){this._displayData=this._displayDatas[this._displayIndex]}}if(this._displayData!==null){if(this._displayData.type===2){i=this._displayData.vertices}else if(this._displayData.type===4){i=this._displayData.vertices}else if(a!==null){if(a.type===2){i=a.vertices}else if(a.type===4){i=a.vertices}}if(this._displayData.type===3){this._boundingBoxData=this._displayData.boundingBox}else if(a!==null){if(a.type===3){this._boundingBoxData=a.boundingBox}}if(this._displayData.type===0){this._textureData=this._displayData.texture}else if(this._displayData.type===2){this._textureData=this._displayData.texture}}if(this._displayData!==t||i!==e||this._textureData!==s){if(i===null&&this._textureData!==null){const r=this._displayData;const n=this._textureData.parent.scale*this._armature._armatureData.scale;const o=this._textureData.frame;this._pivotX=r.pivot.x;this._pivotY=r.pivot.y;const l=o!==null?o:this._textureData.region;let t=l.width;let e=l.height;if(this._textureData.rotated&&o===null){t=l.height;e=l.width}this._pivotX*=t*n;this._pivotY*=e*n;if(o!==null){this._pivotX+=o.x*n;this._pivotY+=o.y*n}if(this._displayData!==null&&a!==null&&this._displayData!==a){a.transform.toMatrix(_._helpMatrix);_._helpMatrix.invert();_._helpMatrix.transformPoint(0,0,_._helpPoint);this._pivotX-=_._helpPoint.x;this._pivotY-=_._helpPoint.y;this._displayData.transform.toMatrix(_._helpMatrix);_._helpMatrix.invert();_._helpMatrix.transformPoint(0,0,_._helpPoint);this._pivotX+=_._helpPoint.x;this._pivotY+=_._helpPoint.y}if(!h.DragonBones.yDown){this._pivotY=(this._textureData.rotated?this._textureData.region.width:this._textureData.region.height)*n-this._pivotY}}else{this._pivotX=0;this._pivotY=0}if(a!==null){this.origin=a.transform}else if(this._displayData!==null){this.origin=this._displayData.transform}else{this.origin=null}if(i!==e){if(this._deformVertices===null){this._deformVertices=h.BaseObject.borrowObject(h.DeformVertices)}this._deformVertices.init(i,this._armature)}else if(this._deformVertices!==null&&this._textureData!==s){this._deformVertices.verticesDirty=true}this._displayDirty=true;this._transformDirty=true}}_updateDisplay(){const t=this._display!==null?this._display:this._rawDisplay;const e=this._childArmature;if(this._displayIndex>=0&&this._displayIndex<this._displayList.length){this._display=this._displayList[this._displayIndex];if(this._display!==null&&this._display instanceof h.Armature){this._childArmature=this._display;this._display=this._childArmature.display}else{this._childArmature=null}}else{this._display=null;this._childArmature=null}const s=this._display!==null?this._display:this._rawDisplay;if(s!==t){this._onUpdateDisplay();this._replaceDisplay(t);this._transformDirty=true;this._visibleDirty=true;this._blendModeDirty=true;this._colorDirty=true}if(s===this._rawDisplay||s===this._meshDisplay){this._updateFrame()}if(this._childArmature!==e){if(e!==null){e._parent=null;e.clock=null;if(e.inheritAnimation){e.animation.reset()}}if(this._childArmature!==null){this._childArmature._parent=this;this._childArmature.clock=this._armature.clock;if(this._childArmature.inheritAnimation){if(this._childArmature.cacheFrameRate===0){const a=this._armature.cacheFrameRate;if(a!==0){this._childArmature.cacheFrameRate=a}}let e=null;if(this._displayData!==null&&this._displayData.type===1){e=this._displayData.actions}else if(this._displayIndex>=0&&this._rawDisplayDatas!==null){let t=this._displayIndex<this._rawDisplayDatas.length?this._rawDisplayDatas[this._displayIndex]:null;if(t===null){t=this._getDefaultRawDisplayData(this._displayIndex)}if(t!==null&&t.type===1){e=t.actions}}if(e!==null&&e.length>0){for(const i of e){const r=h.BaseObject.borrowObject(h.EventObject);h.EventObject.actionDataToInstance(i,r,this._armature);r.slot=this;this._armature._bufferAction(r,false)}}else{this._childArmature.animation.play()}}}}}_updateGlobalTransformMatrix(t){const e=this._parent._boneData.type===0?this._parent.globalTransformMatrix:this._parent._getGlobalTransformMatrix(this.global.x,this.global.y);this.globalTransformMatrix.copyFrom(this._localMatrix);this.globalTransformMatrix.concat(e);if(t){this.global.fromMatrix(this.globalTransformMatrix)}else{this._globalDirty=true}}_setDisplayIndex(t,e=false){if(e){if(this._animationDisplayIndex===t){return false}this._animationDisplayIndex=t}if(this._displayIndex===t){return false}this._displayIndex=t;this._displayDirty=true;this._updateDisplayData();return this._displayDirty}_setZorder(t){if(this._zOrder===t){}this._zOrder=t;this._zOrderDirty=true;return this._zOrderDirty}_setColor(t){this._colorTransform.copyFrom(t);this._colorDirty=true;return this._colorDirty}_setDisplayList(s){if(s!==null&&s.length>0){if(this._displayList.length!==s.length){this._displayList.length=s.length}for(let t=0,e=s.length;t<e;++t){const a=s[t];if(a!==null&&a!==this._rawDisplay&&a!==this._meshDisplay&&!(a instanceof h.Armature)&&this._displayList.indexOf(a)<0){this._initDisplay(a,true)}this._displayList[t]=a}}else if(this._displayList.length>0){this._displayList.length=0}if(this._displayIndex>=0&&this._displayIndex<this._displayList.length){this._displayDirty=this._display!==this._displayList[this._displayIndex]}else{this._displayDirty=this._display!==null}this._updateDisplayData();return this._displayDirty}init(t,e,s,a){if(this._slotData!==null){return}this._slotData=t;this._visibleDirty=true;this._blendModeDirty=true;this._colorDirty=true;this._blendMode=this._slotData.blendMode;this._zOrder=this._slotData.zOrder;this._colorTransform.copyFrom(this._slotData.color);this._rawDisplay=s;this._meshDisplay=a;this._armature=e;const i=this._armature.getBone(this._slotData.parent.name);if(i!==null){this._parent=i}else{}this._armature._addSlot(this);this._initDisplay(this._rawDisplay,false);if(this._rawDisplay!==this._meshDisplay){this._initDisplay(this._meshDisplay,false)}this._onUpdateDisplay();this._addDisplay()}update(t){if(this._displayDirty){this._displayDirty=false;this._updateDisplay();if(this._transformDirty){if(this.origin!==null){this.global.copyFrom(this.origin).add(this.offset).toMatrix(this._localMatrix)}else{this.global.copyFrom(this.offset).toMatrix(this._localMatrix)}}}if(this._zOrderDirty){this._zOrderDirty=false;this._updateZOrder()}if(t>=0&&this._cachedFrameIndices!==null){const e=this._cachedFrameIndices[t];if(e>=0&&this._cachedFrameIndex===e){this._transformDirty=false}else if(e>=0){this._transformDirty=true;this._cachedFrameIndex=e}else if(this._transformDirty||this._parent._childrenTransformDirty){this._transformDirty=true;this._cachedFrameIndex=-1}else if(this._cachedFrameIndex>=0){this._transformDirty=false;this._cachedFrameIndices[t]=this._cachedFrameIndex}else{this._transformDirty=true;this._cachedFrameIndex=-1}}else if(this._transformDirty||this._parent._childrenTransformDirty){t=-1;this._transformDirty=true;this._cachedFrameIndex=-1}if(this._display===null){return}if(this._visibleDirty){this._visibleDirty=false;this._updateVisible()}if(this._blendModeDirty){this._blendModeDirty=false;this._updateBlendMode()}if(this._colorDirty){this._colorDirty=false;this._updateColor()}if(this._deformVertices!==null&&this._deformVertices.verticesData!==null&&this._display===this._meshDisplay){const s=this._deformVertices.verticesData.weight!==null;const a=this._parent._boneData.type!==0;if(this._deformVertices.verticesDirty||s&&this._deformVertices.isBonesUpdate()||a&&this._parent._childrenTransformDirty){this._deformVertices.verticesDirty=false;this._updateMesh()}if(s||a){return}}if(this._transformDirty){this._transformDirty=false;if(this._cachedFrameIndex<0){const i=t>=0;this._updateGlobalTransformMatrix(i);if(i&&this._cachedFrameIndices!==null){this._cachedFrameIndex=this._cachedFrameIndices[t]=this._armature._armatureData.setCacheFrame(this.globalTransformMatrix,this.global)}}else{this._armature._armatureData.getCacheFrame(this.globalTransformMatrix,this.global,this._cachedFrameIndex)}this._updateTransform()}}updateTransformAndMatrix(){if(this._transformDirty){this._transformDirty=false;this._updateGlobalTransformMatrix(false)}}replaceDisplayData(t,e=-1){if(e<0){if(this._displayIndex<0){e=0}else{e=this._displayIndex}}if(this._displayDatas.length<=e){this._displayDatas.length=e+1;for(let t=0,e=this._displayDatas.length;t<e;++t){if(!this._displayDatas[t]){this._displayDatas[t]=null}}}this._displayDatas[e]=t}containsPoint(t,e){if(this._boundingBoxData===null){return false}this.updateTransformAndMatrix();_._helpMatrix.copyFrom(this.globalTransformMatrix);_._helpMatrix.invert();_._helpMatrix.transformPoint(t,e,_._helpPoint);return this._boundingBoxData.containsPoint(_._helpPoint.x,_._helpPoint.y)}intersectsSegment(t,e,s,a,i=null,r=null,n=null){if(this._boundingBoxData===null){return 0}this.updateTransformAndMatrix();_._helpMatrix.copyFrom(this.globalTransformMatrix);_._helpMatrix.invert();_._helpMatrix.transformPoint(t,e,_._helpPoint);t=_._helpPoint.x;e=_._helpPoint.y;_._helpMatrix.transformPoint(s,a,_._helpPoint);s=_._helpPoint.x;a=_._helpPoint.y;const o=this._boundingBoxData.intersectsSegment(t,e,s,a,i,r,n);if(o>0){if(o===1||o===2){if(i!==null){this.globalTransformMatrix.transformPoint(i.x,i.y,i);if(r!==null){r.x=i.x;r.y=i.y}}else if(r!==null){this.globalTransformMatrix.transformPoint(r.x,r.y,r)}}else{if(i!==null){this.globalTransformMatrix.transformPoint(i.x,i.y,i)}if(r!==null){this.globalTransformMatrix.transformPoint(r.x,r.y,r)}}if(n!==null){this.globalTransformMatrix.transformPoint(Math.cos(n.x),Math.sin(n.x),_._helpPoint,true);n.x=Math.atan2(_._helpPoint.y,_._helpPoint.x);this.globalTransformMatrix.transformPoint(Math.cos(n.y),Math.sin(n.y),_._helpPoint,true);n.y=Math.atan2(_._helpPoint.y,_._helpPoint.x)}}return o}invalidUpdate(){this._displayDirty=true;this._transformDirty=true}get visible(){return this._visible}set visible(t){if(this._visible===t){return}this._visible=t;this._updateVisible()}get displayIndex(){return this._displayIndex}set displayIndex(t){if(this._setDisplayIndex(t)){this.update(-1)}}get name(){return this._slotData.name}get displayList(){return this._displayList.concat()}set displayList(t){const e=this._displayList.concat();const s=new Array;if(this._setDisplayList(t)){this.update(-1)}for(const a of e){if(a!==null&&a!==this._rawDisplay&&a!==this._meshDisplay&&this._displayList.indexOf(a)<0&&s.indexOf(a)<0){s.push(a)}}for(const a of s){if(a instanceof h.Armature){}else{this._disposeDisplay(a,true)}}}get slotData(){return this._slotData}get rawDisplayDatas(){return this._rawDisplayDatas}set rawDisplayDatas(t){if(this._rawDisplayDatas===t){return}this._displayDirty=true;this._rawDisplayDatas=t;if(this._rawDisplayDatas!==null){this._displayDatas.length=this._rawDisplayDatas.length;for(let e=0,t=this._displayDatas.length;e<t;++e){let t=this._rawDisplayDatas[e];if(t===null){t=this._getDefaultRawDisplayData(e)}this._displayDatas[e]=t}}else{this._displayDatas.length=0}}get displayData(){return this._displayData}get boundingBoxData(){return this._boundingBoxData}get rawDisplay(){return this._rawDisplay}get meshDisplay(){return this._meshDisplay}get display(){return this._display}set display(t){if(this._display===t){return}const e=this._displayList.length;if(this._displayIndex<0&&e===0){this._displayIndex=0}if(this._displayIndex<0){return}else{const s=this.displayList;if(e<=this._displayIndex){s.length=this._displayIndex+1}s[this._displayIndex]=t;this.displayList=s}}get childArmature(){return this._childArmature}set childArmature(t){if(this._childArmature===t){return}this.display=t}get parent(){return this._parent}getDisplay(){return this._display}setDisplay(t){this.display=t}}h.Slot=_})(dragonBones||(dragonBones={}));var dragonBones;(function(v){class t extends v.BaseObject{_onClear(){this._armature=null;this._target=null;this._root=null;this._bone=null}get name(){return this._constraintData.name}}t._helpMatrix=new v.Matrix;t._helpTransform=new v.Transform;t._helpPoint=new v.Point;v.Constraint=t;class e extends t{static toString(){return"[class dragonBones.IKConstraint]"}_onClear(){super._onClear();this._scaleEnabled=false;this._bendPositive=false;this._weight=1;this._constraintData=null}_computeA(){const t=this._target.global;const e=this._root.global;const s=this._root.globalTransformMatrix;let a=Math.atan2(t.y-e.y,t.x-e.x);if(e.scaleX<0){a+=Math.PI}e.rotation+=v.Transform.normalizeRadian(a-e.rotation)*this._weight;e.toMatrix(s)}_computeB(){const t=this._bone._boneData.length;const e=this._root;const s=this._target.global;const a=e.global;const i=this._bone.global;const r=this._bone.globalTransformMatrix;const n=r.a*t;const o=r.b*t;const l=n*n+o*o;const h=Math.sqrt(l);let _=i.x-a.x;let f=i.y-a.y;const c=_*_+f*f;const u=Math.sqrt(c);const m=i.rotation;const d=a.rotation;const p=Math.atan2(f,_);_=s.x-a.x;f=s.y-a.y;const g=_*_+f*f;const y=Math.sqrt(g);let D=0;if(h+u<=y||y+h<=u||y+u<=h){D=Math.atan2(s.y-a.y,s.x-a.x);if(h+u<=y){}else if(u<h){D+=Math.PI}}else{const S=(c-l+g)/(2*g);const P=Math.sqrt(c-S*S*g)/y;const x=a.x+_*S;const O=a.y+f*S;const B=-f*P;const M=_*P;let t=false;const E=e.parent;if(E!==null){const I=E.globalTransformMatrix;t=I.a*I.d-I.b*I.c<0}if(t!==this._bendPositive){i.x=x-B;i.y=O-M}else{i.x=x+B;i.y=O+M}D=Math.atan2(i.y-a.y,i.x-a.x)}const T=v.Transform.normalizeRadian(D-p);a.rotation=d+T*this._weight;a.toMatrix(e.globalTransformMatrix);const b=p+T*this._weight;i.x=a.x+Math.cos(b)*u;i.y=a.y+Math.sin(b)*u;let A=Math.atan2(s.y-i.y,s.x-i.x);if(i.scaleX<0){A+=Math.PI}i.rotation=a.rotation+m-d+v.Transform.normalizeRadian(A-T-m)*this._weight;i.toMatrix(r)}init(t,e){if(this._constraintData!==null){return}this._constraintData=t;this._armature=e;this._target=this._armature.getBone(this._constraintData.target.name);this._root=this._armature.getBone(this._constraintData.root.name);this._bone=this._constraintData.bone!==null?this._armature.getBone(this._constraintData.bone.name):null;{const s=this._constraintData;this._scaleEnabled=s.scaleEnabled;this._bendPositive=s.bendPositive;this._weight=s.weight}this._root._hasConstraint=true}update(){this._root.updateByConstraint();if(this._bone!==null){this._bone.updateByConstraint();this._computeB()}else{this._computeA()}}invalidUpdate(){this._root.invalidUpdate();if(this._bone!==null){this._bone.invalidUpdate()}}}v.IKConstraint=e;class s extends t{constructor(){super(...arguments);this._bones=[];this._spaces=[];this._positions=[];this._curves=[];this._boneLengths=[];this._pathGlobalVertices=[];this._segments=[10]}static toString(){return"[class dragonBones.PathConstraint]"}_onClear(){super._onClear();this.dirty=false;this.pathOffset=0;this.position=0;this.spacing=0;this.rotateOffset=0;this.rotateMix=1;this.translateMix=1;this._pathSlot=null;this._bones.length=0;this._spaces.length=0;this._positions.length=0;this._curves.length=0;this._boneLengths.length=0;this._pathGlobalVertices.length=0}_updatePathVertices(t){const e=this._armature;const s=e.armatureData.parent;const i=e.armatureData.scale;const r=s.intArray;const n=s.floatArray;const a=t.offset;const o=r[a+0];const l=r[a+2];this._pathGlobalVertices.length=o*2;const h=t.weight;if(h===null){const p=this._pathSlot.parent;p.updateByConstraint();const g=p.globalTransformMatrix;for(let t=0,e=l;t<o;t+=2){const y=n[e++]*i;const D=n[e++]*i;const T=g.a*y+g.c*D+g.tx;const b=g.b*y+g.d*D+g.ty;this._pathGlobalVertices[t]=T;this._pathGlobalVertices[t+1]=b}return}const _=this._pathSlot._deformVertices.bones;const f=h.bones.length;const c=h.offset;const u=r[c+1];let m=u;let d=c+2+f;for(let t=0,e=0;t<o;t++){const A=r[d++];let s=0,a=0;for(let t=0,e=A;t<e;t++){const S=r[d++];const P=_[S];if(P===null){continue}P.updateByConstraint();const g=P.globalTransformMatrix;const x=n[m++];const y=n[m++]*i;const D=n[m++]*i;s+=(g.a*y+g.c*D+g.tx)*x;a+=(g.b*y+g.d*D+g.ty)*x}this._pathGlobalVertices[e++]=s;this._pathGlobalVertices[e++]=a}}_computeVertices(s,a,i,r){for(let t=i,e=s;t<a;t+=2){r[t]=this._pathGlobalVertices[e++];r[t+1]=this._pathGlobalVertices[e++]}}_computeBezierCurve(t,r,n,e,s){const a=this._armature;const i=a.armatureData.parent.intArray;const o=i[t.vertices.offset+0];const l=this._positions;const h=this._spaces;const _=t.closed;const f=Array();let c=o*2;let u=c/6;let m=-1;let d=this.position;l.length=r*3+2;let p=0;if(!t.constantSpeed){const N=t.curveLengths;u-=_?1:2;p=N[u];if(e){d*=p}if(s){for(let t=0;t<r;t++){h[t]*=p}}f.length=8;for(let e=0,s=0,a=0;e<r;e++,s+=3){const k=h[e];d+=k;if(_){d%=p;if(d<0){d+=p}a=0}else if(d<0){continue}else if(d>p){continue}let t=0;for(;;a++){const L=N[a];if(d>L){continue}if(a===0){t=d/L}else{const j=N[a-1];t=(d-j)/(L-j)}break}if(a!==m){m=a;if(_&&a===u){this._computeVertices(c-4,4,0,f);this._computeVertices(0,4,4,f)}else{this._computeVertices(a*6+2,8,0,f)}}this.addCurvePosition(t,f[0],f[1],f[2],f[3],f[4],f[5],f[6],f[7],l,s,n)}return}if(_){c+=2;f.length=o;this._computeVertices(2,c-4,0,f);this._computeVertices(0,2,c-4,f);f[c-2]=f[0];f[c-1]=f[1]}else{u--;c-=4;f.length=c;this._computeVertices(2,c,0,f)}let g=new Array(u);p=0;let y=f[0],D=f[1],T=0,b=0,A=0,S=0,P=0,x=0;let O,B,M,E,I,w,C,F;for(let t=0,e=2;t<u;t++,e+=6){T=f[e];b=f[e+1];A=f[e+2];S=f[e+3];P=f[e+4];x=f[e+5];O=(y-T*2+A)*.1875;B=(D-b*2+S)*.1875;M=((T-A)*3-y+P)*.09375;E=((b-S)*3-D+x)*.09375;I=O*2+M;w=B*2+E;C=(T-y)*.75+O+M*.16666667;F=(b-D)*.75+B+E*.16666667;p+=Math.sqrt(C*C+F*F);C+=I;F+=w;I+=M;w+=E;p+=Math.sqrt(C*C+F*F);C+=I;F+=w;p+=Math.sqrt(C*C+F*F);C+=I+M;F+=w+E;p+=Math.sqrt(C*C+F*F);g[t]=p;y=P;D=x}if(e){d*=p}if(s){for(let t=0;t<r;t++){h[t]*=p}}let v=this._segments;let R=0;for(let e=0,s=0,a=0,i=0;e<r;e++,s+=3){const k=h[e];d+=k;let t=d;if(_){t%=p;if(t<0)t+=p;a=0}else if(t<0){continue}else if(t>p){continue}for(;;a++){const Y=g[a];if(t>Y)continue;if(a===0)t/=Y;else{const U=g[a-1];t=(t-U)/(Y-U)}break}if(a!==m){m=a;let t=a*6;y=f[t];D=f[t+1];T=f[t+2];b=f[t+3];A=f[t+4];S=f[t+5];P=f[t+6];x=f[t+7];O=(y-T*2+A)*.03;B=(D-b*2+S)*.03;M=((T-A)*3-y+P)*.006;E=((b-S)*3-D+x)*.006;I=O*2+M;w=B*2+E;C=(T-y)*.3+O+M*.16666667;F=(b-D)*.3+B+E*.16666667;R=Math.sqrt(C*C+F*F);v[0]=R;for(t=1;t<8;t++){C+=I;F+=w;I+=M;w+=E;R+=Math.sqrt(C*C+F*F);v[t]=R}C+=I;F+=w;R+=Math.sqrt(C*C+F*F);v[8]=R;C+=I+M;F+=w+E;R+=Math.sqrt(C*C+F*F);v[9]=R;i=0}t*=R;for(;;i++){const Y=v[i];if(t>Y)continue;if(i===0)t/=Y;else{const U=v[i-1];t=i+(t-U)/(Y-U)}break}this.addCurvePosition(t*.1,y,D,T,b,A,S,P,x,l,s,n)}}addCurvePosition(t,e,s,a,i,r,n,o,l,h,_,f){if(t===0){h[_]=e;h[_+1]=s;h[_+2]=0;return}if(t===1){h[_]=o;h[_+1]=l;h[_+2]=0;return}const c=1-t;const u=c*c;const m=t*t;const d=u*c;const p=u*t*3;const g=c*m*3;const y=t*m;const D=d*e+p*a+g*r+y*o;const T=d*s+p*i+g*n+y*l;h[_]=D;h[_+1]=T;if(f){h[_+2]=Math.atan2(T-(d*s+p*i+g*n),D-(d*e+p*a+g*r))}else{h[_+2]=0}}init(t,e){this._constraintData=t;this._armature=e;let s=t;this.pathOffset=s.pathDisplayData.vertices.offset;this.position=s.position;this.spacing=s.spacing;this.rotateOffset=s.rotateOffset;this.rotateMix=s.rotateMix;this.translateMix=s.translateMix;this._root=this._armature.getBone(s.root.name);this._target=this._armature.getBone(s.target.name);this._pathSlot=this._armature.getSlot(s.pathSlot.name);for(let t=0,e=s.bones.length;t<e;t++){const a=this._armature.getBone(s.bones[t].name);if(a!==null){this._bones.push(a)}}if(s.rotateMode===2){this._boneLengths.length=this._bones.length}this._root._hasConstraint=true}update(){const t=this._pathSlot;if(t._deformVertices===null||t._deformVertices.verticesData===null||t._deformVertices.verticesData.offset!==this.pathOffset){return}const e=this._constraintData;const s=t._displayData;let a=false;let i=t._deformVertices;if(this._root._childrenTransformDirty){this._updatePathVertices(s.vertices);a=true}else if(i!==null&&(i.verticesDirty||i.isBonesUpdate())){this._updatePathVertices(s.vertices);i.verticesDirty=false;a=true}if(!a&&!this.dirty){return}const r=e.positionMode;const n=e.spacingMode;const o=e.rotateMode;const _=this._bones;const l=n===0;const f=o===2;const c=o===0;const u=_.length;const h=c?u:u+1;const m=this.spacing;let d=this._spaces;d.length=h;if(f||l){d[0]=0;for(let t=0,e=h-1;t<e;t++){const S=_[t];S.updateByConstraint();const P=S._boneData.length;const x=S.globalTransformMatrix;const O=P*x.a;const B=P*x.b;const M=Math.sqrt(O*O+B*B);if(f){this._boneLengths[t]=M}d[t+1]=(P+m)*M/P}}else{for(let t=0;t<h;t++){d[t]=m}}this._computeBezierCurve(s,h,c,r===1,n===2);const p=this._positions;let g=this.rotateOffset;let y=p[0],D=p[1];let T;if(g===0){T=o===1}else{T=false;const S=t.parent;if(S!==null){const x=S.globalTransformMatrix;g*=x.a*x.d-x.b*x.c>0?v.Transform.DEG_RAD:-v.Transform.DEG_RAD}}const b=this.rotateMix;const A=this.translateMix;for(let t=0,h=3;t<u;t++,h+=3){let o=_[t];o.updateByConstraint();let l=o.globalTransformMatrix;l.tx+=(y-l.tx)*A;l.ty+=(D-l.ty)*A;const O=p[h],B=p[h+1];const E=O-y,I=B-D;if(f){const w=this._boneLengths[t];const C=(Math.sqrt(E*E+I*I)/w-1)*b+1;l.a*=C;l.b*=C}y=O;D=B;if(b>0){let t=l.a,e=l.b,s=l.c,a=l.d,i,r,n;if(c){i=p[h-1]}else{i=Math.atan2(I,E)}i-=Math.atan2(e,t);if(T){r=Math.cos(i);n=Math.sin(i);const F=o._boneData.length;y+=(F*(r*t-n*e)-E)*b;D+=(F*(n*t+r*e)-I)*b}else{i+=g}if(i>v.Transform.PI){i-=v.Transform.PI_D}else if(i<-v.Transform.PI){i+=v.Transform.PI_D}i*=b;r=Math.cos(i);n=Math.sin(i);l.a=r*t-n*e;l.b=n*t+r*e;l.c=r*s-n*a;l.d=n*s+r*a}o.global.fromMatrix(l)}this.dirty=false}invalidUpdate(){}}v.PathConstraint=s})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e extends t.BaseObject{constructor(){super(...arguments);this.vertices=[];this.bones=[]}static toString(){return"[class dragonBones.DeformVertices]"}_onClear(){this.verticesDirty=false;this.vertices.length=0;this.bones.length=0;this.verticesData=null}init(t,s){this.verticesData=t;if(this.verticesData!==null){let t=0;if(this.verticesData.weight!==null){t=this.verticesData.weight.count*2}else{t=this.verticesData.data.intArray[this.verticesData.offset+0]*2}this.verticesDirty=true;this.vertices.length=t;this.bones.length=0;for(let t=0,e=this.vertices.length;t<e;++t){this.vertices[t]=0}if(this.verticesData.weight!==null){for(let t=0,e=this.verticesData.weight.bones.length;t<e;++t){const a=s.getBone(this.verticesData.weight.bones[t].name);this.bones.push(a)}}}else{this.verticesDirty=false;this.vertices.length=0;this.bones.length=0;this.verticesData=null}}isBonesUpdate(){for(const t of this.bones){if(t!==null&&t._childrenTransformDirty){return true}}return false}}t.DeformVertices=e})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e{constructor(t=0){this.time=0;this.timeScale=1;this._systemTime=0;this._animatebles=[];this._clock=null;this.time=t;this._systemTime=(new Date).getTime()*.001}advanceTime(t){if(t!==t){t=0}const e=Date.now()*.001;if(t<0){t=e-this._systemTime}this._systemTime=e;if(this.timeScale!==1){t*=this.timeScale}if(t===0){return}if(t<0){this.time-=t}else{this.time+=t}let s=0,a=0,i=this._animatebles.length;for(;s<i;++s){const r=this._animatebles[s];if(r!==null){if(a>0){this._animatebles[s-a]=r;this._animatebles[s]=null}r.advanceTime(t)}else{a++}}if(a>0){i=this._animatebles.length;for(;s<i;++s){const n=this._animatebles[s];if(n!==null){this._animatebles[s-a]=n}else{a++}}this._animatebles.length-=a}}contains(t){if(t===this){return false}let e=t;while(e!==this&&e!==null){e=e.clock}return e===this}add(t){if(this._animatebles.indexOf(t)<0){this._animatebles.push(t);t.clock=this}}remove(t){const e=this._animatebles.indexOf(t);if(e>=0){this._animatebles[e]=null;t.clock=null}}clear(){for(const t of this._animatebles){if(t!==null){t.clock=null}}}get clock(){return this._clock}set clock(t){if(this._clock===t){return}if(this._clock!==null){this._clock.remove(this)}this._clock=t;if(this._clock!==null){this._clock.add(this)}}}e.clock=new e;t.WorldClock=e})(dragonBones||(dragonBones={}));var dragonBones;(function(l){class t extends l.BaseObject{constructor(){super(...arguments);this._animationNames=[];this._animationStates=[];this._animations={};this._animationConfig=null}static toString(){return"[class dragonBones.Animation]"}_onClear(){for(const t of this._animationStates){t.returnToPool()}for(let t in this._animations){delete this._animations[t]}if(this._animationConfig!==null){this._animationConfig.returnToPool()}this.timeScale=1;this._lockUpdate=false;this._animationDirty=false;this._inheritTimeScale=1;this._animationNames.length=0;this._animationStates.length=0;this._armature=null;this._animationConfig=null;this._lastAnimationState=null}_fadeOut(t){switch(t.fadeOutMode){case 1:for(const e of this._animationStates){if(e._parent!==null){continue}if(e.layer===t.layer){e.fadeOut(t.fadeOutTime,t.pauseFadeOut)}}break;case 2:for(const e of this._animationStates){if(e._parent!==null){continue}if(e.group===t.group){e.fadeOut(t.fadeOutTime,t.pauseFadeOut)}}break;case 3:for(const e of this._animationStates){if(e._parent!==null){continue}if(e.layer===t.layer&&e.group===t.group){e.fadeOut(t.fadeOutTime,t.pauseFadeOut)}}break;case 4:for(const e of this._animationStates){if(e._parent!==null){continue}e.fadeOut(t.fadeOutTime,t.pauseFadeOut)}break;case 0:case 5:default:break}}init(t){if(this._armature!==null){return}this._armature=t;this._animationConfig=l.BaseObject.borrowObject(l.AnimationConfig)}advanceTime(s){if(s<0){s=-s}if(this._armature.inheritAnimation&&this._armature._parent!==null){this._inheritTimeScale=this._armature._parent._armature.animation._inheritTimeScale*this.timeScale}else{this._inheritTimeScale=this.timeScale}if(this._inheritTimeScale!==1){s*=this._inheritTimeScale}const a=this._animationStates.length;if(a===1){const i=this._animationStates[0];if(i._fadeState>0&&i._subFadeState>0){this._armature._dragonBones.bufferObject(i);this._animationStates.length=0;this._lastAnimationState=null}else{const t=i._animationData;const e=t.cacheFrameRate;if(this._animationDirty&&e>0){this._animationDirty=false;for(const r of this._armature.getBones()){r._cachedFrameIndices=t.getBoneCachedFrameIndices(r.name)}for(const n of this._armature.getSlots()){const o=n.rawDisplayDatas;if(o!==null&&o.length>0){const l=o[0];if(l!==null){if(l.parent===this._armature.armatureData.defaultSkin){n._cachedFrameIndices=t.getSlotCachedFrameIndices(n.name);continue}}}n._cachedFrameIndices=null}}i.advanceTime(s,e)}}else if(a>1){for(let t=0,e=0;t<a;++t){const i=this._animationStates[t];if(i._fadeState>0&&i._subFadeState>0){e++;this._armature._dragonBones.bufferObject(i);this._animationDirty=true;if(this._lastAnimationState===i){this._lastAnimationState=null}}else{if(e>0){this._animationStates[t-e]=i}i.advanceTime(s,0)}if(t===a-1&&e>0){this._animationStates.length-=e;if(this._lastAnimationState===null&&this._animationStates.length>0){this._lastAnimationState=this._animationStates[this._animationStates.length-1]}}}this._armature._cacheFrameIndex=-1}else{this._armature._cacheFrameIndex=-1}}reset(){for(const t of this._animationStates){t.returnToPool()}this._animationDirty=false;this._animationConfig.clear();this._animationStates.length=0;this._lastAnimationState=null}stop(t=null){if(t!==null){const e=this.getState(t);if(e!==null){e.stop()}}else{for(const e of this._animationStates){e.stop()}}}playConfig(e){const t=e.animation;if(!(t in this._animations)){console.warn("Non-existent animation.\n","DragonBones name: "+this._armature.armatureData.parent.name,"Armature name: "+this._armature.name,"Animation name: "+t);return null}const s=this._animations[t];if(e.fadeOutMode===5){for(const a of this._animationStates){if(a._animationData===s){return a}}}if(this._animationStates.length===0){e.fadeInTime=0}else if(e.fadeInTime<0){e.fadeInTime=s.fadeInTime}if(e.fadeOutTime<0){e.fadeOutTime=e.fadeInTime}if(e.timeScale<=-100){e.timeScale=1/s.scale}if(s.frameCount>1){if(e.position<0){e.position%=s.duration;e.position=s.duration-e.position}else if(e.position===s.duration){e.position-=1e-6}else if(e.position>s.duration){e.position%=s.duration}if(e.duration>0&&e.position+e.duration>s.duration){e.duration=s.duration-e.position}if(e.playTimes<0){e.playTimes=s.playTimes}}else{e.playTimes=1;e.position=0;if(e.duration>0){e.duration=0}}if(e.duration===0){e.duration=-1}this._fadeOut(e);const a=l.BaseObject.borrowObject(l.AnimationState);a.init(this._armature,s,e);this._animationDirty=true;this._armature._cacheFrameIndex=-1;if(this._animationStates.length>0){let s=false;for(let t=0,e=this._animationStates.length;t<e;++t){if(a.layer>this._animationStates[t].layer){s=true;this._animationStates.splice(t,0,a);break}else if(t!==e-1&&a.layer>this._animationStates[t+1].layer){s=true;this._animationStates.splice(t+1,0,a);break}}if(!s){this._animationStates.push(a)}}else{this._animationStates.push(a)}for(const r of this._armature.getSlots()){const n=r.childArmature;if(n!==null&&n.inheritAnimation&&n.animation.hasAnimation(t)&&n.animation.getState(t)===null){n.animation.fadeIn(t)}}let i=false;for(let t in s.animationTimelines){if(!this._lockUpdate){i=true;this._lockUpdate=true}const o=this.fadeIn(t,e.fadeInTime,1,a.layer,null,0);if(o!==null){o.resetToPose=false;o._parent=a;o.stop()}}if(i){this._lockUpdate=false}if(!this._lockUpdate){if(e.fadeInTime<=0){this._armature.advanceTime(0)}this._lastAnimationState=a}return a}play(t=null,e=-1){this._animationConfig.clear();this._animationConfig.resetToPose=true;this._animationConfig.playTimes=e;this._animationConfig.fadeInTime=0;this._animationConfig.animation=t!==null?t:"";if(t!==null&&t.length>0){this.playConfig(this._animationConfig)}else if(this._lastAnimationState===null){const s=this._armature.armatureData.defaultAnimation;if(s!==null){this._animationConfig.animation=s.name;this.playConfig(this._animationConfig)}}else if(!this._lastAnimationState.isPlaying&&!this._lastAnimationState.isCompleted){this._lastAnimationState.play()}else{this._animationConfig.animation=this._lastAnimationState.name;this.playConfig(this._animationConfig)}return this._lastAnimationState}fadeIn(t,e=-1,s=-1,a=0,i=null,r=3){this._animationConfig.clear();this._animationConfig.fadeOutMode=r;this._animationConfig.playTimes=s;this._animationConfig.layer=a;this._animationConfig.fadeInTime=e;this._animationConfig.animation=t;this._animationConfig.group=i!==null?i:"";return this.playConfig(this._animationConfig)}gotoAndPlayByTime(t,e=0,s=-1){this._animationConfig.clear();this._animationConfig.resetToPose=true;this._animationConfig.playTimes=s;this._animationConfig.position=e;this._animationConfig.fadeInTime=0;this._animationConfig.animation=t;return this.playConfig(this._animationConfig)}gotoAndPlayByFrame(t,e=0,s=-1){this._animationConfig.clear();this._animationConfig.resetToPose=true;this._animationConfig.playTimes=s;this._animationConfig.fadeInTime=0;this._animationConfig.animation=t;const a=t in this._animations?this._animations[t]:null;if(a!==null){this._animationConfig.position=a.duration*e/a.frameCount}return this.playConfig(this._animationConfig)}gotoAndPlayByProgress(t,e=0,s=-1){this._animationConfig.clear();this._animationConfig.resetToPose=true;this._animationConfig.playTimes=s;this._animationConfig.fadeInTime=0;this._animationConfig.animation=t;const a=t in this._animations?this._animations[t]:null;if(a!==null){this._animationConfig.position=a.duration*(e>0?e:0)}return this.playConfig(this._animationConfig)}gotoAndStopByTime(t,e=0){const s=this.gotoAndPlayByTime(t,e,1);if(s!==null){s.stop()}return s}gotoAndStopByFrame(t,e=0){const s=this.gotoAndPlayByFrame(t,e,1);if(s!==null){s.stop()}return s}gotoAndStopByProgress(t,e=0){const s=this.gotoAndPlayByProgress(t,e,1);if(s!==null){s.stop()}return s}getState(t){let e=this._animationStates.length;while(e--){const s=this._animationStates[e];if(s.name===t){return s}}return null}hasAnimation(t){return t in this._animations}getStates(){return this._animationStates}get isPlaying(){for(const t of this._animationStates){if(t.isPlaying){return true}}return false}get isCompleted(){for(const t of this._animationStates){if(!t.isCompleted){return false}}return this._animationStates.length>0}get lastAnimationName(){return this._lastAnimationState!==null?this._lastAnimationState.name:""}get animationNames(){return this._animationNames}get animations(){return this._animations}set animations(e){if(this._animations===e){return}this._animationNames.length=0;for(let t in this._animations){delete this._animations[t]}for(let t in e){this._animationNames.push(t);this._animations[t]=e[t]}}get animationConfig(){this._animationConfig.clear();return this._animationConfig}get lastAnimationState(){return this._lastAnimationState}gotoAndPlay(t,e=-1,s=-1,a=-1,i=0,r=null,n=3,o=true,l=true){console.warn("Deprecated.");o;l;this._animationConfig.clear();this._animationConfig.resetToPose=true;this._animationConfig.fadeOutMode=n;this._animationConfig.playTimes=a;this._animationConfig.layer=i;this._animationConfig.fadeInTime=e;this._animationConfig.animation=t;this._animationConfig.group=r!==null?r:"";const h=this._animations[t];if(h&&s>0){this._animationConfig.timeScale=h.duration/s}return this.playConfig(this._animationConfig)}gotoAndStop(t,e=0){console.warn("Deprecated.");return this.gotoAndStopByTime(t,e)}get animationList(){console.warn("Deprecated.");return this._animationNames}get animationDataList(){console.warn("Deprecated.");const s=[];for(let t=0,e=this._animationNames.length;t<e;++t){s.push(this._animations[this._animationNames[t]])}return s}}l.Animation=t})(dragonBones||(dragonBones={}));var dragonBones;(function(u){class t extends u.BaseObject{constructor(){super(...arguments);this._blendState=new e;this._boneMask=[];this._boneTimelines=[];this._surfaceTimelines=[];this._slotTimelines=[];this._constraintTimelines=[];this._animationTimelines=[];this._poseTimelines=[];this._bonePoses={};this._actionTimeline=null;this._zOrderTimeline=null;this._parent=null}static toString(){return"[class dragonBones.AnimationState]"}_onClear(){for(const t of this._boneTimelines){t.returnToPool()}for(const t of this._surfaceTimelines){t.returnToPool()}for(const t of this._slotTimelines){t.returnToPool()}for(const t of this._constraintTimelines){t.returnToPool()}for(const t of this._animationTimelines){t.returnToPool()}for(let t in this._bonePoses){this._bonePoses[t].returnToPool();delete this._bonePoses[t]}if(this._actionTimeline!==null){this._actionTimeline.returnToPool()}if(this._zOrderTimeline!==null){this._zOrderTimeline.returnToPool()}this.actionEnabled=false;this.additiveBlending=false;this.displayControl=false;this.resetToPose=false;this.playTimes=1;this.layer=0;this.timeScale=1;this.weight=1;this.autoFadeOutTime=0;this.fadeTotalTime=0;this.name="";this.group="";this._timelineDirty=2;this._playheadState=0;this._fadeState=-1;this._subFadeState=-1;this._position=0;this._duration=0;this._fadeTime=0;this._time=0;this._fadeProgress=0;this._weightResult=0;this._blendState.clear();this._boneMask.length=0;this._boneTimelines.length=0;this._surfaceTimelines.length=0;this._slotTimelines.length=0;this._constraintTimelines.length=0;this._animationTimelines.length=0;this._poseTimelines.length=0;this._animationData=null;this._armature=null;this._actionTimeline=null;this._zOrderTimeline=null;this._parent=null}_updateTimelines(){{for(const t of this._armature._constraints){const e=this._animationData.getConstraintTimelines(t.name);if(e!==null){for(const s of e){switch(s.type){case 30:{const a=u.BaseObject.borrowObject(u.IKConstraintTimelineState);a.constraint=t;a.init(this._armature,this,s);this._constraintTimelines.push(a);break}default:break}}}else if(this.resetToPose){const a=u.BaseObject.borrowObject(u.IKConstraintTimelineState);a.constraint=t;a.init(this._armature,this,null);this._constraintTimelines.push(a);this._poseTimelines.push(a)}}}{for(const i of this._armature.animation.getStates()){if(i._parent!==this){continue}const e=this._animationData.getAnimationTimelines(i.name);if(e===null){continue}for(const s of e){switch(s.type){case 40:{const a=u.BaseObject.borrowObject(u.AnimationTimelineState);a.animationState=i;a.init(this._armature,this,s);this._animationTimelines.push(a);break}default:break}}}}}_updateBoneAndSlotTimelines(){{const e={};for(const s of this._boneTimelines){const t=s.bone.name;if(!(t in e)){e[t]=[]}e[t].push(s)}for(const a of this._armature.getBones()){const t=a.name;if(!this.containsBoneMask(t)){continue}if(t in e){delete e[t]}else if(a._boneData.type===0){const i=this._animationData.getBoneTimelines(t);const r=t in this._bonePoses?this._bonePoses[t]:this._bonePoses[t]=u.BaseObject.borrowObject(m);if(i!==null){for(const n of i){switch(n.type){case 10:{const s=u.BaseObject.borrowObject(u.BoneAllTimelineState);s.bone=a;s.bonePose=r;s.init(this._armature,this,n);this._boneTimelines.push(s);break}case 11:{const s=u.BaseObject.borrowObject(u.BoneTranslateTimelineState);s.bone=a;s.bonePose=r;s.init(this._armature,this,n);this._boneTimelines.push(s);break}case 12:{const s=u.BaseObject.borrowObject(u.BoneRotateTimelineState);s.bone=a;s.bonePose=r;s.init(this._armature,this,n);this._boneTimelines.push(s);break}case 13:{const s=u.BaseObject.borrowObject(u.BoneScaleTimelineState);s.bone=a;s.bonePose=r;s.init(this._armature,this,n);this._boneTimelines.push(s);break}default:break}}}else if(this.resetToPose){const s=u.BaseObject.borrowObject(u.BoneAllTimelineState);s.bone=a;s.bonePose=r;s.init(this._armature,this,null);this._boneTimelines.push(s);this._poseTimelines.push(s)}}else if(a._boneData.type===1){const i=this._animationData.getSurfaceTimelines(t);if(i!==null){for(const n of i){switch(n.type){case 50:{const s=u.BaseObject.borrowObject(u.SurfaceTimelineState);s.surface=a;s.init(this._armature,this,n);this._surfaceTimelines.push(s);break}default:break}}}else if(this.resetToPose){const s=u.BaseObject.borrowObject(u.SurfaceTimelineState);s.surface=a;s.init(this._armature,this,null);this._surfaceTimelines.push(s);this._poseTimelines.push(s)}}}for(let t in e){for(const s of e[t]){this._boneTimelines.splice(this._boneTimelines.indexOf(s),1);s.returnToPool()}}}{const o={};const l=[];for(const s of this._slotTimelines){const t=s.slot.name;if(!(t in o)){o[t]=[]}o[t].push(s)}for(const h of this._armature.getSlots()){const _=h.parent.name;if(!this.containsBoneMask(_)){continue}const t=h.name;const i=this._animationData.getSlotTimelines(t);if(t in o){delete o[t]}else{let t=false;let e=false;l.length=0;if(i!==null){for(const n of i){switch(n.type){case 20:{const s=u.BaseObject.borrowObject(u.SlotDislayTimelineState);s.slot=h;s.init(this._armature,this,n);this._slotTimelines.push(s);t=true;break}case 21:{const s=u.BaseObject.borrowObject(u.SlotColorTimelineState);s.slot=h;s.init(this._armature,this,n);this._slotTimelines.push(s);e=true;break}case 22:{const s=u.BaseObject.borrowObject(u.DeformTimelineState);s.slot=h;s.init(this._armature,this,n);this._slotTimelines.push(s);l.push(s.vertexOffset);break}default:break}}}if(this.resetToPose){if(!t){const s=u.BaseObject.borrowObject(u.SlotDislayTimelineState);s.slot=h;s.init(this._armature,this,null);this._slotTimelines.push(s);this._poseTimelines.push(s)}if(!e){const s=u.BaseObject.borrowObject(u.SlotColorTimelineState);s.slot=h;s.init(this._armature,this,null);this._slotTimelines.push(s);this._poseTimelines.push(s)}if(h.rawDisplayDatas!==null){for(const f of h.rawDisplayDatas){if(f!==null&&f.type===2){const c=f.vertices.offset;if(l.indexOf(c)<0){const s=u.BaseObject.borrowObject(u.DeformTimelineState);s.vertexOffset=c;s.slot=h;s.init(this._armature,this,null);this._slotTimelines.push(s);this._poseTimelines.push(s)}}}}}}}for(let t in o){for(const s of o[t]){this._slotTimelines.splice(this._slotTimelines.indexOf(s),1);s.returnToPool()}}}}_advanceFadeTime(t){const e=this._fadeState>0;if(this._subFadeState<0){this._subFadeState=0;const s=e?u.EventObject.FADE_OUT:u.EventObject.FADE_IN;if(this._armature.eventDispatcher.hasDBEventListener(s)){const a=u.BaseObject.borrowObject(u.EventObject);a.type=s;a.armature=this._armature;a.animationState=this;this._armature._dragonBones.bufferEvent(a)}}if(t<0){t=-t}this._fadeTime+=t;if(this._fadeTime>=this.fadeTotalTime){this._subFadeState=1;this._fadeProgress=e?0:1}else if(this._fadeTime>0){this._fadeProgress=e?1-this._fadeTime/this.fadeTotalTime:this._fadeTime/this.fadeTotalTime}else{this._fadeProgress=e?1:0}if(this._subFadeState>0){if(!e){this._playheadState|=1;this._fadeState=0}const s=e?u.EventObject.FADE_OUT_COMPLETE:u.EventObject.FADE_IN_COMPLETE;if(this._armature.eventDispatcher.hasDBEventListener(s)){const a=u.BaseObject.borrowObject(u.EventObject);a.type=s;a.armature=this._armature;a.animationState=this;this._armature._dragonBones.bufferEvent(a)}}}init(t,e,s){if(this._armature!==null){return}this._armature=t;this._animationData=e;this.resetToPose=s.resetToPose;this.additiveBlending=s.additiveBlending;this.displayControl=s.displayControl;this.actionEnabled=s.actionEnabled;this.layer=s.layer;this.playTimes=s.playTimes;this.timeScale=s.timeScale;this.fadeTotalTime=s.fadeInTime;this.autoFadeOutTime=s.autoFadeOutTime;this.weight=s.weight;this.name=s.name.length>0?s.name:s.animation;this.group=s.group;if(s.pauseFadeIn){this._playheadState=2}else{this._playheadState=3}if(s.duration<0){this._position=0;this._duration=this._animationData.duration;if(s.position!==0){if(this.timeScale>=0){this._time=s.position}else{this._time=s.position-this._duration}}else{this._time=0}}else{this._position=s.position;this._duration=s.duration;this._time=0}if(this.timeScale<0&&this._time===0){this._time=-1e-6}if(this.fadeTotalTime<=0){this._fadeProgress=.999999}if(s.boneMask.length>0){this._boneMask.length=s.boneMask.length;for(let t=0,e=this._boneMask.length;t<e;++t){this._boneMask[t]=s.boneMask[t]}}this._actionTimeline=u.BaseObject.borrowObject(u.ActionTimelineState);this._actionTimeline.init(this._armature,this,this._animationData.actionTimeline);this._actionTimeline.currentTime=this._time;if(this._actionTimeline.currentTime<0){this._actionTimeline.currentTime=this._duration-this._actionTimeline.currentTime}if(this._animationData.zOrderTimeline!==null){this._zOrderTimeline=u.BaseObject.borrowObject(u.ZOrderTimelineState);this._zOrderTimeline.init(this._armature,this,this._animationData.zOrderTimeline)}}advanceTime(t,e){this._blendState.dirty=false;if(this._fadeState!==0||this._subFadeState!==0){this._advanceFadeTime(t)}if(this._playheadState===3){if(this.timeScale!==1){t*=this.timeScale}this._time+=t}if(this._timelineDirty!==0){if(this._timelineDirty===2){this._updateTimelines()}this._timelineDirty=0;this._updateBoneAndSlotTimelines()}if(this.weight===0){return}const s=this._fadeState===0&&e>0;let a=true;let i=true;let r=this._time;this._weightResult=this.weight*this._fadeProgress;if(this._parent!==null){this._weightResult*=this._parent._weightResult/this._parent._fadeProgress}if(this._actionTimeline.playState<=0){this._actionTimeline.update(r)}if(s){const n=e*2;this._actionTimeline.currentTime=Math.floor(this._actionTimeline.currentTime*n)/n}if(this._zOrderTimeline!==null&&this._zOrderTimeline.playState<=0){this._zOrderTimeline.update(r)}if(s){const o=Math.floor(this._actionTimeline.currentTime*e);if(this._armature._cacheFrameIndex===o){a=false;i=false}else{this._armature._cacheFrameIndex=o;if(this._animationData.cachedFrames[o]){i=false}else{this._animationData.cachedFrames[o]=true}}}if(a){if(i){for(let t=0,e=this._boneTimelines.length;t<e;++t){const l=this._boneTimelines[t];if(l.playState<=0){l.update(r)}if(t===e-1||l.bone!==this._boneTimelines[t+1].bone){const h=l.bone._blendState.update(this._weightResult,this.layer);if(h!==0){l.blend(h)}}}}for(let t=0,e=this._surfaceTimelines.length;t<e;++t){const l=this._surfaceTimelines[t];const h=l.surface._blendState.update(this._weightResult,this.layer);if(l.playState<=0){l.update(r)}if(h!==0){l.blend(h)}}if(this.displayControl){for(let t=0,e=this._slotTimelines.length;t<e;++t){const l=this._slotTimelines[t];const _=l.slot.displayController;if(_===null||_===this.name||_===this.group){if(l.playState<=0){l.update(r)}}}}for(let t=0,e=this._constraintTimelines.length;t<e;++t){const l=this._constraintTimelines[t];if(l.playState<=0){l.update(r)}}for(let t=0,e=this._animationTimelines.length;t<e;++t){const l=this._animationTimelines[t];const h=l.animationState._blendState.update(this._weightResult,this.layer);if(l.playState<=0){l.update(r)}if(h!==0){l.blend(h)}}}if(this._fadeState===0){if(this._subFadeState>0){this._subFadeState=0;if(this._poseTimelines.length>0){for(const l of this._poseTimelines){if(l instanceof u.BoneTimelineState){this._boneTimelines.splice(this._boneTimelines.indexOf(l),1)}else if(l instanceof u.SurfaceTimelineState){this._surfaceTimelines.splice(this._surfaceTimelines.indexOf(l),1)}else if(l instanceof u.SlotTimelineState){this._slotTimelines.splice(this._slotTimelines.indexOf(l),1)}else if(l instanceof u.ConstraintTimelineState){this._constraintTimelines.splice(this._constraintTimelines.indexOf(l),1)}l.returnToPool()}this._poseTimelines.length=0}}if(this._actionTimeline.playState>0){if(this.autoFadeOutTime>=0){this.fadeOut(this.autoFadeOutTime)}}}}play(){this._playheadState=3}stop(){this._playheadState&=1}fadeOut(t,e=true){if(t<0){t=0}if(e){this._playheadState&=2}if(this._fadeState>0){if(t>this.fadeTotalTime-this._fadeTime){return}}else{this._fadeState=1;this._subFadeState=-1;if(t<=0||this._fadeProgress<=0){this._fadeProgress=1e-6}for(const s of this._boneTimelines){s.fadeOut()}for(const s of this._surfaceTimelines){s.fadeOut()}for(const s of this._slotTimelines){s.fadeOut()}for(const s of this._constraintTimelines){s.fadeOut()}for(const s of this._animationTimelines){s.animationState.fadeOut(t,e);s.fadeOut()}}this.displayControl=false;this.fadeTotalTime=this._fadeProgress>1e-6?t/this._fadeProgress:0;this._fadeTime=this.fadeTotalTime*(1-this._fadeProgress)}containsBoneMask(t){return this._boneMask.length===0||this._boneMask.indexOf(t)>=0}addBoneMask(t,e=true){const s=this._armature.getBone(t);if(s===null){return}if(this._boneMask.indexOf(t)<0){this._boneMask.push(t)}if(e){for(const a of this._armature.getBones()){if(this._boneMask.indexOf(a.name)<0&&s.contains(a)){this._boneMask.push(a.name)}}}this._timelineDirty=1}removeBoneMask(t,e=true){const s=this._boneMask.indexOf(t);if(s>=0){this._boneMask.splice(s,1)}if(e){const a=this._armature.getBone(t);if(a!==null){const i=this._armature.getBones();if(this._boneMask.length>0){for(const r of i){const s=this._boneMask.indexOf(r.name);if(s>=0&&a.contains(r)){this._boneMask.splice(s,1)}}}else{for(const r of i){if(r===a){continue}if(!a.contains(r)){this._boneMask.push(r.name)}}}}}this._timelineDirty=1}removeAllBoneMask(){this._boneMask.length=0;this._timelineDirty=1}get isFadeIn(){return this._fadeState<0}get isFadeOut(){return this._fadeState>0}get isFadeComplete(){return this._fadeState===0}get isPlaying(){return(this._playheadState&2)!==0&&this._actionTimeline.playState<=0}get isCompleted(){return this._actionTimeline.playState>0}get currentPlayTimes(){return this._actionTimeline.currentPlayTimes}get totalTime(){return this._duration}get currentTime(){return this._actionTimeline.currentTime}set currentTime(t){const e=this._actionTimeline.currentPlayTimes-(this._actionTimeline.playState>0?1:0);if(t<0||this._duration<t){t=t%this._duration+e*this._duration;if(t<0){t+=this._duration}}if(this.playTimes>0&&e===this.playTimes-1&&t===this._duration){t=this._duration-1e-6}if(this._time===t){return}this._time=t;this._actionTimeline.setCurrentTime(this._time);if(this._zOrderTimeline!==null){this._zOrderTimeline.playState=-1}for(const s of this._boneTimelines){s.playState=-1}for(const s of this._slotTimelines){s.playState=-1}}get animationData(){return this._animationData}}u.AnimationState=t;class m extends u.BaseObject{constructor(){super(...arguments);this.current=new u.Transform;this.delta=new u.Transform;this.result=new u.Transform}static toString(){return"[class dragonBones.BonePose]"}_onClear(){this.current.identity();this.delta.identity();this.result.identity()}}u.BonePose=m;class e{update(t,e){if(this.dirty){if(this.leftWeight>0){if(this.layer!==e){if(this.layerWeight>=this.leftWeight){this.leftWeight=0;return 0}else{this.layer=e;this.leftWeight-=this.layerWeight;this.layerWeight=0}}}else{return 0}t*=this.leftWeight;this.layerWeight+=t;this.blendWeight=t;return 2}this.dirty=true;this.layer=e;this.layerWeight=t;this.leftWeight=1;this.blendWeight=t;return 1}clear(){this.dirty=false;this.layer=0;this.leftWeight=0;this.layerWeight=0;this.blendWeight=0}}u.BlendState=e})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e extends t.BaseObject{_onClear(){this.playState=-1;this.currentPlayTimes=-1;this.currentTime=-1;this._tweenState=0;this._frameRate=0;this._frameValueOffset=0;this._frameCount=0;this._frameOffset=0;this._frameIndex=-1;this._frameRateR=0;this._position=0;this._duration=0;this._timeScale=1;this._timeOffset=0;this._dragonBonesData=null;this._animationData=null;this._timelineData=null;this._armature=null;this._animationState=null;this._actionTimeline=null;this._frameArray=null;this._frameIntArray=null;this._frameFloatArray=null;this._timelineArray=null;this._frameIndices=null}_setCurrentTime(t){const e=this.playState;const s=this.currentPlayTimes;const a=this.currentTime;if(this._actionTimeline!==null&&this._frameCount<=1){this.playState=this._actionTimeline.playState>=0?1:-1;this.currentPlayTimes=1;this.currentTime=this._actionTimeline.currentTime}else if(this._actionTimeline===null||this._timeScale!==1||this._timeOffset!==0){const i=this._animationState.playTimes;const r=i*this._duration;t*=this._timeScale;if(this._timeOffset!==0){t+=this._timeOffset*this._animationData.duration}if(i>0&&(t>=r||t<=-r)){if(this.playState<=0&&this._animationState._playheadState===3){this.playState=1}this.currentPlayTimes=i;if(t<0){this.currentTime=0}else{this.currentTime=this._duration+1e-6}}else{if(this.playState!==0&&this._animationState._playheadState===3){this.playState=0}if(t<0){t=-t;this.currentPlayTimes=Math.floor(t/this._duration);this.currentTime=this._duration-t%this._duration}else{this.currentPlayTimes=Math.floor(t/this._duration);this.currentTime=t%this._duration}}this.currentTime+=this._position}else{this.playState=this._actionTimeline.playState;this.currentPlayTimes=this._actionTimeline.currentPlayTimes;this.currentTime=this._actionTimeline.currentTime}if(this.currentPlayTimes===s&&this.currentTime===a){return false}if(e<0&&this.playState!==e||this.playState<=0&&this.currentPlayTimes!==s){this._frameIndex=-1}return true}init(t,e,s){this._armature=t;this._animationState=e;this._timelineData=s;this._actionTimeline=this._animationState._actionTimeline;if(this===this._actionTimeline){this._actionTimeline=null}this._animationData=this._animationState._animationData;this._frameRate=this._animationData.parent.frameRate;this._frameRateR=1/this._frameRate;this._position=this._animationState._position;this._duration=this._animationState._duration;this._dragonBonesData=this._animationData.parent.parent;if(this._timelineData!==null){this._frameIntArray=this._dragonBonesData.frameIntArray;this._frameFloatArray=this._dragonBonesData.frameFloatArray;this._frameArray=this._dragonBonesData.frameArray;this._timelineArray=this._dragonBonesData.timelineArray;this._frameIndices=this._dragonBonesData.frameIndices;this._frameCount=this._timelineArray[this._timelineData.offset+2];this._frameValueOffset=this._timelineArray[this._timelineData.offset+4];this._timeScale=100/this._timelineArray[this._timelineData.offset+0];this._timeOffset=this._timelineArray[this._timelineData.offset+1]*.01}}fadeOut(){}update(t){if(this._setCurrentTime(t)){if(this._frameCount>1){const e=Math.floor(this.currentTime*this._frameRate);const s=this._frameIndices[this._timelineData.frameIndicesOffset+e];if(this._frameIndex!==s){this._frameIndex=s;this._frameOffset=this._animationData.frameOffset+this._timelineArray[this._timelineData.offset+5+this._frameIndex];this._onArriveAtFrame()}}else if(this._frameIndex<0){this._frameIndex=0;if(this._timelineData!==null){this._frameOffset=this._animationData.frameOffset+this._timelineArray[this._timelineData.offset+5]}this._onArriveAtFrame()}if(this._tweenState!==0){this._onUpdateFrame()}}}}t.TimelineState=e;class s extends e{static _getEasingValue(t,e,s){let a=e;switch(t){case 3:a=Math.pow(e,2);break;case 4:a=1-Math.pow(1-e,2);break;case 5:a=.5*(1-Math.cos(e*Math.PI));break}return(a-e)*s+e}static _getEasingCurveValue(t,e,s,a){if(t<=0){return 0}else if(t>=1){return 1}const i=s+1;const r=Math.floor(t*i);const n=r===0?0:e[a+r-1];const o=r===i-1?1e4:e[a+r];return(n+(o-n)*(t*i-r))*1e-4}_onClear(){super._onClear();this._tweenType=0;this._curveCount=0;this._framePosition=0;this._frameDurationR=0;this._tweenProgress=0;this._tweenEasing=0}_onArriveAtFrame(){if(this._frameCount>1&&(this._frameIndex!==this._frameCount-1||this._animationState.playTimes===0||this._animationState.currentPlayTimes<this._animationState.playTimes-1)){this._tweenType=this._frameArray[this._frameOffset+1];this._tweenState=this._tweenType===0?1:2;if(this._tweenType===2){this._curveCount=this._frameArray[this._frameOffset+2]}else if(this._tweenType!==0&&this._tweenType!==1){this._tweenEasing=this._frameArray[this._frameOffset+2]*.01}this._framePosition=this._frameArray[this._frameOffset]*this._frameRateR;if(this._frameIndex===this._frameCount-1){this._frameDurationR=1/(this._animationData.duration-this._framePosition)}else{const t=this._animationData.frameOffset+this._timelineArray[this._timelineData.offset+5+this._frameIndex+1];const e=this._frameArray[t]*this._frameRateR-this._framePosition;if(e>0){this._frameDurationR=1/e}else{this._frameDurationR=0}}}else{this._tweenState=1}}_onUpdateFrame(){if(this._tweenState===2){this._tweenProgress=(this.currentTime-this._framePosition)*this._frameDurationR;if(this._tweenType===2){this._tweenProgress=s._getEasingCurveValue(this._tweenProgress,this._frameArray,this._curveCount,this._frameOffset+3)}else if(this._tweenType!==1){this._tweenProgress=s._getEasingValue(this._tweenType,this._tweenProgress,this._tweenEasing)}}else{this._tweenProgress=0}}}t.TweenTimelineState=s;class a extends s{_onClear(){super._onClear();this.bone=null;this.bonePose=null}blend(t){const e=this.bone._blendState.blendWeight;const s=this.bone.animationPose;const a=this.bonePose.result;if(t===2){s.x+=a.x*e;s.y+=a.y*e;s.rotation+=a.rotation*e;s.skew+=a.skew*e;s.scaleX+=(a.scaleX-1)*e;s.scaleY+=(a.scaleY-1)*e}else if(e!==1){s.x=a.x*e;s.y=a.y*e;s.rotation=a.rotation*e;s.skew=a.skew*e;s.scaleX=(a.scaleX-1)*e+1;s.scaleY=(a.scaleY-1)*e+1}else{s.x=a.x;s.y=a.y;s.rotation=a.rotation;s.skew=a.skew;s.scaleX=a.scaleX;s.scaleY=a.scaleY}if(this._animationState._fadeState!==0||this._animationState._subFadeState!==0){this.bone._transformDirty=true}}}t.BoneTimelineState=a;class i extends s{_onClear(){super._onClear();this.slot=null}}t.SlotTimelineState=i;class r extends s{_onClear(){super._onClear();this.constraint=null}}t.ConstraintTimelineState=r})(dragonBones||(dragonBones={}));var dragonBones;(function(m){class t extends m.TimelineState{static toString(){return"[class dragonBones.ActionTimelineState]"}_onCrossFrame(t){const e=this._armature.eventDispatcher;if(this._animationState.actionEnabled){const s=this._animationData.frameOffset+this._timelineArray[this._timelineData.offset+5+t];const a=this._frameArray[s+1];const i=this._animationData.parent.actions;for(let t=0;t<a;++t){const r=this._frameArray[s+2+t];const n=i[r];if(n.type===0){const o=m.BaseObject.borrowObject(m.EventObject);o.time=this._frameArray[s]/this._frameRate;o.animationState=this._animationState;m.EventObject.actionDataToInstance(n,o,this._armature);this._armature._bufferAction(o,true)}else{const l=n.type===10?m.EventObject.FRAME_EVENT:m.EventObject.SOUND_EVENT;if(n.type===11||e.hasDBEventListener(l)){const o=m.BaseObject.borrowObject(m.EventObject);o.time=this._frameArray[s]/this._frameRate;o.animationState=this._animationState;m.EventObject.actionDataToInstance(n,o,this._armature);this._armature._dragonBones.bufferEvent(o)}}}}}_onArriveAtFrame(){}_onUpdateFrame(){}update(t){const s=this.playState;let a=this.currentPlayTimes;let i=this.currentTime;if(this._setCurrentTime(t)){const r=this._armature.eventDispatcher;if(s<0){if(this.playState!==s){if(this._animationState.displayControl&&this._animationState.resetToPose){this._armature._sortZOrder(null,0)}a=this.currentPlayTimes;if(r.hasDBEventListener(m.EventObject.START)){const o=m.BaseObject.borrowObject(m.EventObject);o.type=m.EventObject.START;o.armature=this._armature;o.animationState=this._animationState;this._armature._dragonBones.bufferEvent(o)}}else{return}}const n=this._animationState.timeScale<0;let e=null;let t=null;if(this.currentPlayTimes!==a){if(r.hasDBEventListener(m.EventObject.LOOP_COMPLETE)){e=m.BaseObject.borrowObject(m.EventObject);e.type=m.EventObject.LOOP_COMPLETE;e.armature=this._armature;e.animationState=this._animationState}if(this.playState>0){if(r.hasDBEventListener(m.EventObject.COMPLETE)){t=m.BaseObject.borrowObject(m.EventObject);t.type=m.EventObject.COMPLETE;t.armature=this._armature;t.animationState=this._animationState}}}if(this._frameCount>1){const l=this._timelineData;const h=Math.floor(this.currentTime*this._frameRate);const _=this._frameIndices[l.frameIndicesOffset+h];if(this._frameIndex!==_){let t=this._frameIndex;this._frameIndex=_;if(this._timelineArray!==null){this._frameOffset=this._animationData.frameOffset+this._timelineArray[l.offset+5+this._frameIndex];if(n){if(t<0){const f=Math.floor(i*this._frameRate);t=this._frameIndices[l.frameIndicesOffset+f];if(this.currentPlayTimes===a){if(t===_){t=-1}}}while(t>=0){const c=this._animationData.frameOffset+this._timelineArray[l.offset+5+t];const u=this._frameArray[c]/this._frameRate;if(this._position<=u&&u<=this._position+this._duration){this._onCrossFrame(t)}if(e!==null&&t===0){this._armature._dragonBones.bufferEvent(e);e=null}if(t>0){t--}else{t=this._frameCount-1}if(t===_){break}}}else{if(t<0){const f=Math.floor(i*this._frameRate);t=this._frameIndices[l.frameIndicesOffset+f];const c=this._animationData.frameOffset+this._timelineArray[l.offset+5+t];const u=this._frameArray[c]/this._frameRate;if(this.currentPlayTimes===a){if(i<=u){if(t>0){t--}else{t=this._frameCount-1}}else if(t===_){t=-1}}}while(t>=0){if(t<this._frameCount-1){t++}else{t=0}const c=this._animationData.frameOffset+this._timelineArray[l.offset+5+t];const u=this._frameArray[c]/this._frameRate;if(this._position<=u&&u<=this._position+this._duration){this._onCrossFrame(t)}if(e!==null&&t===0){this._armature._dragonBones.bufferEvent(e);e=null}if(t===_){break}}}}}}else if(this._frameIndex<0){this._frameIndex=0;if(this._timelineData!==null){this._frameOffset=this._animationData.frameOffset+this._timelineArray[this._timelineData.offset+5];const u=this._frameArray[this._frameOffset]/this._frameRate;if(this.currentPlayTimes===a){if(i<=u){this._onCrossFrame(this._frameIndex)}}else if(this._position<=u){if(!n&&e!==null){this._armature._dragonBones.bufferEvent(e);e=null}this._onCrossFrame(this._frameIndex)}}}if(e!==null){this._armature._dragonBones.bufferEvent(e)}if(t!==null){this._armature._dragonBones.bufferEvent(t)}}}setCurrentTime(t){this._setCurrentTime(t);this._frameIndex=-1}}m.ActionTimelineState=t;class e extends m.TimelineState{static toString(){return"[class dragonBones.ZOrderTimelineState]"}_onArriveAtFrame(){if(this.playState>=0){const t=this._frameArray[this._frameOffset+1];if(t>0){this._armature._sortZOrder(this._frameArray,this._frameOffset+2)}else{this._armature._sortZOrder(null,0)}}}_onUpdateFrame(){}}m.ZOrderTimelineState=e;class s extends m.BoneTimelineState{static toString(){return"[class dragonBones.BoneAllTimelineState]"}_onArriveAtFrame(){super._onArriveAtFrame();if(this._timelineData!==null){let t=this._animationData.frameFloatOffset+this._frameValueOffset+this._frameIndex*6;const e=this._armature._armatureData.scale;const s=this._frameFloatArray;const a=this.bonePose.current;const i=this.bonePose.delta;a.x=s[t++]*e;a.y=s[t++]*e;a.rotation=s[t++];a.skew=s[t++];a.scaleX=s[t++];a.scaleY=s[t++];if(this._tweenState===2){if(this._frameIndex===this._frameCount-1){t=this._animationData.frameFloatOffset+this._frameValueOffset}i.x=s[t++]*e-a.x;i.y=s[t++]*e-a.y;i.rotation=s[t++]-a.rotation;i.skew=s[t++]-a.skew;i.scaleX=s[t++]-a.scaleX;i.scaleY=s[t++]-a.scaleY}else{i.x=0;i.y=0;i.rotation=0;i.skew=0;i.scaleX=0;i.scaleY=0}}else{const a=this.bonePose.current;const i=this.bonePose.delta;a.x=0;a.y=0;a.rotation=0;a.skew=0;a.scaleX=1;a.scaleY=1;i.x=0;i.y=0;i.rotation=0;i.skew=0;i.scaleX=0;i.scaleY=0}}_onUpdateFrame(){super._onUpdateFrame();const t=this.bonePose.current;const e=this.bonePose.delta;const s=this.bonePose.result;this.bone._transformDirty=true;if(this._tweenState!==2){this._tweenState=0}s.x=t.x+e.x*this._tweenProgress;s.y=t.y+e.y*this._tweenProgress;s.rotation=t.rotation+e.rotation*this._tweenProgress;s.skew=t.skew+e.skew*this._tweenProgress;s.scaleX=t.scaleX+e.scaleX*this._tweenProgress;s.scaleY=t.scaleY+e.scaleY*this._tweenProgress}fadeOut(){const t=this.bonePose.result;t.rotation=m.Transform.normalizeRadian(t.rotation);t.skew=m.Transform.normalizeRadian(t.skew)}}m.BoneAllTimelineState=s;class a extends m.BoneTimelineState{static toString(){return"[class dragonBones.BoneTranslateTimelineState]"}_onArriveAtFrame(){super._onArriveAtFrame();if(this._timelineData!==null){let t=this._animationData.frameFloatOffset+this._frameValueOffset+this._frameIndex*2;const e=this._armature._armatureData.scale;const s=this._frameFloatArray;const a=this.bonePose.current;const i=this.bonePose.delta;a.x=s[t++]*e;a.y=s[t++]*e;if(this._tweenState===2){if(this._frameIndex===this._frameCount-1){t=this._animationData.frameFloatOffset+this._frameValueOffset}i.x=s[t++]*e-a.x;i.y=s[t++]*e-a.y}else{i.x=0;i.y=0}}else{const a=this.bonePose.current;const i=this.bonePose.delta;a.x=0;a.y=0;i.x=0;i.y=0}}_onUpdateFrame(){super._onUpdateFrame();const t=this.bonePose.current;const e=this.bonePose.delta;const s=this.bonePose.result;this.bone._transformDirty=true;if(this._tweenState!==2){this._tweenState=0}s.x=t.x+e.x*this._tweenProgress;s.y=t.y+e.y*this._tweenProgress}}m.BoneTranslateTimelineState=a;class i extends m.BoneTimelineState{static toString(){return"[class dragonBones.BoneRotateTimelineState]"}_onArriveAtFrame(){super._onArriveAtFrame();if(this._timelineData!==null){let t=this._animationData.frameFloatOffset+this._frameValueOffset+this._frameIndex*2;const e=this._frameFloatArray;const s=this.bonePose.current;const a=this.bonePose.delta;s.rotation=e[t++];s.skew=e[t++];if(this._tweenState===2){if(this._frameIndex===this._frameCount-1){t=this._animationData.frameFloatOffset+this._frameValueOffset;a.rotation=m.Transform.normalizeRadian(e[t++]-s.rotation)}else{a.rotation=e[t++]-s.rotation}a.skew=e[t++]-s.skew}else{a.rotation=0;a.skew=0}}else{const s=this.bonePose.current;const a=this.bonePose.delta;s.rotation=0;s.skew=0;a.rotation=0;a.skew=0}}_onUpdateFrame(){super._onUpdateFrame();const t=this.bonePose.current;const e=this.bonePose.delta;const s=this.bonePose.result;this.bone._transformDirty=true;if(this._tweenState!==2){this._tweenState=0}s.rotation=t.rotation+e.rotation*this._tweenProgress;s.skew=t.skew+e.skew*this._tweenProgress}fadeOut(){const t=this.bonePose.result;t.rotation=m.Transform.normalizeRadian(t.rotation);t.skew=m.Transform.normalizeRadian(t.skew)}}m.BoneRotateTimelineState=i;class r extends m.BoneTimelineState{static toString(){return"[class dragonBones.BoneScaleTimelineState]"}_onArriveAtFrame(){super._onArriveAtFrame();if(this._timelineData!==null){let t=this._animationData.frameFloatOffset+this._frameValueOffset+this._frameIndex*2;const e=this._frameFloatArray;const s=this.bonePose.current;const a=this.bonePose.delta;s.scaleX=e[t++];s.scaleY=e[t++];if(this._tweenState===2){if(this._frameIndex===this._frameCount-1){t=this._animationData.frameFloatOffset+this._frameValueOffset}a.scaleX=e[t++]-s.scaleX;a.scaleY=e[t++]-s.scaleY}else{a.scaleX=0;a.scaleY=0}}else{const s=this.bonePose.current;const a=this.bonePose.delta;s.scaleX=1;s.scaleY=1;a.scaleX=0;a.scaleY=0}}_onUpdateFrame(){super._onUpdateFrame();const t=this.bonePose.current;const e=this.bonePose.delta;const s=this.bonePose.result;this.bone._transformDirty=true;if(this._tweenState!==2){this._tweenState=0}s.scaleX=t.scaleX+e.scaleX*this._tweenProgress;s.scaleY=t.scaleY+e.scaleY*this._tweenProgress}}m.BoneScaleTimelineState=r;class n extends m.TweenTimelineState{constructor(){super(...arguments);this._current=[];this._delta=[];this._result=[]}static toString(){return"[class dragonBones.SurfaceTimelineState]"}_onClear(){super._onClear();this.surface=null;this._frameFloatOffset=0;this._valueCount=0;this._deformCount=0;this._valueOffset=0;this._current.length=0;this._delta.length=0;this._result.length=0}_onArriveAtFrame(){super._onArriveAtFrame();if(this._timelineData!==null){const s=this._animationData.frameFloatOffset+this._frameValueOffset+this._frameIndex*this._valueCount;const a=this._armature._armatureData.scale;const i=this._frameFloatArray;if(this._tweenState===2){let e=s+this._valueCount;if(this._frameIndex===this._frameCount-1){e=this._animationData.frameFloatOffset+this._frameValueOffset}for(let t=0;t<this._valueCount;++t){this._delta[t]=i[e+t]*a-(this._current[t]=i[s+t]*a)}}else{for(let t=0;t<this._valueCount;++t){this._current[t]=i[s+t]*a}}}else{for(let t=0;t<this._valueCount;++t){this._current[t]=0}}}_onUpdateFrame(){super._onUpdateFrame();this.surface._transformDirty=true;if(this._tweenState!==2){this._tweenState=0}for(let t=0;t<this._valueCount;++t){this._result[t]=this._current[t]+this._delta[t]*this._tweenProgress}}init(t,e,s){super.init(t,e,s);if(this._timelineData!==null){const a=this._animationData.frameIntOffset+this._timelineArray[this._timelineData.offset+3];this._deformCount=this._frameIntArray[a+1];this._valueCount=this._frameIntArray[a+2];this._valueOffset=this._frameIntArray[a+3];this._frameFloatOffset=this._frameIntArray[a+4]+this._animationData.frameFloatOffset}else{this._deformCount=this.surface._deformVertices.length;this._valueCount=this._deformCount;this._valueOffset=0;this._frameFloatOffset=0}this._current.length=this._valueCount;this._delta.length=this._valueCount;this._result.length=this._valueCount;for(let t=0;t<this._valueCount;++t){this._delta[t]=0}}blend(s){const a=this.surface._blendState.blendWeight;const i=this.surface._deformVertices;for(let e=0;e<this._deformCount;++e){let t=0;if(e<this._valueOffset){t=this._frameFloatArray[this._frameFloatOffset+e]}else if(e<this._valueOffset+this._valueCount){t=this._result[e-this._valueOffset]}else{t=this._frameFloatArray[this._frameFloatOffset+e-this._valueCount]}if(s===2){i[e]+=t*a}else if(a!==1){i[e]=t*a}else{i[e]=t}}if(this._animationState._fadeState!==0||this._animationState._subFadeState!==0){this.surface._transformDirty=true}}}m.SurfaceTimelineState=n;class o extends m.SlotTimelineState{static toString(){return"[class dragonBones.SlotDislayTimelineState]"}_onArriveAtFrame(){if(this.playState>=0){const t=this._timelineData!==null?this._frameArray[this._frameOffset+1]:this.slot._slotData.displayIndex;if(this.slot.displayIndex!==t){this.slot._setDisplayIndex(t,true)}}}}m.SlotDislayTimelineState=o;class l extends m.SlotTimelineState{constructor(){super(...arguments);this._current=[0,0,0,0,0,0,0,0];this._delta=[0,0,0,0,0,0,0,0];this._result=[0,0,0,0,0,0,0,0]}static toString(){return"[class dragonBones.SlotColorTimelineState]"}_onClear(){super._onClear();this._dirty=false}_onArriveAtFrame(){super._onArriveAtFrame();if(this._timelineData!==null){const e=this._dragonBonesData.intArray;const s=this._frameIntArray;const a=this._animationData.frameIntOffset+this._frameValueOffset+this._frameIndex*1;let t=s[a];if(t<0){t+=65536}this._current[0]=e[t++];this._current[1]=e[t++];this._current[2]=e[t++];this._current[3]=e[t++];this._current[4]=e[t++];this._current[5]=e[t++];this._current[6]=e[t++];this._current[7]=e[t++];if(this._tweenState===2){if(this._frameIndex===this._frameCount-1){t=s[this._animationData.frameIntOffset+this._frameValueOffset]}else{t=s[a+1*1]}if(t<0){t+=65536}this._delta[0]=e[t++]-this._current[0];this._delta[1]=e[t++]-this._current[1];this._delta[2]=e[t++]-this._current[2];this._delta[3]=e[t++]-this._current[3];this._delta[4]=e[t++]-this._current[4];this._delta[5]=e[t++]-this._current[5];this._delta[6]=e[t++]-this._current[6];this._delta[7]=e[t++]-this._current[7]}}else{const t=this.slot._slotData.color;this._current[0]=t.alphaMultiplier*100;this._current[1]=t.redMultiplier*100;this._current[2]=t.greenMultiplier*100;this._current[3]=t.blueMultiplier*100;this._current[4]=t.alphaOffset;this._current[5]=t.redOffset;this._current[6]=t.greenOffset;this._current[7]=t.blueOffset}}_onUpdateFrame(){super._onUpdateFrame();this._dirty=true;if(this._tweenState!==2){this._tweenState=0}this._result[0]=(this._current[0]+this._delta[0]*this._tweenProgress)*.01;this._result[1]=(this._current[1]+this._delta[1]*this._tweenProgress)*.01;this._result[2]=(this._current[2]+this._delta[2]*this._tweenProgress)*.01;this._result[3]=(this._current[3]+this._delta[3]*this._tweenProgress)*.01;this._result[4]=this._current[4]+this._delta[4]*this._tweenProgress;this._result[5]=this._current[5]+this._delta[5]*this._tweenProgress;this._result[6]=this._current[6]+this._delta[6]*this._tweenProgress;this._result[7]=this._current[7]+this._delta[7]*this._tweenProgress}fadeOut(){this._tweenState=0;this._dirty=false}update(t){super.update(t);if(this._tweenState!==0||this._dirty){const e=this.slot._colorTransform;if(this._animationState._fadeState!==0||this._animationState._subFadeState!==0){if(e.alphaMultiplier!==this._result[0]||e.redMultiplier!==this._result[1]||e.greenMultiplier!==this._result[2]||e.blueMultiplier!==this._result[3]||e.alphaOffset!==this._result[4]||e.redOffset!==this._result[5]||e.greenOffset!==this._result[6]||e.blueOffset!==this._result[7]){const s=Math.pow(this._animationState._fadeProgress,4);e.alphaMultiplier+=(this._result[0]-e.alphaMultiplier)*s;e.redMultiplier+=(this._result[1]-e.redMultiplier)*s;e.greenMultiplier+=(this._result[2]-e.greenMultiplier)*s;e.blueMultiplier+=(this._result[3]-e.blueMultiplier)*s;e.alphaOffset+=(this._result[4]-e.alphaOffset)*s;e.redOffset+=(this._result[5]-e.redOffset)*s;e.greenOffset+=(this._result[6]-e.greenOffset)*s;e.blueOffset+=(this._result[7]-e.blueOffset)*s;this.slot._colorDirty=true}}else if(this._dirty){this._dirty=false;if(e.alphaMultiplier!==this._result[0]||e.redMultiplier!==this._result[1]||e.greenMultiplier!==this._result[2]||e.blueMultiplier!==this._result[3]||e.alphaOffset!==this._result[4]||e.redOffset!==this._result[5]||e.greenOffset!==this._result[6]||e.blueOffset!==this._result[7]){e.alphaMultiplier=this._result[0];e.redMultiplier=this._result[1];e.greenMultiplier=this._result[2];e.blueMultiplier=this._result[3];e.alphaOffset=this._result[4];e.redOffset=this._result[5];e.greenOffset=this._result[6];e.blueOffset=this._result[7];this.slot._colorDirty=true}}}}}m.SlotColorTimelineState=l;class h extends m.SlotTimelineState{constructor(){super(...arguments);this._current=[];this._delta=[];this._result=[]}static toString(){return"[class dragonBones.DeformTimelineState]"}_onClear(){super._onClear();this.vertexOffset=0;this._dirty=false;this._frameFloatOffset=0;this._valueCount=0;this._deformCount=0;this._valueOffset=0;this._current.length=0;this._delta.length=0;this._result.length=0}_onArriveAtFrame(){super._onArriveAtFrame();if(this._timelineData!==null){const s=this._animationData.frameFloatOffset+this._frameValueOffset+this._frameIndex*this._valueCount;const a=this._armature._armatureData.scale;const i=this._frameFloatArray;if(this._tweenState===2){let e=s+this._valueCount;if(this._frameIndex===this._frameCount-1){e=this._animationData.frameFloatOffset+this._frameValueOffset}for(let t=0;t<this._valueCount;++t){this._delta[t]=i[e+t]*a-(this._current[t]=i[s+t]*a)}}else{for(let t=0;t<this._valueCount;++t){this._current[t]=i[s+t]*a}}}else{for(let t=0;t<this._valueCount;++t){this._current[t]=0}}}_onUpdateFrame(){super._onUpdateFrame();this._dirty=true;if(this._tweenState!==2){this._tweenState=0}for(let t=0;t<this._valueCount;++t){this._result[t]=this._current[t]+this._delta[t]*this._tweenProgress}}init(t,e,s){super.init(t,e,s);if(this._timelineData!==null){const a=this._animationData.frameIntOffset+this._timelineArray[this._timelineData.offset+3];this.vertexOffset=this._frameIntArray[a+0];if(this.vertexOffset<0){this.vertexOffset+=65536}this._deformCount=this._frameIntArray[a+1];this._valueCount=this._frameIntArray[a+2];this._valueOffset=this._frameIntArray[a+3];this._frameFloatOffset=this._frameIntArray[a+4]+this._animationData.frameFloatOffset}else{const i=this.slot._deformVertices;this._deformCount=i!==null?i.vertices.length:0;this._valueCount=this._deformCount;this._valueOffset=0;this._frameFloatOffset=0}this._current.length=this._valueCount;this._delta.length=this._valueCount;this._result.length=this._valueCount;for(let t=0;t<this._valueCount;++t){this._delta[t]=0}}fadeOut(){this._tweenState=0;this._dirty=false}update(t){const e=this.slot._deformVertices;if(e===null||e.verticesData===null||e.verticesData.offset!==this.vertexOffset){return}super.update(t);if(this._tweenState!==0||this._dirty){const s=e.vertices;if(this._animationState._fadeState!==0||this._animationState._subFadeState!==0){const a=Math.pow(this._animationState._fadeProgress,2);for(let t=0;t<this._deformCount;++t){if(t<this._valueOffset){s[t]+=(this._frameFloatArray[this._frameFloatOffset+t]-s[t])*a}else if(t<this._valueOffset+this._valueCount){s[t]+=(this._result[t-this._valueOffset]-s[t])*a}else{s[t]+=(this._frameFloatArray[this._frameFloatOffset+t-this._valueCount]-s[t])*a}}e.verticesDirty=true}else if(this._dirty){this._dirty=false;for(let t=0;t<this._deformCount;++t){if(t<this._valueOffset){s[t]=this._frameFloatArray[this._frameFloatOffset+t]}else if(t<this._valueOffset+this._valueCount){s[t]=this._result[t-this._valueOffset]}else{s[t]=this._frameFloatArray[this._frameFloatOffset+t-this._valueCount]}}e.verticesDirty=true}}}}m.DeformTimelineState=h;class _ extends m.ConstraintTimelineState{static toString(){return"[class dragonBones.IKConstraintTimelineState]"}_onClear(){super._onClear();this._current=0;this._delta=0}_onArriveAtFrame(){super._onArriveAtFrame();const e=this.constraint;if(this._timelineData!==null){let t=this._animationData.frameIntOffset+this._frameValueOffset+this._frameIndex*2;const s=this._frameIntArray;const a=s[t++]!==0;this._current=s[t++]*.01;if(this._tweenState===2){if(this._frameIndex===this._frameCount-1){t=this._animationData.frameIntOffset+this._frameValueOffset}this._delta=s[t+1]*.01-this._current}else{this._delta=0}e._bendPositive=a}else{const t=e._constraintData;this._current=t.weight;this._delta=0;e._bendPositive=t.bendPositive}e.invalidUpdate()}_onUpdateFrame(){super._onUpdateFrame();if(this._tweenState!==2){this._tweenState=0}const t=this.constraint;t._weight=this._current+this._delta*this._tweenProgress;t.invalidUpdate()}}m.IKConstraintTimelineState=_;class f extends m.TweenTimelineState{constructor(){super(...arguments);this._floats=[0,0,0,0,0,0]}static toString(){return"[class dragonBones.AnimationTimelineState]"}_onClear(){super._onClear();this.animationState=null}_onArriveAtFrame(){super._onArriveAtFrame();if(this._timelineData===null){return}let t=this._animationData.frameIntOffset+this._frameValueOffset+this._frameIndex*2;const e=1/this.animationState._animationData.parent.frameRate;const s=this._frameIntArray;this._floats[0]=s[t++]*e;this._floats[3]=s[t++]*.01;if(this._tweenState===2){if(this._frameIndex===this._frameCount-1){t=this._animationData.frameIntOffset+this._frameValueOffset}this._floats[1]=s[t++]*e-this._floats[0];this._floats[4]=s[t++]*.01-this._floats[3]}else{this._floats[1]=0;this._floats[4]=0}}_onUpdateFrame(){super._onUpdateFrame();if(this._tweenState!==2){this._tweenState=0}if(this._floats[0]>=0){this._floats[2]=this._floats[0]+this._floats[1]*this._tweenProgress}this._floats[5]=this._floats[3]+this._floats[4]*this._tweenProgress}blend(t){const e=this.animationState;const s=e._blendState.blendWeight;if(t===2){e.weight+=this._floats[5]*s;e.currentTime+=this._floats[2]*s}else{e.weight=this._floats[5]*s;e.currentTime=this._floats[2]*s}}}m.AnimationTimelineState=f})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class a extends t.BaseObject{static actionDataToInstance(t,e,s){if(t.type===0){e.type=a.FRAME_EVENT}else{e.type=t.type===10?a.FRAME_EVENT:a.SOUND_EVENT}e.name=t.name;e.armature=s;e.actionData=t;e.data=t.data;if(t.bone!==null){e.bone=s.getBone(t.bone.name)}if(t.slot!==null){e.slot=s.getSlot(t.slot.name)}}static toString(){return"[class dragonBones.EventObject]"}_onClear(){this.time=0;this.type="";this.name="";this.armature=null;this.bone=null;this.slot=null;this.animationState=null;this.actionData=null;this.data=null}}a.START="start";a.LOOP_COMPLETE="loopComplete";a.COMPLETE="complete";a.FADE_IN="fadeIn";a.FADE_IN_COMPLETE="fadeInComplete";a.FADE_OUT="fadeOut";a.FADE_OUT_COMPLETE="fadeOutComplete";a.FRAME_EVENT="frameEvent";a.SOUND_EVENT="soundEvent";t.EventObject=a})(dragonBones||(dragonBones={}));var dragonBones;(function(l){class h{static _getArmatureType(t){switch(t.toLowerCase()){case"stage":return 2;case"armature":return 0;case"movieclip":return 1;default:return 0}}static _getBoneType(t){switch(t.toLowerCase()){case"bone":return 0;case"surface":return 1;default:return 0}}static _getDisplayType(t){switch(t.toLowerCase()){case"image":return 0;case"mesh":return 2;case"armature":return 1;case"boundingbox":return 3;case"path":return 4;default:return 0}}static _getBoundingBoxType(t){switch(t.toLowerCase()){case"rectangle":return 0;case"ellipse":return 1;case"polygon":return 2;default:return 0}}static _getActionType(t){switch(t.toLowerCase()){case"play":return 0;case"frame":return 10;case"sound":return 11;default:return 0}}static _getBlendMode(t){switch(t.toLowerCase()){case"normal":return 0;case"add":return 1;case"alpha":return 2;case"darken":return 3;case"difference":return 4;case"erase":return 5;case"hardlight":return 6;case"invert":return 7;case"layer":return 8;case"lighten":return 9;case"multiply":return 10;case"overlay":return 11;case"screen":return 12;case"subtract":return 13;default:return 0}}static _getPositionMode(t){switch(t.toLocaleLowerCase()){case"percent":return 1;case"fixed":return 0;default:return 1}}static _getSpacingMode(t){switch(t.toLocaleLowerCase()){case"length":return 0;case"percent":return 2;case"fixed":return 1;default:return 0}}static _getRotateMode(t){switch(t.toLocaleLowerCase()){case"tangent":return 0;case"chain":return 1;case"chainscale":return 2;default:return 0}}static parseDragonBonesData(t){console.warn("Deprecated.");if(t instanceof ArrayBuffer){return l.BinaryDataParser.getInstance().parseDragonBonesData(t)}else{return l.ObjectDataParser.getInstance().parseDragonBonesData(t)}}static parseTextureAtlasData(t,s=1){console.warn("已废弃");const a={};const i=t[h.SUB_TEXTURE];for(let e=0,t=i.length;e<t;e++){const r=i[e];const n=r[h.NAME];const o=new l.Rectangle;let t=null;o.x=r[h.X]/s;o.y=r[h.Y]/s;o.width=r[h.WIDTH]/s;o.height=r[h.HEIGHT]/s;if(h.FRAME_WIDTH in r){t=new l.Rectangle;t.x=r[h.FRAME_X]/s;t.y=r[h.FRAME_Y]/s;t.width=r[h.FRAME_WIDTH]/s;t.height=r[h.FRAME_HEIGHT]/s}a[n]={region:o,frame:t,rotated:false}}return a}}h.DATA_VERSION_2_3="2.3";h.DATA_VERSION_3_0="3.0";h.DATA_VERSION_4_0="4.0";h.DATA_VERSION_4_5="4.5";h.DATA_VERSION_5_0="5.0";h.DATA_VERSION_5_5="5.5";h.DATA_VERSION=h.DATA_VERSION_5_5;h.DATA_VERSIONS=[h.DATA_VERSION_4_0,h.DATA_VERSION_4_5,h.DATA_VERSION_5_0,h.DATA_VERSION_5_5];h.TEXTURE_ATLAS="textureAtlas";h.SUB_TEXTURE="SubTexture";h.FORMAT="format";h.IMAGE_PATH="imagePath";h.WIDTH="width";h.HEIGHT="height";h.ROTATED="rotated";h.FRAME_X="frameX";h.FRAME_Y="frameY";h.FRAME_WIDTH="frameWidth";h.FRAME_HEIGHT="frameHeight";h.DRADON_BONES="dragonBones";h.USER_DATA="userData";h.ARMATURE="armature";h.BONE="bone";h.SURFACE="surface";h.SLOT="slot";h.CONSTRAINT="constraint";h.IK="ik";h.PATH_CONSTRAINT="path";h.SKIN="skin";h.DISPLAY="display";h.ANIMATION="animation";h.Z_ORDER="zOrder";h.FFD="ffd";h.FRAME="frame";h.TRANSLATE_FRAME="translateFrame";h.ROTATE_FRAME="rotateFrame";h.SCALE_FRAME="scaleFrame";h.DISPLAY_FRAME="displayFrame";h.COLOR_FRAME="colorFrame";h.DEFAULT_ACTIONS="defaultActions";h.ACTIONS="actions";h.EVENTS="events";h.INTS="ints";h.FLOATS="floats";h.STRINGS="strings";h.CANVAS="canvas";h.TRANSFORM="transform";h.PIVOT="pivot";h.AABB="aabb";h.COLOR="color";h.VERSION="version";h.COMPATIBLE_VERSION="compatibleVersion";h.FRAME_RATE="frameRate";h.TYPE="type";h.SUB_TYPE="subType";h.NAME="name";h.PARENT="parent";h.TARGET="target";h.STAGE="stage";h.SHARE="share";h.PATH="path";h.LENGTH="length";h.DISPLAY_INDEX="displayIndex";h.BLEND_MODE="blendMode";h.INHERIT_TRANSLATION="inheritTranslation";h.INHERIT_ROTATION="inheritRotation";h.INHERIT_SCALE="inheritScale";h.INHERIT_REFLECTION="inheritReflection";h.INHERIT_ANIMATION="inheritAnimation";h.INHERIT_DEFORM="inheritDeform";h.SEGMENT_X="segmentX";h.SEGMENT_Y="segmentY";h.BEND_POSITIVE="bendPositive";h.CHAIN="chain";h.WEIGHT="weight";h.FADE_IN_TIME="fadeInTime";h.PLAY_TIMES="playTimes";h.SCALE="scale";h.OFFSET="offset";h.POSITION="position";h.DURATION="duration";h.TWEEN_EASING="tweenEasing";h.TWEEN_ROTATE="tweenRotate";h.TWEEN_SCALE="tweenScale";h.CLOCK_WISE="clockwise";h.CURVE="curve";h.SOUND="sound";h.EVENT="event";h.ACTION="action";h.X="x";h.Y="y";h.SKEW_X="skX";h.SKEW_Y="skY";h.SCALE_X="scX";h.SCALE_Y="scY";h.VALUE="value";h.ROTATE="rotate";h.SKEW="skew";h.ALPHA_OFFSET="aO";h.RED_OFFSET="rO";h.GREEN_OFFSET="gO";h.BLUE_OFFSET="bO";h.ALPHA_MULTIPLIER="aM";h.RED_MULTIPLIER="rM";h.GREEN_MULTIPLIER="gM";h.BLUE_MULTIPLIER="bM";h.UVS="uvs";h.VERTICES="vertices";h.TRIANGLES="triangles";h.WEIGHTS="weights";h.SLOT_POSE="slotPose";h.BONE_POSE="bonePose";h.GLUE_WEIGHTS="glueWeights";h.GLUE_MESHES="glueMeshes";h.BONES="bones";h.POSITION_MODE="positionMode";h.SPACING_MODE="spacingMode";h.ROTATE_MODE="rotateMode";h.SPACING="spacing";h.ROTATE_OFFSET="rotateOffset";h.ROTATE_MIX="rotateMix";h.TRANSLATE_MIX="translateMix";h.TARGET_DISPLAY="targetDisplay";h.CLOSED="closed";h.CONSTANT_SPEED="constantSpeed";h.VERTEX_COUNT="vertexCount";h.LENGTHS="lengths";h.GOTO_AND_PLAY="gotoAndPlay";h.DEFAULT_NAME="default";l.DataParser=h})(dragonBones||(dragonBones={}));var dragonBones;(function(I){class w extends I.DataParser{constructor(){super(...arguments);this._rawTextureAtlasIndex=0;this._rawBones=[];this._data=null;this._armature=null;this._bone=null;this._surface=null;this._slot=null;this._skin=null;this._mesh=null;this._animation=null;this._timeline=null;this._rawTextureAtlases=null;this._defaultColorOffset=-1;this._prevClockwise=0;this._prevRotation=0;this._helpMatrixA=new I.Matrix;this._helpMatrixB=new I.Matrix;this._helpTransform=new I.Transform;this._helpColorTransform=new I.ColorTransform;this._helpPoint=new I.Point;this._helpArray=[];this._intArray=[];this._floatArray=[];this._frameIntArray=[];this._frameFloatArray=[];this._frameArray=[];this._timelineArray=[];this._cacheRawMeshes=[];this._cacheMeshes=[];this._actionFrames=[];this._weightSlotPose={};this._weightBonePoses={};this._cacheBones={};this._slotChildActions={}}static _getBoolean(t,e,s){if(e in t){const a=t[e];const i=typeof a;if(i==="boolean"){return a}else if(i==="string"){switch(a){case"0":case"NaN":case"":case"false":case"null":case"undefined":return false;default:return true}}else{return!!a}}return s}static _getNumber(t,e,s){if(e in t){const a=t[e];if(a===null||a==="NaN"){return s}return+a||0}return s}static _getString(t,e,s){if(e in t){const a=t[e];const i=typeof a;if(i==="string"){if(I.DragonBones.webAssembly){for(let t=0,e=a.length;t<e;++t){if(a.charCodeAt(t)>255){return encodeURI(a)}}}return a}return String(a)}return s}_getCurvePoint(t,e,s,a,i,r,n,o,l,h){const _=1-l;const f=_*_;const c=l*l;const u=_*f;const m=3*l*f;const d=3*_*c;const p=l*c;h.x=u*t+m*s+d*i+p*n;h.y=u*e+m*a+d*r+p*o}_samplingEasingCurve(r,n){const o=r.length;let l=-2;for(let a=0,i=n.length;a<i;++a){let t=(a+1)/(i+1);while((l+6<o?r[l+6]:1)<t){l+=6}const h=l>=0&&l+6<o;const _=h?r[l]:0;const f=h?r[l+1]:0;const c=r[l+2];const u=r[l+3];const m=r[l+4];const d=r[l+5];const p=h?r[l+6]:1;const g=h?r[l+7]:1;let e=0;let s=1;while(s-e>1e-4){const y=(s+e)*.5;this._getCurvePoint(_,f,c,u,m,d,p,g,y,this._helpPoint);if(t-this._helpPoint.x>0){e=y}else{s=y}}n[a]=this._helpPoint.y}}_parseActionDataInFrame(t,e,s,a){if(I.DataParser.EVENT in t){this._mergeActionFrame(t[I.DataParser.EVENT],e,10,s,a)}if(I.DataParser.SOUND in t){this._mergeActionFrame(t[I.DataParser.SOUND],e,11,s,a)}if(I.DataParser.ACTION in t){this._mergeActionFrame(t[I.DataParser.ACTION],e,0,s,a)}if(I.DataParser.EVENTS in t){this._mergeActionFrame(t[I.DataParser.EVENTS],e,10,s,a)}if(I.DataParser.ACTIONS in t){this._mergeActionFrame(t[I.DataParser.ACTIONS],e,0,s,a)}}_mergeActionFrame(t,e,s,a,i){const r=I.DragonBones.webAssembly?this._armature.actions.size():this._armature.actions.length;const n=this._parseActionData(t,s,a,i);let o=0;let l=null;for(const h of n){this._armature.addAction(h,false)}if(this._actionFrames.length===0){l=new p;l.frameStart=0;this._actionFrames.push(l);l=null}for(const _ of this._actionFrames){if(_.frameStart===e){l=_;break}else if(_.frameStart>e){break}o++}if(l===null){l=new p;l.frameStart=e;this._actionFrames.splice(o+1,0,l)}for(let t=0;t<n.length;++t){l.actions.push(r+t)}}_parseArmature(s,t){const a=I.BaseObject.borrowObject(I.ArmatureData);a.name=w._getString(s,I.DataParser.NAME,"");a.frameRate=w._getNumber(s,I.DataParser.FRAME_RATE,this._data.frameRate);a.scale=t;if(I.DataParser.TYPE in s&&typeof s[I.DataParser.TYPE]==="string"){a.type=I.DataParser._getArmatureType(s[I.DataParser.TYPE])}else{a.type=w._getNumber(s,I.DataParser.TYPE,0)}if(a.frameRate===0){a.frameRate=24}this._armature=a;if(I.DataParser.CANVAS in s){const e=s[I.DataParser.CANVAS];const i=I.BaseObject.borrowObject(I.CanvasData);if(I.DataParser.COLOR in e){i.hasBackground=true}else{i.hasBackground=false}i.color=w._getNumber(e,I.DataParser.COLOR,0);i.x=w._getNumber(e,I.DataParser.X,0)*a.scale;i.y=w._getNumber(e,I.DataParser.Y,0)*a.scale;i.width=w._getNumber(e,I.DataParser.WIDTH,0)*a.scale;i.height=w._getNumber(e,I.DataParser.HEIGHT,0)*a.scale;a.canvas=i}if(I.DataParser.AABB in s){const r=s[I.DataParser.AABB];a.aabb.x=w._getNumber(r,I.DataParser.X,0)*a.scale;a.aabb.y=w._getNumber(r,I.DataParser.Y,0)*a.scale;a.aabb.width=w._getNumber(r,I.DataParser.WIDTH,0)*a.scale;a.aabb.height=w._getNumber(r,I.DataParser.HEIGHT,0)*a.scale}if(I.DataParser.BONE in s){const n=s[I.DataParser.BONE];for(const o of n){const l=w._getString(o,I.DataParser.PARENT,"");const h=this._parseBone(o);if(l.length>0){const _=a.getBone(l);if(_!==null){h.parent=_}else{if(!(l in this._cacheBones)){this._cacheBones[l]=[]}this._cacheBones[l].push(h)}}if(h.name in this._cacheBones){for(const f of this._cacheBones[h.name]){f.parent=h}delete this._cacheBones[h.name]}a.addBone(h);this._rawBones.push(h)}}if(I.DataParser.IK in s){const c=s[I.DataParser.IK];for(const u of c){const m=this._parseIKConstraint(u);if(m){a.addConstraint(m)}}}a.sortBones();if(I.DataParser.SLOT in s){let t=0;const d=s[I.DataParser.SLOT];for(const p of d){a.addSlot(this._parseSlot(p,t++))}}if(I.DataParser.SKIN in s){const g=s[I.DataParser.SKIN];for(const y of g){a.addSkin(this._parseSkin(y))}}if(I.DataParser.PATH_CONSTRAINT in s){const D=s[I.DataParser.PATH_CONSTRAINT];for(const T of D){const m=this._parsePathConstraint(T);if(m){a.addConstraint(m)}}}for(let t=0,e=this._cacheRawMeshes.length;t<e;++t){const b=this._cacheRawMeshes[t];if(!(I.DataParser.GLUE_WEIGHTS in b)||!(I.DataParser.GLUE_MESHES in b)){continue}this._parseMeshGlue(b,this._cacheMeshes[t])}for(let e=0,t=this._cacheRawMeshes.length;e<t;++e){const s=this._cacheRawMeshes[e];const A=w._getString(s,I.DataParser.SHARE,"");if(A.length===0){continue}let t=w._getString(s,I.DataParser.SKIN,I.DataParser.DEFAULT_NAME);if(t.length===0){t=I.DataParser.DEFAULT_NAME}const S=a.getMesh(t,"",A);if(S===null){continue}const P=this._cacheMeshes[e];P.vertices.shareFrom(S.vertices)}if(I.DataParser.ANIMATION in s){const x=s[I.DataParser.ANIMATION];for(const O of x){const B=this._parseAnimation(O);a.addAnimation(B)}}if(I.DataParser.DEFAULT_ACTIONS in s){const M=this._parseActionData(s[I.DataParser.DEFAULT_ACTIONS],0,null,null);for(const E of M){a.addAction(E,true);if(E.type===0){const B=a.getAnimation(E.name);if(B!==null){a.defaultAnimation=B}}}}if(I.DataParser.ACTIONS in s){const M=this._parseActionData(s[I.DataParser.ACTIONS],0,null,null);for(const E of M){a.addAction(E,false)}}this._rawBones.length=0;this._cacheRawMeshes.length=0;this._cacheMeshes.length=0;this._armature=null;for(let t in this._weightSlotPose){delete this._weightSlotPose[t]}for(let t in this._weightBonePoses){delete this._weightBonePoses[t]}for(let t in this._cacheBones){delete this._cacheBones[t]}for(let t in this._slotChildActions){delete this._slotChildActions[t]}return a}_parseBone(t){let e=0;const s=this._armature.scale;if(I.DataParser.TYPE in t&&typeof t[I.DataParser.TYPE]==="string"){e=I.DataParser._getBoneType(t[I.DataParser.TYPE])}else{e=w._getNumber(t,I.DataParser.TYPE,0)}if(e===0){const i=I.BaseObject.borrowObject(I.BoneData);i.inheritTranslation=w._getBoolean(t,I.DataParser.INHERIT_TRANSLATION,true);i.inheritRotation=w._getBoolean(t,I.DataParser.INHERIT_ROTATION,true);i.inheritScale=w._getBoolean(t,I.DataParser.INHERIT_SCALE,true);i.inheritReflection=w._getBoolean(t,I.DataParser.INHERIT_REFLECTION,true);i.length=w._getNumber(t,I.DataParser.LENGTH,0)*s;i.name=w._getString(t,I.DataParser.NAME,"");if(I.DataParser.TRANSFORM in t){this._parseTransform(t[I.DataParser.TRANSFORM],i.transform,s)}return i}const a=I.BaseObject.borrowObject(I.SurfaceData);a.name=w._getString(t,I.DataParser.NAME,"");a.segmentX=w._getNumber(t,I.DataParser.SEGMENT_X,0);a.segmentY=w._getNumber(t,I.DataParser.SEGMENT_Y,0);a.vertices.length=(a.segmentX+1)*(a.segmentY+1)*2;if(I.DataParser.VERTICES in t){const r=t[I.DataParser.VERTICES];for(let t=0,e=a.vertices.length;t<e;++t){if(t<r.length){a.vertices[t]=r[t]*s}else{a.vertices[t]=0}}}return a}_parseIKConstraint(t){const e=this._armature.getBone(w._getString(t,I.DataParser.BONE,""));if(e===null){return null}const s=this._armature.getBone(w._getString(t,I.DataParser.TARGET,""));if(s===null){return null}const a=I.BaseObject.borrowObject(I.IKConstraintData);a.scaleEnabled=w._getBoolean(t,I.DataParser.SCALE,false);a.bendPositive=w._getBoolean(t,I.DataParser.BEND_POSITIVE,true);a.weight=w._getNumber(t,I.DataParser.WEIGHT,1);a.name=w._getString(t,I.DataParser.NAME,"");a.type=0;a.target=s;const i=w._getNumber(t,I.DataParser.CHAIN,0);if(i>0&&e.parent!==null){a.root=e.parent;a.bone=e}else{a.root=e;a.bone=null}return a}_parsePathConstraint(t){const e=this._armature.getSlot(w._getString(t,I.DataParser.TARGET,""));if(e===null){return null}const s=this._armature.defaultSkin;if(s===null){return null}const a=s.getDisplay(e.name,w._getString(t,I.DataParser.TARGET_DISPLAY,e.name));if(a===null||!(a instanceof I.PathDisplayData)){return null}const i=t[I.DataParser.BONES];if(i===null||i.length===0){return null}const r=I.BaseObject.borrowObject(I.PathConstraintData);r.name=w._getString(t,I.DataParser.NAME,"");r.type=1;r.pathSlot=e;r.pathDisplayData=a;r.target=e.parent;r.positionMode=I.DataParser._getPositionMode(w._getString(t,I.DataParser.POSITION_MODE,""));r.spacingMode=I.DataParser._getSpacingMode(w._getString(t,I.DataParser.SPACING_MODE,""));r.rotateMode=I.DataParser._getRotateMode(w._getString(t,I.DataParser.ROTATE_MODE,""));r.position=w._getNumber(t,I.DataParser.POSITION,0);r.spacing=w._getNumber(t,I.DataParser.SPACING,0);r.rotateOffset=w._getNumber(t,I.DataParser.ROTATE_OFFSET,0);r.rotateMix=w._getNumber(t,I.DataParser.ROTATE_MIX,1);r.translateMix=w._getNumber(t,I.DataParser.TRANSLATE_MIX,1);for(var n of i){const o=this._armature.getBone(n);if(o!==null){r.AddBone(o);if(r.root===null){r.root=o}}}return r}_parseSlot(t,e){const s=I.BaseObject.borrowObject(I.SlotData);s.displayIndex=w._getNumber(t,I.DataParser.DISPLAY_INDEX,0);s.zOrder=e;s.name=w._getString(t,I.DataParser.NAME,"");s.parent=this._armature.getBone(w._getString(t,I.DataParser.PARENT,""));if(I.DataParser.BLEND_MODE in t&&typeof t[I.DataParser.BLEND_MODE]==="string"){s.blendMode=I.DataParser._getBlendMode(t[I.DataParser.BLEND_MODE])}else{s.blendMode=w._getNumber(t,I.DataParser.BLEND_MODE,0)}if(I.DataParser.COLOR in t){s.color=I.SlotData.createColor();this._parseColorTransform(t[I.DataParser.COLOR],s.color)}else{s.color=I.SlotData.DEFAULT_COLOR}if(I.DataParser.ACTIONS in t){this._slotChildActions[s.name]=this._parseActionData(t[I.DataParser.ACTIONS],0,null,null)}return s}_parseSkin(t){const e=I.BaseObject.borrowObject(I.SkinData);e.name=w._getString(t,I.DataParser.NAME,I.DataParser.DEFAULT_NAME);if(e.name.length===0){e.name=I.DataParser.DEFAULT_NAME}if(I.DataParser.SLOT in t){const s=t[I.DataParser.SLOT];this._skin=e;for(const a of s){const i=w._getString(a,I.DataParser.NAME,"");const r=this._armature.getSlot(i);if(r!==null){this._slot=r;if(I.DataParser.DISPLAY in a){const n=a[I.DataParser.DISPLAY];for(const o of n){if(o){e.addDisplay(i,this._parseDisplay(o))}else{e.addDisplay(i,null)}}}this._slot=null}}this._skin=null}return e}_parseDisplay(t){const e=w._getString(t,I.DataParser.NAME,"");const s=w._getString(t,I.DataParser.PATH,"");let a=0;let i=null;if(I.DataParser.TYPE in t&&typeof t[I.DataParser.TYPE]==="string"){a=I.DataParser._getDisplayType(t[I.DataParser.TYPE])}else{a=w._getNumber(t,I.DataParser.TYPE,a)}switch(a){case 0:const r=i=I.BaseObject.borrowObject(I.ImageDisplayData);r.name=e;r.path=s.length>0?s:e;this._parsePivot(t,r);break;case 1:const n=i=I.BaseObject.borrowObject(I.ArmatureDisplayData);n.name=e;n.path=s.length>0?s:e;n.inheritAnimation=true;if(I.DataParser.ACTIONS in t){const f=this._parseActionData(t[I.DataParser.ACTIONS],0,null,null);for(const c of f){n.addAction(c)}}else if(this._slot.name in this._slotChildActions){const u=this._skin.getDisplays(this._slot.name);if(u===null?this._slot.displayIndex===0:this._slot.displayIndex===u.length){for(const c of this._slotChildActions[this._slot.name]){n.addAction(c)}delete this._slotChildActions[this._slot.name]}}break;case 2:const o=i=I.BaseObject.borrowObject(I.MeshDisplayData);o.vertices.inheritDeform=w._getBoolean(t,I.DataParser.INHERIT_DEFORM,true);o.name=e;o.path=s.length>0?s:e;o.vertices.data=this._data;if(I.DataParser.SHARE in t){this._cacheRawMeshes.push(t);this._cacheMeshes.push(o)}else{this._parseMesh(t,o)}if(I.DataParser.GLUE_WEIGHTS in t&&I.DataParser.GLUE_MESHES in t){this._cacheRawMeshes.push(t);this._cacheMeshes.push(o)}break;case 3:const l=this._parseBoundingBox(t);if(l!==null){const m=i=I.BaseObject.borrowObject(I.BoundingBoxDisplayData);m.name=e;m.path=s.length>0?s:e;m.boundingBox=l}break;case 4:const h=t[I.DataParser.LENGTHS];const _=i=I.BaseObject.borrowObject(I.PathDisplayData);_.closed=w._getBoolean(t,I.DataParser.CLOSED,false);_.constantSpeed=w._getBoolean(t,I.DataParser.CONSTANT_SPEED,false);_.name=e;_.path=s.length>0?s:e;_.vertices.data=this._data;_.curveLengths.length=h.length;for(let t=0,e=h.length;t<e;++t){_.curveLengths[t]=h[t]}this._parsePath(t,_);break}if(i!==null&&I.DataParser.TRANSFORM in t){this._parseTransform(t[I.DataParser.TRANSFORM],i.transform,this._armature.scale)}return i}_parsePath(t,e){const r=t[I.DataParser.VERTICES];const s=w._getNumber(t,I.DataParser.VERTEX_COUNT,0);const a=this._floatArray.length;const i=this._intArray.length;e.vertices.offset=i;this._intArray.length+=1+1;this._intArray[i+0]=s;this._intArray[i+2]=a;if(!(I.DataParser.WEIGHTS in t)){this._floatArray.length+=r.length;for(let t=0,e=r.length;t<e;++t){this._floatArray[a+t]=r[t]}}else{const n=t[I.DataParser.WEIGHTS];const o=t[I.DataParser.BONES];const l=o.length;const h=Math.floor(n.length-s)/2;const _=this._intArray.length;const f=this._floatArray.length;const c=this._armature.sortedBones;const u=I.BaseObject.borrowObject(I.WeightData);u.count=h;u.offset=_;this._intArray.length+=1+1+l+s+h;this._intArray[_+0]=l;this._intArray[_+1]=f;for(let t=0;t<l;t++){const m=o[t];const d=this._rawBones[m];u.addBone(d);this._intArray[_+2+t]=c.indexOf(d)}this._floatArray.length+=h*3;for(let t=0,e=0,s=0,a=_+2+l,i=f;t<h;t++){const p=n[e++];this._intArray[a++]=p;for(let t=0;t<p;t++){const g=n[e++];const y=n[e++];const D=r[s++];const T=r[s++];this._intArray[a++]=o.indexOf(g);this._floatArray[i++]=y;this._floatArray[i++]=D;this._floatArray[i++]=T}}e.vertices.weight=u}}_parsePivot(t,e){if(I.DataParser.PIVOT in t){const s=t[I.DataParser.PIVOT];e.pivot.x=w._getNumber(s,I.DataParser.X,0);e.pivot.y=w._getNumber(s,I.DataParser.Y,0)}else{e.pivot.x=.5;e.pivot.y=.5}}_parseMesh(t,e){const s=t[I.DataParser.VERTICES];const a=t[I.DataParser.UVS];const i=t[I.DataParser.TRIANGLES];const n=Math.floor(s.length/2);const r=Math.floor(i.length/3);const o=this._floatArray.length;const l=o+n*2;const h=this._intArray.length;const _=this._skin.name+"_"+this._slot.name+"_"+e.name;e.vertices.offset=h;this._intArray.length+=1+1+1+1+r*3;this._intArray[h+0]=n;this._intArray[h+1]=r;this._intArray[h+2]=o;for(let t=0,e=r*3;t<e;++t){this._intArray[h+4+t]=i[t]}this._floatArray.length+=n*2+n*2;for(let t=0,e=n*2;t<e;++t){this._floatArray[o+t]=s[t];this._floatArray[l+t]=a[t]}if(I.DataParser.WEIGHTS in t){const f=t[I.DataParser.WEIGHTS];const c=t[I.DataParser.SLOT_POSE];const u=t[I.DataParser.BONE_POSE];const m=this._armature.sortedBones;const d=new Array;const p=Math.floor(u.length/7);const g=this._floatArray.length;const y=Math.floor(f.length-n)/2;const D=this._intArray.length;const T=I.BaseObject.borrowObject(I.WeightData);T.count=y;T.offset=D;d.length=p;this._intArray.length+=1+1+p+n+y;this._intArray[D+1]=g;for(let t=0;t<p;++t){const b=u[t*7];const A=this._rawBones[b];T.addBone(A);d[t]=b;this._intArray[D+2+t]=m.indexOf(A)}this._floatArray.length+=y*3;this._helpMatrixA.copyFromArray(c,0);for(let t=0,a=0,i=D+2+p,r=g;t<n;++t){const S=t*2;const P=this._intArray[i++]=f[a++];let e=this._floatArray[o+S];let s=this._floatArray[o+S+1];this._helpMatrixA.transformPoint(e,s,this._helpPoint);e=this._helpPoint.x;s=this._helpPoint.y;for(let t=0;t<P;++t){const b=f[a++];const x=d.indexOf(b);this._helpMatrixB.copyFromArray(u,x*7+1);this._helpMatrixB.invert();this._helpMatrixB.transformPoint(e,s,this._helpPoint);this._intArray[i++]=x;this._floatArray[r++]=f[a++];this._floatArray[r++]=this._helpPoint.x;this._floatArray[r++]=this._helpPoint.y}}e.vertices.weight=T;this._weightSlotPose[_]=c;this._weightBonePoses[_]=u}}_parseMeshGlue(t,e){t;e}_parseBoundingBox(t){let e=null;let s=0;if(I.DataParser.SUB_TYPE in t&&typeof t[I.DataParser.SUB_TYPE]==="string"){s=I.DataParser._getBoundingBoxType(t[I.DataParser.SUB_TYPE])}else{s=w._getNumber(t,I.DataParser.SUB_TYPE,s)}switch(s){case 0:e=I.BaseObject.borrowObject(I.RectangleBoundingBoxData);break;case 1:e=I.BaseObject.borrowObject(I.EllipseBoundingBoxData);break;case 2:e=this._parsePolygonBoundingBox(t);break}if(e!==null){e.color=w._getNumber(t,I.DataParser.COLOR,0);if(e.type===0||e.type===1){e.width=w._getNumber(t,I.DataParser.WIDTH,0);e.height=w._getNumber(t,I.DataParser.HEIGHT,0)}}return e}_parsePolygonBoundingBox(t){const s=I.BaseObject.borrowObject(I.PolygonBoundingBoxData);if(I.DataParser.VERTICES in t){const a=this._armature.scale;const i=t[I.DataParser.VERTICES];const r=s.vertices;if(I.DragonBones.webAssembly){r.resize(i.length,0)}else{r.length=i.length}for(let t=0,e=i.length;t<e;t+=2){const n=i[t]*a;const o=i[t+1]*a;if(I.DragonBones.webAssembly){r.set(t,n);r.set(t+1,o)}else{r[t]=n;r[t+1]=o}if(t===0){s.x=n;s.y=o;s.width=n;s.height=o}else{if(n<s.x){s.x=n}else if(n>s.width){s.width=n}if(o<s.y){s.y=o}else if(o>s.height){s.height=o}}}s.width-=s.x;s.height-=s.y}else{console.warn("Data error.\n Please reexport DragonBones Data to fixed the bug.")}return s}_parseAnimation(t){const e=I.BaseObject.borrowObject(I.AnimationData);e.frameCount=Math.max(w._getNumber(t,I.DataParser.DURATION,1),1);e.playTimes=w._getNumber(t,I.DataParser.PLAY_TIMES,1);e.duration=e.frameCount/this._armature.frameRate;e.fadeInTime=w._getNumber(t,I.DataParser.FADE_IN_TIME,0);e.scale=w._getNumber(t,I.DataParser.SCALE,1);e.name=w._getString(t,I.DataParser.NAME,I.DataParser.DEFAULT_NAME);if(e.name.length===0){e.name=I.DataParser.DEFAULT_NAME}e.frameIntOffset=this._frameIntArray.length;e.frameFloatOffset=this._frameFloatArray.length;e.frameOffset=this._frameArray.length;this._animation=e;if(I.DataParser.FRAME in t){const s=t[I.DataParser.FRAME];const a=s.length;if(a>0){for(let t=0,e=0;t<a;++t){const i=s[t];this._parseActionDataInFrame(i,e,null,null);e+=w._getNumber(i,I.DataParser.DURATION,1)}}}if(I.DataParser.Z_ORDER in t){this._animation.zOrderTimeline=this._parseTimeline(t[I.DataParser.Z_ORDER],null,I.DataParser.FRAME,1,false,false,0,this._parseZOrderFrame)}if(I.DataParser.BONE in t){const r=t[I.DataParser.BONE];for(const n of r){this._parseBoneTimeline(n)}}if(I.DataParser.SURFACE in t){const r=t[I.DataParser.SURFACE];for(const n of r){const o=w._getString(n,I.DataParser.NAME,"");this._surface=this._armature.getBone(o);if(this._surface===null){continue}const l=this._parseTimeline(n,null,I.DataParser.FRAME,50,false,true,0,this._parseSurfaceFrame);if(l!==null){this._animation.addSurfaceTimeline(this._surface,l)}this._surface=null}}if(I.DataParser.SLOT in t){const r=t[I.DataParser.SLOT];for(const n of r){this._parseSlotTimeline(n)}}if(I.DataParser.FFD in t){const r=t[I.DataParser.FFD];for(const n of r){let t=w._getString(n,I.DataParser.SKIN,I.DataParser.DEFAULT_NAME);const h=w._getString(n,I.DataParser.SLOT,"");const _=w._getString(n,I.DataParser.NAME,"");if(t.length===0){t=I.DataParser.DEFAULT_NAME}this._slot=this._armature.getSlot(h);this._mesh=this._armature.getMesh(t,h,_);if(this._slot===null||this._mesh===null){continue}const l=this._parseTimeline(n,null,I.DataParser.FRAME,22,false,true,0,this._parseSlotFFDFrame);if(l!==null){this._animation.addSlotTimeline(this._slot,l)}this._slot=null;this._mesh=null}}if(I.DataParser.IK in t){const r=t[I.DataParser.IK];for(const n of r){const f=w._getString(n,I.DataParser.NAME,"");const c=this._armature.getConstraint(f);if(c===null){continue}const l=this._parseTimeline(n,null,I.DataParser.FRAME,30,true,false,2,this._parseIKConstraintFrame);if(l!==null){this._animation.addConstraintTimeline(c,l)}}}if(I.DataParser.ANIMATION in t){const r=t[I.DataParser.ANIMATION];for(const n of r){const u=w._getString(n,I.DataParser.NAME,"");const l=this._parseTimeline(n,null,I.DataParser.FRAME,40,true,false,2,this._parseAnimationFrame);if(l!==null){this._animation.addAnimationTimeline(u,l)}}}if(this._actionFrames.length>0){this._animation.actionTimeline=this._parseTimeline(null,this._actionFrames,"",0,false,false,0,this._parseActionFrame);this._actionFrames.length=0}this._animation=null;return e}_parseTimeline(t,r,e,s,a,i,n,o){if(t!==null&&e.length>0&&e in t){r=t[e]}if(r===null){return null}const l=r.length;if(l===0){return null}const h=this._frameIntArray.length;const _=this._frameFloatArray.length;const f=I.BaseObject.borrowObject(I.TimelineData);const c=this._timelineArray.length;this._timelineArray.length+=1+1+1+1+1+l;if(t!==null){this._timelineArray[c+0]=Math.round(w._getNumber(t,I.DataParser.SCALE,1)*100);this._timelineArray[c+1]=Math.round(w._getNumber(t,I.DataParser.OFFSET,0)*100)}else{this._timelineArray[c+0]=100;this._timelineArray[c+1]=0}this._timelineArray[c+2]=l;this._timelineArray[c+3]=n;if(a){this._timelineArray[c+4]=h-this._animation.frameIntOffset}else if(i){this._timelineArray[c+4]=_-this._animation.frameFloatOffset}else{this._timelineArray[c+4]=0}this._timeline=f;f.type=s;f.offset=c;if(l===1){f.frameIndicesOffset=-1;this._timelineArray[c+5+0]=o.call(this,r[0],0,0)-this._animation.frameOffset}else{const u=this._animation.frameCount+1;const m=this._data.frameIndices;let i=0;if(I.DragonBones.webAssembly){i=m.size();m.resize(i+u,0)}else{i=m.length;m.length+=u}f.frameIndicesOffset=i;for(let t=0,e=0,s=0,a=0;t<u;++t){if(s+a<=t&&e<l){const d=r[e];s=t;if(e===l-1){a=this._animation.frameCount-s}else{if(d instanceof p){a=this._actionFrames[e+1].frameStart-s}else{a=w._getNumber(d,I.DataParser.DURATION,1)}}this._timelineArray[c+5+e]=o.call(this,d,s,a)-this._animation.frameOffset;e++}if(I.DragonBones.webAssembly){m.set(i+t,e-1)}else{m[i+t]=e-1}}}this._timeline=null;return f}_parseBoneTimeline(t){const e=this._armature.getBone(w._getString(t,I.DataParser.NAME,""));if(e===null){return}this._bone=e;this._slot=this._armature.getSlot(this._bone.name);if(I.DataParser.TRANSLATE_FRAME in t){const s=this._parseTimeline(t,null,I.DataParser.TRANSLATE_FRAME,11,false,true,2,this._parseBoneTranslateFrame);if(s!==null){this._animation.addBoneTimeline(e,s)}}if(I.DataParser.ROTATE_FRAME in t){const s=this._parseTimeline(t,null,I.DataParser.ROTATE_FRAME,12,false,true,2,this._parseBoneRotateFrame);if(s!==null){this._animation.addBoneTimeline(e,s)}}if(I.DataParser.SCALE_FRAME in t){const s=this._parseTimeline(t,null,I.DataParser.SCALE_FRAME,13,false,true,2,this._parseBoneScaleFrame);if(s!==null){this._animation.addBoneTimeline(e,s)}}if(I.DataParser.FRAME in t){const s=this._parseTimeline(t,null,I.DataParser.FRAME,10,false,true,6,this._parseBoneAllFrame);if(s!==null){this._animation.addBoneTimeline(e,s)}}this._bone=null;this._slot=null}_parseSlotTimeline(t){const e=this._armature.getSlot(w._getString(t,I.DataParser.NAME,""));if(e===null){return}this._slot=e;let s=null;if(I.DataParser.DISPLAY_FRAME in t){s=this._parseTimeline(t,null,I.DataParser.DISPLAY_FRAME,20,false,false,0,this._parseSlotDisplayFrame)}else{s=this._parseTimeline(t,null,I.DataParser.FRAME,20,false,false,0,this._parseSlotDisplayFrame)}if(s!==null){this._animation.addSlotTimeline(e,s)}let a=null;if(I.DataParser.COLOR_FRAME in t){a=this._parseTimeline(t,null,I.DataParser.COLOR_FRAME,21,true,false,1,this._parseSlotColorFrame)}else{a=this._parseTimeline(t,null,I.DataParser.FRAME,21,true,false,1,this._parseSlotColorFrame)}if(a!==null){this._animation.addSlotTimeline(e,a)}this._slot=null}_parseFrame(t,e,s){t;s;const a=this._frameArray.length;this._frameArray.length+=1;this._frameArray[a+0]=e;return a}_parseTweenFrame(e,t,s){const a=this._parseFrame(e,t,s);if(s>0){if(I.DataParser.CURVE in e){const i=s+1;this._helpArray.length=i;this._samplingEasingCurve(e[I.DataParser.CURVE],this._helpArray);this._frameArray.length+=1+1+this._helpArray.length;this._frameArray[a+1]=2;this._frameArray[a+2]=i;for(let t=0;t<i;++t){this._frameArray[a+3+t]=Math.round(this._helpArray[t]*1e4)}}else{const r=-2;let t=r;if(I.DataParser.TWEEN_EASING in e){t=w._getNumber(e,I.DataParser.TWEEN_EASING,r)}if(t===r){this._frameArray.length+=1;this._frameArray[a+1]=0}else if(t===0){this._frameArray.length+=1;this._frameArray[a+1]=1}else if(t<0){this._frameArray.length+=1+1;this._frameArray[a+1]=3;this._frameArray[a+2]=Math.round(-t*100)}else if(t<=1){this._frameArray.length+=1+1;this._frameArray[a+1]=4;this._frameArray[a+2]=Math.round(t*100)}else{this._frameArray.length+=1+1;this._frameArray[a+1]=5;this._frameArray[a+2]=Math.round(t*100-100)}}}else{this._frameArray.length+=1;this._frameArray[a+1]=0}return a}_parseActionFrame(e,t,s){s;const a=this._frameArray.length;const i=e.actions.length;this._frameArray.length+=1+1+i;this._frameArray[a+0]=t;this._frameArray[a+0+1]=i;for(let t=0;t<i;++t){this._frameArray[a+0+2+t]=e.actions[t]}return a}_parseZOrderFrame(t,e,s){const i=this._parseFrame(t,e,s);if(I.DataParser.Z_ORDER in t){const r=t[I.DataParser.Z_ORDER];if(r.length>0){const n=this._armature.sortedSlots.length;const o=new Array(n-r.length/2);const l=new Array(n);for(let t=0;t<o.length;++t){o[t]=0}for(let t=0;t<n;++t){l[t]=-1}let s=0;let a=0;for(let t=0,e=r.length;t<e;t+=2){const h=r[t];const _=r[t+1];while(s!==h){o[a++]=s++}const f=s+_;l[f]=s++}while(s<n){o[a++]=s++}this._frameArray.length+=1+n;this._frameArray[i+1]=n;let t=n;while(t--){if(l[t]===-1){this._frameArray[i+2+t]=o[--a]||0}else{this._frameArray[i+2+t]=l[t]||0}}return i}}this._frameArray.length+=1;this._frameArray[i+1]=0;return i}_parseBoneAllFrame(t,e,s){this._helpTransform.identity();if(I.DataParser.TRANSFORM in t){this._parseTransform(t[I.DataParser.TRANSFORM],this._helpTransform,1)}let a=this._helpTransform.rotation;if(e!==0){if(this._prevClockwise===0){a=this._prevRotation+I.Transform.normalizeRadian(a-this._prevRotation)}else{if(this._prevClockwise>0?a>=this._prevRotation:a<=this._prevRotation){this._prevClockwise=this._prevClockwise>0?this._prevClockwise-1:this._prevClockwise+1}a=this._prevRotation+a-this._prevRotation+I.Transform.PI_D*this._prevClockwise}}this._prevClockwise=w._getNumber(t,I.DataParser.TWEEN_ROTATE,0);this._prevRotation=a;const i=this._parseTweenFrame(t,e,s);let r=this._frameFloatArray.length;this._frameFloatArray.length+=6;this._frameFloatArray[r++]=this._helpTransform.x;this._frameFloatArray[r++]=this._helpTransform.y;this._frameFloatArray[r++]=a;this._frameFloatArray[r++]=this._helpTransform.skew;this._frameFloatArray[r++]=this._helpTransform.scaleX;this._frameFloatArray[r++]=this._helpTransform.scaleY;this._parseActionDataInFrame(t,e,this._bone,this._slot);return i}_parseBoneTranslateFrame(t,e,s){const a=this._parseTweenFrame(t,e,s);let i=this._frameFloatArray.length;this._frameFloatArray.length+=2;this._frameFloatArray[i++]=w._getNumber(t,I.DataParser.X,0);this._frameFloatArray[i++]=w._getNumber(t,I.DataParser.Y,0);return a}_parseBoneRotateFrame(t,e,s){let a=w._getNumber(t,I.DataParser.ROTATE,0)*I.Transform.DEG_RAD;if(e!==0){if(this._prevClockwise===0){a=this._prevRotation+I.Transform.normalizeRadian(a-this._prevRotation)}else{if(this._prevClockwise>0?a>=this._prevRotation:a<=this._prevRotation){this._prevClockwise=this._prevClockwise>0?this._prevClockwise-1:this._prevClockwise+1}a=this._prevRotation+a-this._prevRotation+I.Transform.PI_D*this._prevClockwise}}this._prevClockwise=w._getNumber(t,I.DataParser.CLOCK_WISE,0);this._prevRotation=a;const i=this._parseTweenFrame(t,e,s);let r=this._frameFloatArray.length;this._frameFloatArray.length+=2;this._frameFloatArray[r++]=a;this._frameFloatArray[r++]=w._getNumber(t,I.DataParser.SKEW,0)*I.Transform.DEG_RAD;return i}_parseBoneScaleFrame(t,e,s){const a=this._parseTweenFrame(t,e,s);let i=this._frameFloatArray.length;this._frameFloatArray.length+=2;this._frameFloatArray[i++]=w._getNumber(t,I.DataParser.X,1);this._frameFloatArray[i++]=w._getNumber(t,I.DataParser.Y,1);return a}_parseSurfaceFrame(t,e,s){const a=this._frameFloatArray.length;const i=this._parseTweenFrame(t,e,s);const r=t[I.DataParser.VERTICES];const n=w._getNumber(t,I.DataParser.OFFSET,0);const o=this._surface.vertices.length/2;let l=0;let h=0;this._frameFloatArray.length+=o*2;for(let t=0;t<o*2;t+=2){if(t<n||t-n>=r.length){l=0}else{l=r[t-n]}if(t+1<n||t+1-n>=r.length){h=0}else{h=r[t+1-n]}this._frameFloatArray[a+t]=l;this._frameFloatArray[a+t+1]=h}if(e===0){const _=this._frameIntArray.length;this._frameIntArray.length+=1+1+1+1+1;this._frameIntArray[_+0]=0;this._frameIntArray[_+1]=this._frameFloatArray.length-a;this._frameIntArray[_+2]=this._frameFloatArray.length-a;this._frameIntArray[_+3]=0;this._frameIntArray[_+4]=a-this._animation.frameFloatOffset;this._timelineArray[this._timeline.offset+3]=_-this._animation.frameIntOffset}return i}_parseSlotDisplayFrame(t,e,s){const a=this._parseFrame(t,e,s);this._frameArray.length+=1;if(I.DataParser.VALUE in t){this._frameArray[a+1]=w._getNumber(t,I.DataParser.VALUE,0)}else{this._frameArray[a+1]=w._getNumber(t,I.DataParser.DISPLAY_INDEX,0)}this._parseActionDataInFrame(t,e,this._slot.parent,this._slot);return a}_parseSlotColorFrame(t,e,s){const a=this._parseTweenFrame(t,e,s);let i=-1;if(I.DataParser.VALUE in t||I.DataParser.COLOR in t){const n=I.DataParser.VALUE in t?t[I.DataParser.VALUE]:t[I.DataParser.COLOR];for(let t in n){t;this._parseColorTransform(n,this._helpColorTransform);i=this._intArray.length;this._intArray.length+=8;this._intArray[i++]=Math.round(this._helpColorTransform.alphaMultiplier*100);this._intArray[i++]=Math.round(this._helpColorTransform.redMultiplier*100);this._intArray[i++]=Math.round(this._helpColorTransform.greenMultiplier*100);this._intArray[i++]=Math.round(this._helpColorTransform.blueMultiplier*100);this._intArray[i++]=Math.round(this._helpColorTransform.alphaOffset);this._intArray[i++]=Math.round(this._helpColorTransform.redOffset);this._intArray[i++]=Math.round(this._helpColorTransform.greenOffset);this._intArray[i++]=Math.round(this._helpColorTransform.blueOffset);i-=8;break}}if(i<0){if(this._defaultColorOffset<0){this._defaultColorOffset=i=this._intArray.length;this._intArray.length+=8;this._intArray[i++]=100;this._intArray[i++]=100;this._intArray[i++]=100;this._intArray[i++]=100;this._intArray[i++]=0;this._intArray[i++]=0;this._intArray[i++]=0;this._intArray[i++]=0}i=this._defaultColorOffset}const r=this._frameIntArray.length;this._frameIntArray.length+=1;this._frameIntArray[r]=i;return a}_parseSlotFFDFrame(t,e,s){const a=this._frameFloatArray.length;const i=this._parseTweenFrame(t,e,s);const r=I.DataParser.VERTICES in t?t[I.DataParser.VERTICES]:null;const n=w._getNumber(t,I.DataParser.OFFSET,0);const o=this._intArray[this._mesh.vertices.offset+0];const l=this._mesh.parent.name+"_"+this._slot.name+"_"+this._mesh.name;const h=this._mesh.vertices.weight;let _=0;let f=0;let c=0;let u=0;if(h!==null){const m=this._weightSlotPose[l];this._helpMatrixA.copyFromArray(m,0);this._frameFloatArray.length+=h.count*2;c=h.offset+2+h.bones.length}else{this._frameFloatArray.length+=o*2}for(let t=0;t<o*2;t+=2){if(r===null){_=0;f=0}else{if(t<n||t-n>=r.length){_=0}else{_=r[t-n]}if(t+1<n||t+1-n>=r.length){f=0}else{f=r[t+1-n]}}if(h!==null){const d=this._weightBonePoses[l];const p=this._intArray[c++];this._helpMatrixA.transformPoint(_,f,this._helpPoint,true);_=this._helpPoint.x;f=this._helpPoint.y;for(let t=0;t<p;++t){const g=this._intArray[c++];this._helpMatrixB.copyFromArray(d,g*7+1);this._helpMatrixB.invert();this._helpMatrixB.transformPoint(_,f,this._helpPoint,true);this._frameFloatArray[a+u++]=this._helpPoint.x;this._frameFloatArray[a+u++]=this._helpPoint.y}}else{this._frameFloatArray[a+t]=_;this._frameFloatArray[a+t+1]=f}}if(e===0){const y=this._frameIntArray.length;this._frameIntArray.length+=1+1+1+1+1;this._frameIntArray[y+0]=this._mesh.vertices.offset;this._frameIntArray[y+1]=this._frameFloatArray.length-a;this._frameIntArray[y+2]=this._frameFloatArray.length-a;this._frameIntArray[y+3]=0;this._frameIntArray[y+4]=a-this._animation.frameFloatOffset;this._timelineArray[this._timeline.offset+3]=y-this._animation.frameIntOffset}return i}_parseIKConstraintFrame(t,e,s){const a=this._parseTweenFrame(t,e,s);let i=this._frameIntArray.length;this._frameIntArray.length+=2;this._frameIntArray[i++]=w._getBoolean(t,I.DataParser.BEND_POSITIVE,true)?1:0;this._frameIntArray[i++]=Math.round(w._getNumber(t,I.DataParser.WEIGHT,1)*100);return a}_parseAnimationFrame(t,e,s){const a=this._parseTweenFrame(t,e,s);let i=this._frameIntArray.length;this._frameIntArray.length+=2;this._frameIntArray[i++]=w._getNumber(t,I.DataParser.VALUE,0);this._frameIntArray[i++]=Math.round(w._getNumber(t,I.DataParser.WEIGHT,1)*100);return a}_parseActionData(t,e,s,a){const i=new Array;if(typeof t==="string"){const r=I.BaseObject.borrowObject(I.ActionData);r.type=e;r.name=t;r.bone=s;r.slot=a;i.push(r)}else if(t instanceof Array){for(const n of t){const r=I.BaseObject.borrowObject(I.ActionData);if(I.DataParser.GOTO_AND_PLAY in n){r.type=0;r.name=w._getString(n,I.DataParser.GOTO_AND_PLAY,"")}else{if(I.DataParser.TYPE in n&&typeof n[I.DataParser.TYPE]==="string"){r.type=I.DataParser._getActionType(n[I.DataParser.TYPE])}else{r.type=w._getNumber(n,I.DataParser.TYPE,e)}r.name=w._getString(n,I.DataParser.NAME,"")}if(I.DataParser.BONE in n){const o=w._getString(n,I.DataParser.BONE,"");r.bone=this._armature.getBone(o)}else{r.bone=s}if(I.DataParser.SLOT in n){const l=w._getString(n,I.DataParser.SLOT,"");r.slot=this._armature.getSlot(l)}else{r.slot=a}let t=null;if(I.DataParser.INTS in n){if(t===null){t=I.BaseObject.borrowObject(I.UserData)}const h=n[I.DataParser.INTS];for(const _ of h){t.addInt(_)}}if(I.DataParser.FLOATS in n){if(t===null){t=I.BaseObject.borrowObject(I.UserData)}const f=n[I.DataParser.FLOATS];for(const _ of f){t.addFloat(_)}}if(I.DataParser.STRINGS in n){if(t===null){t=I.BaseObject.borrowObject(I.UserData)}const c=n[I.DataParser.STRINGS];for(const _ of c){t.addString(_)}}r.data=t;i.push(r)}}return i}_parseTransform(t,e,s){e.x=w._getNumber(t,I.DataParser.X,0)*s;e.y=w._getNumber(t,I.DataParser.Y,0)*s;if(I.DataParser.ROTATE in t||I.DataParser.SKEW in t){e.rotation=I.Transform.normalizeRadian(w._getNumber(t,I.DataParser.ROTATE,0)*I.Transform.DEG_RAD);e.skew=I.Transform.normalizeRadian(w._getNumber(t,I.DataParser.SKEW,0)*I.Transform.DEG_RAD)}else if(I.DataParser.SKEW_X in t||I.DataParser.SKEW_Y in t){e.rotation=I.Transform.normalizeRadian(w._getNumber(t,I.DataParser.SKEW_Y,0)*I.Transform.DEG_RAD);e.skew=I.Transform.normalizeRadian(w._getNumber(t,I.DataParser.SKEW_X,0)*I.Transform.DEG_RAD)-e.rotation}e.scaleX=w._getNumber(t,I.DataParser.SCALE_X,1);e.scaleY=w._getNumber(t,I.DataParser.SCALE_Y,1)}_parseColorTransform(t,e){e.alphaMultiplier=w._getNumber(t,I.DataParser.ALPHA_MULTIPLIER,100)*.01;e.redMultiplier=w._getNumber(t,I.DataParser.RED_MULTIPLIER,100)*.01;e.greenMultiplier=w._getNumber(t,I.DataParser.GREEN_MULTIPLIER,100)*.01;e.blueMultiplier=w._getNumber(t,I.DataParser.BLUE_MULTIPLIER,100)*.01;e.alphaOffset=w._getNumber(t,I.DataParser.ALPHA_OFFSET,0);e.redOffset=w._getNumber(t,I.DataParser.RED_OFFSET,0);e.greenOffset=w._getNumber(t,I.DataParser.GREEN_OFFSET,0);e.blueOffset=w._getNumber(t,I.DataParser.BLUE_OFFSET,0)}_parseArray(t){t;this._intArray.length=0;this._floatArray.length=0;this._frameIntArray.length=0;this._frameFloatArray.length=0;this._frameArray.length=0;this._timelineArray.length=0}_modifyArray(){if(this._intArray.length%Int16Array.BYTES_PER_ELEMENT!==0){this._intArray.push(0)}if(this._frameIntArray.length%Int16Array.BYTES_PER_ELEMENT!==0){this._frameIntArray.push(0)}if(this._frameArray.length%Int16Array.BYTES_PER_ELEMENT!==0){this._frameArray.push(0)}if(this._timelineArray.length%Uint16Array.BYTES_PER_ELEMENT!==0){this._timelineArray.push(0)}const t=this._intArray.length*Int16Array.BYTES_PER_ELEMENT;const e=this._floatArray.length*Float32Array.BYTES_PER_ELEMENT;const s=this._frameIntArray.length*Int16Array.BYTES_PER_ELEMENT;const a=this._frameFloatArray.length*Float32Array.BYTES_PER_ELEMENT;const i=this._frameArray.length*Int16Array.BYTES_PER_ELEMENT;const r=this._timelineArray.length*Uint16Array.BYTES_PER_ELEMENT;const n=t+e+s+a+i+r;if(I.DragonBones.webAssembly){const o=I.webAssemblyModule.HEAP16.buffer;const l=I.webAssemblyModule._malloc(n);const h=new Int16Array(o,l,this._intArray.length);const _=new Float32Array(o,l+t,this._floatArray.length);const f=new Int16Array(o,l+t+e,this._frameIntArray.length);const c=new Float32Array(o,l+t+e+s,this._frameFloatArray.length);const u=new Int16Array(o,l+t+e+s+a,this._frameArray.length);const m=new Uint16Array(o,l+t+e+s+a+i,this._timelineArray.length);for(let t=0,e=this._intArray.length;t<e;++t){h[t]=this._intArray[t]}for(let t=0,e=this._floatArray.length;t<e;++t){_[t]=this._floatArray[t]}for(let t=0,e=this._frameIntArray.length;t<e;++t){f[t]=this._frameIntArray[t]}for(let t=0,e=this._frameFloatArray.length;t<e;++t){c[t]=this._frameFloatArray[t]}for(let t=0,e=this._frameArray.length;t<e;++t){u[t]=this._frameArray[t]}for(let t=0,e=this._timelineArray.length;t<e;++t){m[t]=this._timelineArray[t]}I.webAssemblyModule.setDataBinary(this._data,l,t,e,s,a,i,r)}else{const d=new ArrayBuffer(n);const h=new Int16Array(d,0,this._intArray.length);const _=new Float32Array(d,t,this._floatArray.length);const f=new Int16Array(d,t+e,this._frameIntArray.length);const c=new Float32Array(d,t+e+s,this._frameFloatArray.length);const u=new Int16Array(d,t+e+s+a,this._frameArray.length);const m=new Uint16Array(d,t+e+s+a+i,this._timelineArray.length);for(let t=0,e=this._intArray.length;t<e;++t){h[t]=this._intArray[t]}for(let t=0,e=this._floatArray.length;t<e;++t){_[t]=this._floatArray[t]}for(let t=0,e=this._frameIntArray.length;t<e;++t){f[t]=this._frameIntArray[t]}for(let t=0,e=this._frameFloatArray.length;t<e;++t){c[t]=this._frameFloatArray[t]}for(let t=0,e=this._frameArray.length;t<e;++t){u[t]=this._frameArray[t]}for(let t=0,e=this._timelineArray.length;t<e;++t){m[t]=this._timelineArray[t]}this._data.binary=d;this._data.intArray=h;this._data.floatArray=_;this._data.frameIntArray=f;this._data.frameFloatArray=c;this._data.frameArray=u;this._data.timelineArray=m}this._defaultColorOffset=-1}parseDragonBonesData(t,e=1){console.assert(t!==null&&t!==undefined,"Data error.");const s=w._getString(t,I.DataParser.VERSION,"");const a=w._getString(t,I.DataParser.COMPATIBLE_VERSION,"");if(I.DataParser.DATA_VERSIONS.indexOf(s)>=0||I.DataParser.DATA_VERSIONS.indexOf(a)>=0){const i=I.BaseObject.borrowObject(I.DragonBonesData);i.version=s;i.name=w._getString(t,I.DataParser.NAME,"");i.frameRate=w._getNumber(t,I.DataParser.FRAME_RATE,24);if(i.frameRate===0){i.frameRate=24}if(I.DataParser.ARMATURE in t){this._data=i;this._parseArray(t);const r=t[I.DataParser.ARMATURE];for(const n of r){i.addArmature(this._parseArmature(n,e))}if(!this._data.binary){this._modifyArray()}if(I.DataParser.STAGE in t){i.stage=i.getArmature(w._getString(t,I.DataParser.STAGE,""))}else if(i.armatureNames.length>0){i.stage=i.getArmature(i.armatureNames[0])}this._data=null}if(I.DataParser.TEXTURE_ATLAS in t){this._rawTextureAtlases=t[I.DataParser.TEXTURE_ATLAS]}return i}else{console.assert(false,"Nonsupport data version: "+s+"\n"+"Please convert DragonBones data to support version.\n"+"Read more: https://github.com/DragonBones/Tools/")}return null}parseTextureAtlasData(t,s,e=1){console.assert(t!==undefined);if(t===null){if(this._rawTextureAtlases===null||this._rawTextureAtlases.length===0){return false}const a=this._rawTextureAtlases[this._rawTextureAtlasIndex++];this.parseTextureAtlasData(a,s,e);if(this._rawTextureAtlasIndex>=this._rawTextureAtlases.length){this._rawTextureAtlasIndex=0;this._rawTextureAtlases=null}return true}s.width=w._getNumber(t,I.DataParser.WIDTH,0);s.height=w._getNumber(t,I.DataParser.HEIGHT,0);s.scale=e===1?1/w._getNumber(t,I.DataParser.SCALE,1):e;s.name=w._getString(t,I.DataParser.NAME,"");s.imagePath=w._getString(t,I.DataParser.IMAGE_PATH,"");if(I.DataParser.SUB_TEXTURE in t){const i=t[I.DataParser.SUB_TEXTURE];for(let t=0,e=i.length;t<e;++t){const r=i[t];const n=s.createTexture();n.rotated=w._getBoolean(r,I.DataParser.ROTATED,false);n.name=w._getString(r,I.DataParser.NAME,"");n.region.x=w._getNumber(r,I.DataParser.X,0);n.region.y=w._getNumber(r,I.DataParser.Y,0);n.region.width=w._getNumber(r,I.DataParser.WIDTH,0);n.region.height=w._getNumber(r,I.DataParser.HEIGHT,0);const o=w._getNumber(r,I.DataParser.FRAME_WIDTH,-1);const l=w._getNumber(r,I.DataParser.FRAME_HEIGHT,-1);if(o>0&&l>0){n.frame=I.TextureData.createRectangle();n.frame.x=w._getNumber(r,I.DataParser.FRAME_X,0);n.frame.y=w._getNumber(r,I.DataParser.FRAME_Y,0);n.frame.width=o;n.frame.height=l}s.addTexture(n)}}return true}static getInstance(){if(w._objectDataParserInstance===null){w._objectDataParserInstance=new w}return w._objectDataParserInstance}}w._objectDataParserInstance=null;I.ObjectDataParser=w;class p{constructor(){this.frameStart=0;this.actions=[]}}I.ActionFrame=p})(dragonBones||(dragonBones={}));var dragonBones;(function(y){class t extends y.ObjectDataParser{_inRange(t,e,s){return e<=t&&t<=s}_decodeUTF8(t){const e=-1;const a=-1;const i=65533;let r=0;let n="";let o;let l=0;let h=0;let _=0;let f=0;while(t.length>r){let s=t[r++];if(s===e){if(h!==0){o=i}else{o=a}}else{if(h===0){if(this._inRange(s,0,127)){o=s}else{if(this._inRange(s,194,223)){h=1;f=128;l=s-192}else if(this._inRange(s,224,239)){h=2;f=2048;l=s-224}else if(this._inRange(s,240,244)){h=3;f=65536;l=s-240}else{}l=l*Math.pow(64,h);o=null}}else if(!this._inRange(s,128,191)){l=0;h=0;_=0;f=0;r--;o=s}else{_+=1;l=l+(s-128)*Math.pow(64,h-_);if(_!==h){o=null}else{let t=l;let e=f;l=0;h=0;_=0;f=0;if(this._inRange(t,e,1114111)&&!this._inRange(t,55296,57343)){o=t}else{o=s}}}}if(o!==null&&o!==a){if(o<=65535){if(o>0)n+=String.fromCharCode(o)}else{o-=65536;n+=String.fromCharCode(55296+(o>>10&1023));n+=String.fromCharCode(56320+(o&1023))}}}return n}_getUTF16Key(s){for(let t=0,e=s.length;t<e;++t){if(s.charCodeAt(t)>255){return encodeURI(s)}}return s}_parseBinaryTimeline(t,e,s=null){const r=s!==null?s:y.BaseObject.borrowObject(y.TimelineData);r.type=t;r.offset=e;this._timeline=r;const n=this._timelineArrayBuffer[r.offset+2];if(n===1){r.frameIndicesOffset=-1}else{let i=0;const o=this._animation.frameCount+1;const l=this._data.frameIndices;if(y.DragonBones.webAssembly){i=l.size();l.resize(i+o,0)}else{i=l.length;l.length+=o}r.frameIndicesOffset=i;for(let t=0,e=0,s=0,a=0;t<o;++t){if(s+a<=t&&e<n){s=this._frameArrayBuffer[this._animation.frameOffset+this._timelineArrayBuffer[r.offset+5+e]];if(e===n-1){a=this._animation.frameCount-s}else{a=this._frameArrayBuffer[this._animation.frameOffset+this._timelineArrayBuffer[r.offset+5+e+1]]-s}e++}if(y.DragonBones.webAssembly){l.set(i+t,e-1)}else{l[i+t]=e-1}}}this._timeline=null;return r}_parseVertices(t,e){e.offset=t[y.DataParser.OFFSET];const i=this._intArrayBuffer[e.offset+3];if(i>=0){const r=y.BaseObject.borrowObject(y.WeightData);const n=this._intArrayBuffer[e.offset+0];const o=this._intArrayBuffer[i+0];r.offset=i;for(let t=0;t<o;++t){const l=this._intArrayBuffer[i+2+t];r.addBone(this._rawBones[l])}let s=i+2+o;let a=0;for(let t=0,e=n;t<e;++t){const h=this._intArrayBuffer[s++];a+=h;s+=h}r.count=a;e.weight=r}}_parseMesh(t,e){this._parseVertices(t,e.vertices)}_parsePath(t,e){this._parseVertices(t,e.vertices)}_parseAnimation(t){const e=y.BaseObject.borrowObject(y.AnimationData);e.frameCount=Math.max(y.ObjectDataParser._getNumber(t,y.DataParser.DURATION,1),1);e.playTimes=y.ObjectDataParser._getNumber(t,y.DataParser.PLAY_TIMES,1);e.duration=e.frameCount/this._armature.frameRate;e.fadeInTime=y.ObjectDataParser._getNumber(t,y.DataParser.FADE_IN_TIME,0);e.scale=y.ObjectDataParser._getNumber(t,y.DataParser.SCALE,1);e.name=y.ObjectDataParser._getString(t,y.DataParser.NAME,y.DataParser.DEFAULT_NAME);if(e.name.length===0){e.name=y.DataParser.DEFAULT_NAME}const s=t[y.DataParser.OFFSET];e.frameIntOffset=s[0];e.frameFloatOffset=s[1];e.frameOffset=s[2];this._animation=e;if(y.DataParser.ACTION in t){e.actionTimeline=this._parseBinaryTimeline(0,t[y.DataParser.ACTION])}if(y.DataParser.Z_ORDER in t){e.zOrderTimeline=this._parseBinaryTimeline(1,t[y.DataParser.Z_ORDER])}if(y.DataParser.BONE in t){const a=t[y.DataParser.BONE];for(let t in a){const i=a[t];if(y.DragonBones.webAssembly){t=this._getUTF16Key(t)}const r=this._armature.getBone(t);if(r===null){continue}for(let t=0,e=i.length;t<e;t+=2){const n=i[t];const o=i[t+1];const l=this._parseBinaryTimeline(n,o);this._animation.addBoneTimeline(r,l)}}}if(y.DataParser.SURFACE in t){const a=t[y.DataParser.SURFACE];for(let t in a){const i=a[t];if(y.DragonBones.webAssembly){t=this._getUTF16Key(t)}const h=this._armature.getBone(t);if(h===null){continue}for(let t=0,e=i.length;t<e;t+=2){const n=i[t];const o=i[t+1];const l=this._parseBinaryTimeline(n,o);this._animation.addSurfaceTimeline(h,l)}}}if(y.DataParser.SLOT in t){const a=t[y.DataParser.SLOT];for(let t in a){const i=a[t];if(y.DragonBones.webAssembly){t=this._getUTF16Key(t)}const _=this._armature.getSlot(t);if(_===null){continue}for(let t=0,e=i.length;t<e;t+=2){const n=i[t];const o=i[t+1];const l=this._parseBinaryTimeline(n,o);this._animation.addSlotTimeline(_,l)}}}if(y.DataParser.CONSTRAINT in t){const a=t[y.DataParser.CONSTRAINT];for(let t in a){const i=a[t];if(y.DragonBones.webAssembly){t=this._getUTF16Key(t)}const f=this._armature.getConstraint(t);if(f===null){continue}for(let t=0,e=i.length;t<e;t+=2){const n=i[t];const o=i[t+1];const l=this._parseBinaryTimeline(n,o);this._animation.addConstraintTimeline(f,l)}}}if(y.DataParser.ANIMATION in t){const a=t[y.DataParser.ANIMATION];for(let s in a){const i=a[s];if(y.DragonBones.webAssembly){s=this._getUTF16Key(s)}for(let t=0,e=i.length;t<e;t+=2){const n=i[t];const o=i[t+1];const l=this._parseBinaryTimeline(n,o);this._animation.addAnimationTimeline(s,l)}}}this._animation=null;return e}_parseArray(t){const e=t[y.DataParser.OFFSET];const s=e[1];const a=e[3];const i=e[5];const r=e[7];const n=e[9];const o=e[11];const l=new Int16Array(this._binary,this._binaryOffset+e[0],s/Int16Array.BYTES_PER_ELEMENT);const h=new Float32Array(this._binary,this._binaryOffset+e[2],a/Float32Array.BYTES_PER_ELEMENT);const _=new Int16Array(this._binary,this._binaryOffset+e[4],i/Int16Array.BYTES_PER_ELEMENT);const f=new Float32Array(this._binary,this._binaryOffset+e[6],r/Float32Array.BYTES_PER_ELEMENT);const c=new Int16Array(this._binary,this._binaryOffset+e[8],n/Int16Array.BYTES_PER_ELEMENT);const u=new Uint16Array(this._binary,this._binaryOffset+e[10],o/Uint16Array.BYTES_PER_ELEMENT);if(y.DragonBones.webAssembly){const m=s+a+i+r+n+o;const d=y.webAssemblyModule._malloc(m);const p=new Uint8Array(this._binary,this._binaryOffset,m/Uint8Array.BYTES_PER_ELEMENT);const g=new Uint8Array(y.webAssemblyModule.HEAP16.buffer,d,p.length);for(let t=0,e=p.length;t<e;++t){g[t]=p[t]}y.webAssemblyModule.setDataBinary(this._data,d,s,a,i,r,n,o);this._intArrayBuffer=l;this._floatArrayBuffer=h;this._frameIntArrayBuffer=_;this._frameFloatArrayBuffer=f;this._frameArrayBuffer=c;this._timelineArrayBuffer=u}else{this._data.binary=this._binary;this._data.intArray=this._intArrayBuffer=l;this._data.floatArray=this._floatArrayBuffer=h;this._data.frameIntArray=this._frameIntArrayBuffer=_;this._data.frameFloatArray=this._frameFloatArrayBuffer=f;this._data.frameArray=this._frameArrayBuffer=c;this._data.timelineArray=this._timelineArrayBuffer=u}}parseDragonBonesData(t,e=1){console.assert(t!==null&&t!==undefined&&t instanceof ArrayBuffer,"Data error.");const s=new Uint8Array(t,0,8);if(s[0]!=="D".charCodeAt(0)||s[1]!=="B".charCodeAt(0)||s[2]!=="D".charCodeAt(0)||s[3]!=="T".charCodeAt(0)){console.assert(false,"Nonsupport data.");return null}const a=new Uint32Array(t,8,1)[0];const i=new Uint8Array(t,8+4,a);const r=this._decodeUTF8(i);const n=JSON.parse(r);this._binaryOffset=8+4+a;this._binary=t;return super.parseDragonBonesData(n,e)}static getInstance(){if(t._binaryDataParserInstance===null){t._binaryDataParserInstance=new t}return t._binaryDataParserInstance}}t._binaryDataParserInstance=null;y.BinaryDataParser=t})(dragonBones||(dragonBones={}));var dragonBones;(function(u){class n{constructor(t=null){this.autoSearch=false;this._dragonBonesDataMap={};this._textureAtlasDataMap={};this._dragonBones=null;this._dataParser=null;if(n._objectParser===null){n._objectParser=new u.ObjectDataParser}if(n._binaryParser===null){n._binaryParser=new u.BinaryDataParser}this._dataParser=t!==null?t:n._objectParser}_isSupportMesh(){return true}_getTextureData(t,e){if(t in this._textureAtlasDataMap){for(const s of this._textureAtlasDataMap[t]){const a=s.getTexture(e);if(a!==null){return a}}}if(this.autoSearch){for(let t in this._textureAtlasDataMap){for(const s of this._textureAtlasDataMap[t]){if(s.autoSearch){const a=s.getTexture(e);if(a!==null){return a}}}}}return null}_fillBuildArmaturePackage(e,s,a,i,t){let r=null;let n=null;if(s.length>0){if(s in this._dragonBonesDataMap){r=this._dragonBonesDataMap[s];n=r.getArmature(a)}}if(n===null&&(s.length===0||this.autoSearch)){for(let t in this._dragonBonesDataMap){r=this._dragonBonesDataMap[t];if(s.length===0||r.autoSearch){n=r.getArmature(a);if(n!==null){s=t;break}}}}if(n!==null){e.dataName=s;e.textureAtlasName=t;e.data=r;e.armature=n;e.skin=null;if(i.length>0){e.skin=n.getSkin(i);if(e.skin===null&&this.autoSearch){for(let t in this._dragonBonesDataMap){const o=this._dragonBonesDataMap[t];const l=o.getArmature(i);if(l!==null){e.skin=l.defaultSkin;break}}}}if(e.skin===null){e.skin=n.defaultSkin}return true}return false}_buildBones(t,e){for(const s of t.armature.sortedBones){const a=u.BaseObject.borrowObject(s.type===0?u.Bone:u.Surface);a.init(s,e)}}_buildSlots(s,t){const e=s.skin;const a=s.armature.defaultSkin;if(e===null||a===null){return}const i={};for(let t in a.displays){const r=a.getDisplays(t);i[t]=r}if(e!==a){for(let t in e.displays){const r=e.getDisplays(t);i[t]=r}}for(const n of s.armature.sortedSlots){const o=n.name in i?i[n.name]:null;const l=this._buildSlot(s,n,t);l.rawDisplayDatas=o;if(o!==null){const h=new Array;for(let t=0,e=u.DragonBones.webAssembly?o.size():o.length;t<e;++t){const _=u.DragonBones.webAssembly?o.get(t):o[t];if(_!==null){h.push(this._getSlotDisplay(s,_,null,l))}else{h.push(null)}}l._setDisplayList(h)}l._setDisplayIndex(n.displayIndex,true)}}_buildConstraints(t,e){const s=t.armature.constraints;for(let t in s){const a=s[t];switch(a.type){case 0:const i=u.BaseObject.borrowObject(u.IKConstraint);i.init(a,e);e._addConstraint(i);break;case 1:const r=u.BaseObject.borrowObject(u.PathConstraint);r.init(a,e);e._addConstraint(r);break;default:const n=u.BaseObject.borrowObject(u.IKConstraint);n.init(a,e);e._addConstraint(n);break}}}_buildChildArmature(t,e,s){e;return this.buildArmature(s.path,t!==null?t.dataName:"","",t!==null?t.textureAtlasName:"")}_getSlotDisplay(t,e,s,a){const i=t!==null?t.dataName:e.parent.parent.parent.name;let r=null;switch(e.type){case 0:{const n=e;if(n.texture===null){n.texture=this._getTextureData(i,e.path)}else if(t!==null&&t.textureAtlasName.length>0){n.texture=this._getTextureData(t.textureAtlasName,e.path)}if(s!==null&&s.type===2&&this._isSupportMesh()){r=a.meshDisplay}else{r=a.rawDisplay}break}case 2:{const o=e;if(o.texture===null){o.texture=this._getTextureData(i,o.path)}else if(t!==null&&t.textureAtlasName.length>0){o.texture=this._getTextureData(t.textureAtlasName,o.path)}if(this._isSupportMesh()){r=a.meshDisplay}else{r=a.rawDisplay}break}case 1:{const l=e;const h=this._buildChildArmature(t,a,e);if(h!==null){h.inheritAnimation=l.inheritAnimation;if(!h.inheritAnimation){const _=l.actions.length>0?l.actions:h.armatureData.defaultActions;if(_.length>0){for(const f of _){const c=u.BaseObject.borrowObject(u.EventObject);u.EventObject.actionDataToInstance(f,c,a.armature);c.slot=a;a.armature._bufferAction(c,false)}}else{h.animation.play()}}l.armature=h.armatureData}r=h;break}case 3:break;default:break}return r}parseDragonBonesData(t,e=null,s=1){const a=t instanceof ArrayBuffer?n._binaryParser:this._dataParser;const i=a.parseDragonBonesData(t,s);while(true){const r=this._buildTextureAtlasData(null,null);if(a.parseTextureAtlasData(null,r,s)){this.addTextureAtlasData(r,e)}else{r.returnToPool();break}}if(i!==null){this.addDragonBonesData(i,e)}return i}parseTextureAtlasData(t,e,s=null,a=1){const i=this._buildTextureAtlasData(null,null);this._dataParser.parseTextureAtlasData(t,i,a);this._buildTextureAtlasData(i,e||null);this.addTextureAtlasData(i,s);return i}updateTextureAtlasData(t,s){const a=this.getTextureAtlasData(t);if(a!==null){for(let t=0,e=a.length;t<e;++t){if(t<s.length){this._buildTextureAtlasData(a[t],s[t])}}}}getDragonBonesData(t){return t in this._dragonBonesDataMap?this._dragonBonesDataMap[t]:null}addDragonBonesData(t,e=null){e=e!==null?e:t.name;if(e in this._dragonBonesDataMap){if(this._dragonBonesDataMap[e]===t){return}console.warn("Can not add same name data: "+e);return}this._dragonBonesDataMap[e]=t}removeDragonBonesData(t,e=true){if(t in this._dragonBonesDataMap){if(e){this._dragonBones.bufferObject(this._dragonBonesDataMap[t])}delete this._dragonBonesDataMap[t]}}getTextureAtlasData(t){return t in this._textureAtlasDataMap?this._textureAtlasDataMap[t]:null}addTextureAtlasData(t,e=null){e=e!==null?e:t.name;const s=e in this._textureAtlasDataMap?this._textureAtlasDataMap[e]:this._textureAtlasDataMap[e]=[];if(s.indexOf(t)<0){s.push(t)}}removeTextureAtlasData(t,e=true){if(t in this._textureAtlasDataMap){const s=this._textureAtlasDataMap[t];if(e){for(const a of s){this._dragonBones.bufferObject(a)}}delete this._textureAtlasDataMap[t]}}getArmatureData(t,e=""){const s=new o;if(!this._fillBuildArmaturePackage(s,e,t,"","")){return null}return s.armature}clear(e=true){for(let t in this._dragonBonesDataMap){if(e){this._dragonBones.bufferObject(this._dragonBonesDataMap[t])}delete this._dragonBonesDataMap[t]}for(let t in this._textureAtlasDataMap){if(e){const s=this._textureAtlasDataMap[t];for(const a of s){this._dragonBones.bufferObject(a)}}delete this._textureAtlasDataMap[t]}}buildArmature(t,e="",s="",a=""){const i=new o;if(!this._fillBuildArmaturePackage(i,e||"",t,s||"",a||"")){console.warn("No armature data: "+t+", "+(e!==null?e:""));return null}const r=this._buildArmature(i);this._buildBones(i,r);this._buildSlots(i,r);this._buildConstraints(i,r);r.invalidUpdate(null,true);r.advanceTime(0);return r}replaceDisplay(e,s,a=-1){if(a<0){a=e.displayIndex}if(a<0){a=0}e.replaceDisplayData(s,a);const i=e.displayList;if(i.length<=a){i.length=a+1;for(let t=0,e=i.length;t<e;++t){if(!i[t]){i[t]=null}}}if(s!==null){const r=e.rawDisplayDatas;let t=null;if(r){if(u.DragonBones.webAssembly){if(a<r.size()){t=r.get(a)}}else{if(a<r.length){t=r[a]}}}i[a]=this._getSlotDisplay(null,s,t,e)}else{i[a]=null}e.displayList=i}replaceSlotDisplay(t,e,s,a,i,r=-1){const n=this.getArmatureData(e,t||"");if(!n||!n.defaultSkin){return false}const o=n.defaultSkin.getDisplay(s,a);if(!o){return false}this.replaceDisplay(i,o,r);return true}replaceSlotDisplayList(t,e,s,a){const i=this.getArmatureData(e,t||"");if(!i||!i.defaultSkin){return false}const r=i.defaultSkin.getDisplays(s);if(!r){return false}let n=0;for(let t=0,e=u.DragonBones.webAssembly?r.size():r.length;t<e;++t){const o=u.DragonBones.webAssembly?r.get(t):r[t];this.replaceDisplay(a,o,n++)}return true}replaceSkin(t,e,a=false,i=null){let r=false;const n=e.parent.defaultSkin;for(const o of t.getSlots()){if(i!==null&&i.indexOf(o.name)>=0){continue}let s=e.getDisplays(o.name);if(!s){if(n!==null&&e!==n){s=n.getDisplays(o.name)}if(!s){if(a){o.rawDisplayDatas=null;o.displayList=[]}continue}}const l=u.DragonBones.webAssembly?s.size():s.length;const h=o.displayList;h.length=l;for(let t=0,e=l;t<e;++t){const _=u.DragonBones.webAssembly?s.get(t):s[t];if(_!==null){h[t]=this._getSlotDisplay(null,_,null,o)}else{h[t]=null}}r=true;o.rawDisplayDatas=s;o.displayList=h}return r}replaceAnimation(t,e,s=true){const a=e.defaultSkin;if(a===null){return false}if(s){t.animation.animations=e.animations}else{const i=t.animation.animations;const r={};for(let t in i){r[t]=i[t]}for(let t in e.animations){r[t]=e.animations[t]}t.animation.animations=r}for(const n of t.getSlots()){let t=0;for(const o of n.displayList){if(o instanceof u.Armature){const l=a.getDisplays(n.name);if(l!==null&&t<(u.DragonBones.webAssembly?l.size():l.length)){const h=u.DragonBones.webAssembly?l.get(t):l[t];if(h!==null&&h.type===1){const _=this.getArmatureData(h.path,h.parent.parent.parent.name);if(_){this.replaceAnimation(o,_,s)}}}}t++}}return true}getAllDragonBonesData(){return this._dragonBonesDataMap}getAllTextureAtlasData(){return this._textureAtlasDataMap}get clock(){return this._dragonBones.clock}get dragonBones(){return this._dragonBones}changeSkin(t,e,s=null){return this.replaceSkin(t,e,false,s)}copyAnimationsToArmature(t,e,s="",a="",i=true){s;const r=this.getArmatureData(e,a);if(!r){return false}return this.replaceAnimation(t,r,i)}}n._objectParser=null;n._binaryParser=null;u.BaseFactory=n;class o{constructor(){this.dataName="";this.textureAtlasName="";this.skin=null}}u.BuildArmaturePackage=o})(dragonBones||(dragonBones={}));var dragonBones;(function(t){class e extends t.TextureAtlasData{constructor(){super(...arguments);this._renderTexture=null}static toString(){return"[class dragonBones.LayaTextureAtlasData]"}_onClear(){super._onClear();if(this._renderTexture!==null){this._renderTexture.destroy()}this._renderTexture=null}createTexture(){return t.BaseObject.borrowObject(s)}get renderTexture(){return this._renderTexture}set renderTexture(t){if(this._renderTexture===t){return}this._renderTexture=t;if(this._renderTexture!==null){for(let t in this.textures){const e=this.textures[t];e.renderTexture=Laya.Texture.create(this._renderTexture,e.region.x,e.region.y,e.region.width,e.region.height)}}else{for(let t in this.textures){const e=this.textures[t];if(e.renderTexture){e.renderTexture.destroy()}e.renderTexture=null}}}}t.LayaTextureAtlasData=e;class s extends t.TextureData{constructor(){super(...arguments);this.renderTexture=null}static toString(){return"[class dragonBones.LayaTextureData]"}_onClear(){super._onClear();if(this.renderTexture!==null){this.renderTexture.destroy()}this.renderTexture=null}}t.LayaTextureData=s})(dragonBones||(dragonBones={}));var dragonBones;(function(e){class t extends Laya.Sprite{constructor(){super();this.debugDraw=false;this._debugDraw=false;this._armature=null;this._debugDrawer=null}dbInit(t){this._armature=t}dbClear(){this.offAll();if(this._debugDrawer!==null){}super.destroy(false)}dbUpdate(){const t=e.DragonBones.debugDraw||this.debugDraw;if(t||this._debugDraw){this._debugDraw=t;if(this._debugDraw){if(this._debugDrawer===null){this._debugDrawer=new Laya.Sprite}this.addChild(this._debugDrawer);const s=this._debugDrawer.graphics;s.clear();const a=this._armature.getBones();for(let t=0,e=a.length;t<e;++t){const r=a[t];const n=r.boneData.length;const o=r.globalTransformMatrix.tx;const l=r.globalTransformMatrix.ty;const h=o+r.globalTransformMatrix.a*n;const _=l+r.globalTransformMatrix.b*n;s.drawLine(o,l,h,_,"#00FFFFB2",2);s.drawCircle(o,l,3,"#00FFFFB2","#FFFFFFFF",0)}const i=this._armature.getSlots();for(let t=0,e=i.length;t<e;++t){const f=i[t];const c=f.boundingBoxData;if(c){let t=this._debugDrawer.getChildByName(f.name);if(!t){t=new Laya.Sprite;t.name=f.name;this._debugDrawer.addChild(t)}const u=t.graphics;u.clear();switch(c.type){case 0:u.drawRect(-c.width*.5,-c.height*.5,c.width,c.height,"#FF00FFB2","#FF00FFB2",2);break;case 1:break;case 2:const d=c.vertices;u.drawPoly(d[0],d[1],d,"#FF00FFB2","#FF00FFB2",2);break;default:break}f.updateTransformAndMatrix();f.updateGlobalTransform();const m=f.global;t.x=m.x;t.y=m.y;t.rotation=m.rotation;t.scaleX=m.scaleX;t.scaleY=m.scaleY;t.pivotX=f._pivotX;t.pivotY=f._pivotY}else{const p=this._debugDrawer.getChildByName(f.name);if(p){this._debugDrawer.removeChild(p)}}}}else if(this._debugDrawer!==null&&this._debugDrawer.parent===this){this.removeChild(this._debugDrawer)}}}dispose(t=true){t;if(this._armature!==null){this._armature.dispose();this._armature=null}}destroy(){this.dispose()}dispatchDBEvent(t,e){this.event(t,e)}hasDBEventListener(t){return this.hasListener(t)}addDBEventListener(t,e,s){this.on(t,s,e)}removeDBEventListener(t,e,s){this.off(t,s,e)}get armature(){return this._armature}get animation(){return this._armature.animation}hasEvent(t){return this.hasDBEventListener(t)}addEvent(t,e,s){this.addDBEventListener(t,e,s)}removeEvent(t,e,s){this.removeDBEventListener(t,e,s)}}e.LayaArmatureDisplay=t})(dragonBones||(dragonBones={}));var dragonBones;(function(r){class t extends r.Slot{static toString(){return"[class dragonBones.LayaSlot]"}_onClear(){super._onClear();this._textureScale=1;this._renderDisplay=null}_initDisplay(t,e){t;e}_disposeDisplay(t,e){t;if(!e){t.destroy(true)}}_onUpdateDisplay(){this._renderDisplay=this._display?this._display:this._rawDisplay}_addDisplay(){const t=this._armature.display;t.addChild(this._renderDisplay)}_replaceDisplay(t){const e=this._armature.display;const s=t;e.replaceChild(this._renderDisplay,s);e.removeChild(s)}_removeDisplay(){this._renderDisplay.parent.removeChild(this._renderDisplay)}_updateZOrder(){const t=this._armature.display;const e=t.getChildIndex(this._renderDisplay);if(e===this._zOrder){return}t.removeChild(this._renderDisplay);t.addChildAt(this._renderDisplay,this._zOrder)}_updateVisible(){this._renderDisplay.visible=this._parent.visible&&this._visible}_updateBlendMode(){if(this._renderDisplay instanceof Laya.Sprite){switch(this._blendMode){case 0:this._renderDisplay.blendMode="normal";break;case 1:this._renderDisplay.blendMode="add";break;case 3:this._renderDisplay.blendMode="normal";break;case 4:this._renderDisplay.blendMode="normal";break;case 6:this._renderDisplay.blendMode="normal";break;case 9:this._renderDisplay.blendMode="light";break;case 10:this._renderDisplay.blendMode="multiply";break;case 11:this._renderDisplay.blendMode="overlay";break;case 12:this._renderDisplay.blendMode="screen";break;default:break}}}_updateColor(){this._renderDisplay.alpha=this._colorTransform.alphaMultiplier;if(this._renderDisplay instanceof Laya.Sprite){const t=(Math.round(this._colorTransform.redMultiplier*255)<<16)+(Math.round(this._colorTransform.greenMultiplier*255)<<8)+Math.round(this._colorTransform.blueMultiplier*255)}}_updateFrame(){const e=this._deformVertices!==null&&this._display===this._meshDisplay?this._deformVertices.verticesData:null;let s=this._textureData;if(this._displayIndex>=0&&this._display!==null&&s!==null){let t=s.parent;if(this._armature.replacedTexture!==null&&this._rawDisplayDatas!==null&&this._rawDisplayDatas.indexOf(this._displayData)>=0){if(this._armature._replaceTextureAtlasData===null){t=r.BaseObject.borrowObject(r.LayaTextureAtlasData);t.copyFrom(s.parent);t.renderTexture=this._armature.replacedTexture;this._armature._replaceTextureAtlasData=t}else{t=this._armature._replaceTextureAtlasData}s=t.getTexture(s.name)}const a=s.renderTexture;if(a!==null){if(e!==null){}else{this._textureScale=s.parent.scale*this._armature._armatureData.scale;const i=this._renderDisplay;i.texture=a}this._visibleDirty=true;return}}if(e!==null){}else{const i=this._renderDisplay;i.x=0;i.y=0;i.visible=false}}_updateMesh(){}_updateGlueMesh(){}_updateTransform(){this.updateGlobalTransform();if(!this._renderDisplay.transform){this._renderDisplay.transform=new Laya.Matrix}const t=this.globalTransformMatrix;if(this._renderDisplay===this._rawDisplay||this._renderDisplay===this._meshDisplay){const e=this._renderDisplay.transform;e.a=t.a;e.b=t.b;e.c=t.c;e.d=t.d;e.tx=this.globalTransformMatrix.tx-(this.globalTransformMatrix.a*this._pivotX+this.globalTransformMatrix.c*this._pivotY);e.ty=this.globalTransformMatrix.ty-(this.globalTransformMatrix.b*this._pivotX+this.globalTransformMatrix.d*this._pivotY)}else{const e=this._renderDisplay.transform;e.a=t.a;e.b=t.b;e.c=t.c;e.d=t.d;e.tx=t.tx;e.ty=t.ty}}_identityTransform(){if(!this._renderDisplay.transform){this._renderDisplay.transform=new Laya.Matrix}const t=this._renderDisplay.transform;t.a=1;t.b=0;t.c=0;t.d=1;t.tx=0;t.ty=0}}r.LayaSlot=t})(dragonBones||(dragonBones={}));var dragonBones;(function(c){class t extends Laya.Sprite{updateTransform(t){if(!t&&!this.parent){return this}var e=this.parent;if(t){e=t}else if(!this.parent){e=Laya.stage}var s,a,i,r,n,o;if(this.rotation%Math.PI){if(this.rotation!==this.rotationCache){this.rotationCache=this.rotation;this._sr=Math.sin(this.rotation);this._cr=Math.cos(this.rotation)}var l=this.skew%c.Transform.PI_D;if(l>.01||l<-.01){s=this._cr*this.scaleX;a=this._sr*this.scaleX;i=-Math.sin(l+this.rotation)*this.scaleY;r=Math.cos(l+this.rotation)*this.scaleY;n=this.x;o=this.y}else{s=this._cr*this.scaleX;a=this._sr*this.scaleX;i=-this._sr*this.scaleY;r=this._cr*this.scaleY;n=this.x;o=this.y}if(this.pivotX||this.pivotY){n-=this.pivotX*s+this.pivotY*i;o-=this.pivotX*a+this.pivotY*r}}else{s=this.scaleX;a=0;i=0;r=this.scaleY;n=this.x-this.pivotX*s;o=this.y-this.pivotY*r}var h=s*r-a*i;if(s||a){var _=Math.sqrt(s*s+a*a)}else if(i||r){var f=Math.sqrt(i*i+r*r)}else{}this._currentBounds=null;return this}}c.LayaSlotDisplay=t})(dragonBones||(dragonBones={}));var dragonBones;(function(r){class s extends r.BaseFactory{constructor(t=null){super(t);if(s._dragonBonesInstance===null){const e=new r.LayaArmatureDisplay;s._dragonBonesInstance=new r.DragonBones(e);Laya.timer.frameLoop(1,this,s._clockHandler)}this._dragonBones=s._dragonBonesInstance}static get factory(){if(s._factory===null){s._factory=new s}return s._factory}static _clockHandler(){const t=Laya.timer.delta*.001;s._dragonBonesInstance.advanceTime(t)}_isSupportMesh(){console.warn("Laya-ce can not support mesh.");return false}_buildTextureAtlasData(t,e){if(t){t.renderTexture=e}else{t=r.BaseObject.borrowObject(r.LayaTextureAtlasData)}return t}_buildArmature(t){const e=r.BaseObject.borrowObject(r.Armature);const s=new r.LayaArmatureDisplay;e.init(t.armature,s,s,this._dragonBones);return e}_buildSlot(t,e,s){t;s;const a=r.BaseObject.borrowObject(r.LayaSlot);const i=new r.LayaSlotDisplay;a.init(e,s,i,i);return a}buildArmatureDisplay(t,e="",s="",a=""){const i=this.buildArmature(t,e||"",s||"",a||"");if(i!==null){this._dragonBones.clock.add(i);return i.display}return null}getTextureDisplay(t,e=null){const s=this._getTextureData(e!==null?e:"",t);if(s!==null&&s.renderTexture!==null){return new Laya.Sprite}return null}get soundEventManager(){return this._dragonBones.eventManager}}s._dragonBonesInstance=null;s._factory=null;r.LayaFactory=s})(dragonBones||(dragonBones={}));